syntax = "proto3";

option go_package = "./;proto";
option java_package = "com.github.go2o.rpc";

/** 订单状态 */
enum EOrderStatus {
    _3 = 0;
    /****** 在履行前,订单可以取消申请退款  ******/
    /** 等待支付 */
    StatAwaitingPayment = 1;
    /** 等待确认 */
    StatAwaitingConfirm = 2;
    /** 等待备货 */
    StatAwaitingPickup = 3;
    /** 等待发货 */
    StatAwaitingShipment = 4;

    /****** 订单取消 ******/

    /** 系统取消 */
    StatCancelled = 11;
    /** 买家申请取消,等待卖家确认 */
    StatAwaitingCancel = 12;
    /** 卖家谢绝订单,由于无货等原因 */
    StatDeclined = 13;
    /** 已退款,完成取消 */
    StatRefunded = 14;

    /****** 履行后订单只能退货或换货 ******/

    /** 部分发货(将订单商品分多个包裹发货) */
    PartiallyShipped = 5;
    /** 完成发货 */
    StatShipped = 6;
    /** 订单已拆分 */
    StatBreak = 7;
    /** 订单完成 */
    StatCompleted = 8;

    /****** 售后状态 ******/

    /** 已退货 */
    StatGoodsRefunded = 15;
}

// 订单商品项
message SOrderItem {
    // 编号
    int64 id = 1;
    // 商品快照编号
    int64 snapshotId = 2;
    // Sku编号
    int64 skuId = 3;
    // 商品编号
    int64 itemId = 4;
    // 商品标题
    string itemTitle = 5;
    // 商品图片
    string image = 6;
    // 商品单价
    int64 price = 7;
    // 商品实际单价
    int64 finalPrice = 8;
    // 商品数量
    int32 quantity = 9;
    // 退货数量
    int32 returnQuantity = 10;
    // 商品总金额
    int64 itemAmount = 11;
    // 商品实际总金额
    int64 finalAmount = 12;
    // 是否已发货
    bool isShipped = 13;
    // 其他信息
    map<string, string> data = 14;
}

message SParentOrder {
    // 买家
    int64 buyerId = 1;
    // 买家用户名
    string buyerUser = 2;
    // 订单号
    string orderNo = 3;
    // 商品
    int64 itemCount = 4;
    // 商品总金额
    int64 itemAmount = 5;
    // 抵扣金额
    int64 discountAmount = 6;
    // 优惠金额
    int64 deductAmount = 7;
    // 快递费
    int64 expressFee = 8;
    // 包装费
    int64 packageFee = 9;
    // 最终金额
    int64 finalAmount = 10;
    // 收货人
    SConsigneeInfo consignee = 18;
    // 子订单
    repeated SSubOrder subOrders = 11;
    // 是否支付
    bool isPaid = 12;
    // 状态
    int32 status = 13;
    // 状态文本
    string statusText = 14;
    // 下单时间
    sint64 createTime = 15;
}

message SSubOrder{
    // 订单号
    string orderNo = 1;
    // 店铺编号
    int64 shopId = 2;
    // 店铺名称
    string shopName = 3;
     // 商品总金额
    int64 itemAmount = 4;
    // 优惠金额
    int64 discountAmount = 5;
    // 抵扣金额
    int64 deductAmount = 6;
    // 调整金额
    int64 adjustAmount = 7;
    // 配送费
    int64 expressFee = 8;
    // 包装费
    int64 packageFee = 9;
    // 手续费
    int64 procedureFee = 10;
    // 订单总金额
    int64 totalAmount = 11;
    // 最终金额
    int64 finalAmount = 12;
    // 买家留言
    string buyerComment = 13;
    // 状态
    int32 status = 14;
    // 商品列表
    repeated SOrderItem items = 15;
    // 状态文本
    string statusText = 16;
}

// 子订单
message SSingleOrder {
    // 订单编号
    int64 orderId = 1;
    // 父订单编号
    int64 parentOrderId = 2;
    // 订单号
    string orderNo = 3;
    // 订单类型
    int32 orderType = 4;
    // 买家编号
    int64 buyerId = 5;
    // 卖家编号
    int64 sellerId = 6;
    // 店铺编号
    int64 shopId = 7;
    //int64 SubOrderId = 2;
    // 订单标题
    string subject = 8;
    // 商品总金额
    int64 itemAmount = 9;
    // 优惠金额
    int64 discountAmount = 10;
    // 抵扣金额
    int32 deductAmount = 11;
    // 调整金额
    int32 adjustAmount = 12;
    // 配送费
    int64 expressFee = 13;
    // 包装费
    int64 packageFee = 14;
    // 手续费
    int32 procedureFee = 15;
    // 订单总金额
    int32 totalAmount = 16;
    // 最终金额
    int64 finalAmount = 17;
    // 收货人
    SConsigneeInfo consignee = 18;
    // 收货地址是否已修改
    bool consigneeModified = 19;
    // 买家留言
    string buyerComment = 20;
    // 是否支付
    bool isPaid = 21;
    //sint32 IsBreak = 18;
    sint32 status = 22;
    // 下单时间
    sint64 submitTime = 23;
    //sint64 updateTime = 21;
    repeated SOrderItem items = 24;
    // 扩展信息
    map<string, string> data = 25;
    // 更新时间
    int64 updateTime = 26;
    // 是否为子订单
    //bool SubOrder = 27;
}

// 收货人信息
message SConsigneeInfo {
    // 收货人
    string consigneeName = 1;
    // 收货电话
    string consigneePhone = 2;
    // 配送地址
    string shippingAddress = 3;
}

// 更改订单收货人请求
message ChangeOrderAddressRequest{
    // 订单号
    string orderNo = 1;
    // 是否为子订单
    bool sub = 2;
    // 地址信息
    int64 addressId = 3;
}

//todo: 批发的参数改为属性而不是map
message SubmitOrderRequest {
    // 订单类型
    int32 orderType = 1;
    // 买家编号
    int64 buyerId = 2;
    // 收货地址编号
    int64 addressId = 3;
    // 订单标题
    string subject = 4;
    // 优惠券
    string couponCode = 5;
    // 推广返利用户代码
    string affliteCode = 6;
    // 是否使用余额抵扣
    bool balanceDiscount = 7;
    // 其他数据
    map<string, string> data = 8;
    // 交易类订单请求参数
    TradeOrderRequest tradeOrder = 9;
}


// 交易订单请求参数
message TradeOrderRequest {
    // 店铺编号
    int64 storeId = 1;
    // 交易金额
    int64 tradeAmount = 2;
    // 优惠比例
    float discount = 3; 
}

// 提交订单请求
message SubmitNormalOrderV2Request {
    // 买家编号
    int64 buyerId = 1;
    // 购物车编码
    string cartCode = 2;
    // 收货地址编号
    int64 addressId = 3;
    // 订单标题
    string subject = 4;
    // 优惠券
    string couponCode = 5;
    // 是否使用余额抵扣
    bool balanceDiscount = 6;
    // 推广返利用户代码
    string affliteCode = 7;
}

// 订单提交返回数据
message NormalOrderSubmitResponse {
    // 错误码
    int32 errCode = 1;
    // 错误信息
    string errMsg = 2;
    // 订单号，多个订单号，用","分割
    string orderNo = 3;
    // 合并支付
    bool mergePay = 4;
    // 交易号
    string tradeNo = 5;
    // 交易金额
    int64 tradeAmount = 6;
}

// 获取订单请求
message GetOrderRequest {
    // 订单号
    string orderNo = 1;
    // 是否为子订单
    bool subOrder = 2;
}

// 提交交易类订单请求
message TradeOrderSubmitRequest {
    // 订单
    SSingleOrder order = 1;
    // 优惠比例
    double rate = 2;
}

// 提交交易类订单凭据
message TradeOrderTicketRequest {
    sint64 orderId = 1;
    string image = 2;
}

message ComplexItemsResponse {
    repeated SOrderItem value =  1;
}

// 订单编号
message OrderId {
    int64 value =  1;
}

// 订单号
message OrderNo {
    // 订单号
    string orderNo = 1;
    // 是否为子订单
    bool sub = 2;
}

// 订单号
message OrderNoV2 {
    string value =  1;
}


message OrderIdOrNo {
    // 订单编号
    int64 id = 1;
    // 订单号
    string orderNo = 2;
}

message CancelOrderRequest {
    // 订单号
    string orderNo = 1;
    // 是否为子订单
    bool sub = 2;
    // 取消原因
    string reason = 3;
}

message OrderShipmentRequest {
    // 订单号
    string orderNo = 1;
    // 是否为子订单
    bool sub = 2;
    // 快递编号
    int64 providerId = 3;
    // 发货单号
    string shipOrderNo = 4;
}

/** 预生成订单请求 */
message PrepareOrderRequest {
    /** 买家编号 */
    int64 buyerId = 1;
    /** 购物车编码 */
    string cartCode = 2;
    /** 收货地址 */
    int64 addressId = 3;
    /** 优惠券 */
    string couponCode = 5;
    /** 支付方式 */
    int32 paymentFlag = 6;
    /** 使用余额 */
    string subject = 4;
}
/** 预生成订单响应 */
message PrepareOrderResponse{
    // 错误信息
    string error = 1;
    // 订单类型
    int32 orderType = 2;
    // 商品总金额
    int64 itemAmount = 3;
    // 优惠金额
    int64 discountAmount = 4;
    // 抵扣金额
    int32 deductAmount = 5;
    // 调整金额
    int32 adjustAmount = 6;
    // 配送费
    int64 expressFee = 7;
    // 包装费
    int64 packageFee = 8;
    // 手续费
    int32 procedureFee = 9;
    // 订单总金额
    int32 totalAmount = 10;
    // 最终金额
    int64 finalFee = 11;
    // 收货人
    SConsigneeInfo consignee = 12;
    // 订单项目
    repeated SPrepareOrderGroup groups = 13;
    // 买家留言
    string buyerComment = 14;
}

// 预生成订单店铺分组
message SPrepareOrderGroup {
    //店铺编号
    sint64 shopId = 1;
    //供货商编号
    sint64 vendorId = 2;
    //店铺名称
    string shopName = 3;
    //商品
    repeated SPrepareOrderItem items = 5;
}

// 预生成订单店铺商品
message SPrepareOrderItem {
    //商品编号
    sint64 itemId = 1;
    //SKU编号
    sint64 skuId = 2;
    //商品标题
    string title = 3;
    //商品图片
    string image = 4;
    //规格文本
    string specWord = 5;
    //销售价
    double price = 8;
    //数量
    sint32 quantity = 9;
}

/** 查询订单返利请求 */
message QueryRebateListRequest{
    /** 自定义参数 */
}

/** 查询订单返利响应 */
message QueryRebateListResponse{
    repeated SRebateList value = 1;
}

/** 订单返利 */
message SRebateList{
    /** 编号 */
    int64 id = 1;
    /** 返利方案Id */
    int32 planId = 2;
    /** 成交人Id */
    int64 traderId = 3;
    /** 分享码 */
    string affiliateCode = 4;
    /** 订单号 */
    string orderNo = 5;
    /** 订单标题 */
    string orderSubject = 6;
    /** 订单金额 */
    int64 orderAmount = 7;
    /** 返利金额 */
    int64 rebaseAmount = 8;
    /** 返利状态 */
    int32 status = 9;
    /** 创建时间 */
    int64 createTime = 10;
    /** 更新时间 */
    int64 updateTime = 11;
}

/** 订单返利详情 */
message SRebateItem{
    /** 编号 */
    int32 id = 1;
    /** 返利单Id */
    int64 debateId = 2;
    /** 商品编号 */
    int64 itemId = 3;
    /** 商品名称 */
    string itemName = 4;
    /** 商品图片 */
    string itemImage = 5;
    /** 商品金额 */
    int64 itemAmount = 6;
    /** 返利金额 */
    int64 rebateAmount = 7;
}
