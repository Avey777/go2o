syntax = "proto3";

option go_package = "./;proto";
option java_package = "com.github.go2o.rpc";

/** 订单状态 */
enum EOrderStatus {
    _3 = 0;
    /****** 在履行前,订单可以取消申请退款  ******/
    /** 等待支付 */
    StatAwaitingPayment = 1;
    /** 等待确认 */
    StatAwaitingConfirm = 2;
    /** 等待备货 */
    StatAwaitingPickup = 3;
    /** 等待发货 */
    StatAwaitingShipment = 4;

    /****** 订单取消 ******/

    /** 系统取消 */
    StatCancelled = 11;
    /** 买家申请取消,等待卖家确认 */
    StatAwaitingCancel = 12;
    /** 卖家谢绝订单,由于无货等原因 */
    StatDeclined = 13;
    /** 已退款,完成取消 */
    StatRefunded = 14;

    /****** 履行后订单只能退货或换货 ******/

    /** 部分发货(将订单商品分多个包裹发货) */
    PartiallyShipped = 5;
    /** 完成发货 */
    StatShipped = 6;
    /** 订单已拆分 */
    StatBreak = 7;
    /** 订单完成 */
    StatCompleted = 8;

    /****** 售后状态 ******/

    /** 已退货 */
    StatGoodsRefunded = 15;
}

// 订单商品项
message SOrderItem {
    // 编号
    int64 id = 1;
    // 商品快照编号
    int64 SnapshotId = 2;
    // Sku编号
    int64 SkuId = 3;
    // 商品编号
    int64 ItemId = 4;
    // 商品标题
    string ItemTitle = 5;
    // 商品图片
    string image = 6;
    // 商品单价
    int64 Price = 7;
    // 商品实际单价
    int64 FinalPrice = 8;
    // 商品数量
    int32 Quantity = 9;
    // 退货数量
    int32 ReturnQuantity = 10;
    // 商品总金额
    int64 ItemAmount = 11;
    // 商品实际总金额
    int64 FinalAmount = 12;
    // 是否已发货
    bool IsShipped = 13;
    // 其他信息
    map<string, string> Data = 14;
}

message SParentOrder {
    // 买家
    int64 BuyerId = 1;
    // 买家用户名
    string BuyerUser = 2;
    // 订单号
    string OrderNo = 3;
    // 商品
    int64 ItemCount = 4;
    // 商品总金额
    int64 ItemAmount = 5;
    // 抵扣金额
    int64 DiscountAmount = 6;
    // 优惠金额
    int64 DeductAmount = 7;
    // 快递费
    int64 ExpressFee = 8;
    // 包装费
    int64 PackageFee = 9;
    // 最终金额
    int64 FinalAmount = 10;
    // 收货人
    SConsigneeInfo Consignee = 18;
    // 子订单
    repeated SSubOrder SubOrders = 11;
    // 是否支付
    bool IsPaid = 12;
    // 状态
    int32 Status = 13;
    // 状态文本
    string StatusText = 14;
    // 下单时间
    sint64 CreateTime = 15;
}

message SSubOrder{
    // 订单号
    string OrderNo = 1;
    // 店铺编号
    int64 ShopId = 2;
    // 店铺名称
    string ShopName = 3;
     // 商品总金额
    int64 ItemAmount = 4;
    // 优惠金额
    int64 DiscountAmount = 5;
    // 抵扣金额
    int64 DeductAmount = 6;
    // 调整金额
    int64 AdjustAmount = 7;
    // 配送费
    int64 ExpressFee = 8;
    // 包装费
    int64 PackageFee = 9;
    // 手续费
    int64 ProcedureFee = 10;
    // 订单总金额
    int64 TotalAmount = 11;
    // 最终金额
    int64 FinalAmount = 12;
    // 买家留言
    string BuyerComment = 13;
    // 状态
    int32 Status = 14;
    // 商品列表
    repeated SOrderItem Items = 15;
    // 状态文本
    string StatusText = 16;
}

// 子订单
message SSingleOrder {
    // 订单编号
    int64 OrderId = 1;
    // 父订单编号
    int64 ParentOrderId = 2;
    // 订单号
    string OrderNo = 3;
    // 订单类型
    int32 OrderType = 4;
    // 买家编号
    int64 BuyerId = 5;
    // 卖家编号
    int64 SellerId = 6;
    // 店铺编号
    int64 ShopId = 7;
    //int64 SubOrderId = 2;
    // 订单标题
    string Subject = 8;
    // 商品总金额
    int64 ItemAmount = 9;
    // 优惠金额
    int64 DiscountAmount = 10;
    // 抵扣金额
    int32 DeductAmount = 11;
    // 调整金额
    int32 AdjustAmount = 12;
    // 配送费
    int64 ExpressFee = 13;
    // 包装费
    int64 PackageFee = 14;
    // 手续费
    int32 ProcedureFee = 15;
    // 订单总金额
    int32 TotalAmount = 16;
    // 最终金额
    int64 FinalAmount = 17;
    // 收货人
    SConsigneeInfo Consignee = 18;
    // 买家留言
    string BuyerComment = 19;
       // 是否支付
    bool IsPaid = 20;
    //sint32 IsBreak = 18;
    sint32 Status = 21;
    // 下单时间
    sint64 SubmitTime = 22;
    //sint64 UpdateTime = 21;
    repeated SOrderItem Items = 23;
    // 扩展信息
    map<string, string> Data = 25;
    // 更新时间
    int64 UpdateTime = 24;
    // 是否为子订单
    //bool SubOrder = 24;
}

// 收货人信息
message SConsigneeInfo {
    // 收货人
    string ConsigneeName = 1;
    // 收货电话
    string ConsigneePhone = 12;
    // 配送地址
    string ShippingAddress = 13;
}

//todo: 批发的参数改为属性而不是map
message SubmitOrderRequest {
    sint64 BuyerId = 1;
    sint32 CartType = 2;
    map<string, string> Data = 3;
}

// 提交订单请求
message SubmitNormalOrderV2Request {
    int64 BuyerId = 1;
    string CartCode = 2;
    int64 AddressId = 3;
    string Subject = 4;
    string CouponCode = 5;
    bool BalanceDiscount = 6;
}

// 订单提交返回数据
message NormalOrderSubmitResponse {
    // 错误码
    int64 ErrCode = 1;
    // 错误信息
    string ErrMsg = 2;
    // 订单号，多个订单号，用","分割
    string OrderNo = 3;
    // 合并支付
    bool MergePay = 4;
    // 交易号
    string TradeNo = 5;
    // 交易金额
    int64 TradeAmount = 6;
}

message GetOrderRequest {
    string OrderNo = 1;
    bool SubOrder = 2;
}

message TradeOrderSubmitRequest {
    SSingleOrder Order = 1;
    double Rate = 2;
}

message TradeOrderTicketRequest {
    sint64 OrderId = 1;
    string Img = 2;
}

message ComplexItemsResponse {
    repeated SOrderItem Value =  1;
}

// 订单编号
message OrderId {
    int64 Value =  1;
}

// 订单号
message OrderNo {
    // 订单号
    string OrderNo = 1;
    // 是否为子订单
    bool Sub = 2;
}

// 订单号
message OrderNoV2 {
    string Value =  1;
}


message OrderIdOrNo {
    // 订单编号
    int64 id = 1;
    // 订单号
    string OrderNo = 2;
}

message CancelOrderRequest {
    // 订单号
    string OrderNo = 1;
    // 是否为子订单
    bool Sub = 2;
    // 取消原因
    string Reason = 3;
}

message OrderShipmentRequest {
    // 订单号
    string OrderNo = 1;
    // 是否为子订单
    bool Sub = 2;
    // 快递编号
    int64 ProviderId = 3;
    // 发货单号
    string ShipOrderNo = 4;
}

/** 预生成订单请求 */
message PrepareOrderRequest {
    /** 买家编号 */
    int64 BuyerId = 1;
    /** 购物车编码 */
    string CartCode = 2;
    /** 收货地址 */
    int64 AddressId = 3;
    /** 优惠券 */
    string CouponCode = 5;
    /** 支付方式 */
    int32 PaymentFlag = 6;
    /** 使用余额 */
    string Subject = 4;
}
/** 预生成订单响应 */
message PrepareOrderResponse{
    // 错误信息
    string Error = 1;
    // 订单类型
    int32 OrderType = 2;
    // 商品总金额
    int64 ItemAmount = 3;
    // 优惠金额
    int64 DiscountAmount = 4;
    // 抵扣金额
    int32 DeductAmount = 5;
    // 调整金额
    int32 AdjustAmount = 6;
    // 配送费
    int64 ExpressFee = 7;
    // 包装费
    int64 PackageFee = 8;
    // 手续费
    int32 ProcedureFee = 9;
    // 订单总金额
    int32 TotalAmount = 10;
    // 最终金额
    int64 FinalFee = 11;
    // 收货人
    SConsigneeInfo Consignee = 12;
    // 订单项目
    repeated SPrepareOrderGroup Groups = 13;
    // 买家留言
    string BuyerComment = 14;
}

// 预生成订单店铺分组
message SPrepareOrderGroup {
    //店铺编号
    sint64 ShopId = 1;
    //供货商编号
    sint64 VendorId = 2;
    //店铺名称
    string ShopName = 3;
    //商品
    repeated SPrepareOrderItem Items = 5;
}

// 预生成订单店铺商品
message SPrepareOrderItem {
    //商品编号
    sint64 ItemId = 1;
    //SKU编号
    sint64 SkuId = 2;
    //商品标题
    string Title = 3;
    //商品图片
    string image = 4;
    //规格文本
    string SpecWord = 5;
    //销售价
    double Price = 8;
    //数量
    sint32 Quantity = 9;
}
