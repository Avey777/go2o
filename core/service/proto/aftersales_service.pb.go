// Code generated by protoc-gen-go. DO NOT EDIT.
// source: aftersales_service.proto

package proto // import "./"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type EAfterSalesType int32

const (
	// 默认
	EAfterSalesType_TypeUnset EAfterSalesType = 0
	// 退款申请(部分退款)
	EAfterSalesType_TypeRefund EAfterSalesType = 1
	// 退货
	EAfterSalesType_TypeReturn EAfterSalesType = 2
	// 换货
	EAfterSalesType_TypeExchange EAfterSalesType = 3
	// 服务/维修
	EAfterSalesType_TypeService EAfterSalesType = 4
)

var EAfterSalesType_name = map[int32]string{
	0: "TypeUnset",
	1: "TypeRefund",
	2: "TypeReturn",
	3: "TypeExchange",
	4: "TypeService",
}
var EAfterSalesType_value = map[string]int32{
	"TypeUnset":    0,
	"TypeRefund":   1,
	"TypeReturn":   2,
	"TypeExchange": 3,
	"TypeService":  4,
}

func (x EAfterSalesType) String() string {
	return proto.EnumName(EAfterSalesType_name, int32(x))
}
func (EAfterSalesType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_aftersales_service_e5cd7e9d361f265e, []int{0}
}

// 售后单订单号
type AfterSalesOrderNo struct {
	// 订单号
	OrderNo              string   `protobuf:"bytes,1,opt,name=OrderNo,json=orderNo,proto3" json:"OrderNo"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AfterSalesOrderNo) Reset()         { *m = AfterSalesOrderNo{} }
func (m *AfterSalesOrderNo) String() string { return proto.CompactTextString(m) }
func (*AfterSalesOrderNo) ProtoMessage()    {}
func (*AfterSalesOrderNo) Descriptor() ([]byte, []int) {
	return fileDescriptor_aftersales_service_e5cd7e9d361f265e, []int{0}
}
func (m *AfterSalesOrderNo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AfterSalesOrderNo.Unmarshal(m, b)
}
func (m *AfterSalesOrderNo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AfterSalesOrderNo.Marshal(b, m, deterministic)
}
func (dst *AfterSalesOrderNo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AfterSalesOrderNo.Merge(dst, src)
}
func (m *AfterSalesOrderNo) XXX_Size() int {
	return xxx_messageInfo_AfterSalesOrderNo.Size(m)
}
func (m *AfterSalesOrderNo) XXX_DiscardUnknown() {
	xxx_messageInfo_AfterSalesOrderNo.DiscardUnknown(m)
}

var xxx_messageInfo_AfterSalesOrderNo proto.InternalMessageInfo

func (m *AfterSalesOrderNo) GetOrderNo() string {
	if m != nil {
		return m.OrderNo
	}
	return ""
}

// 售后单处理请求
type AfterSalesProcessRequest struct {
	// 订单号
	OrderNo string `protobuf:"bytes,1,opt,name=OrderNo,json=orderNo,proto3" json:"OrderNo"`
	// 备注
	Remark string `protobuf:"bytes,2,opt,name=Remark,json=remark,proto3" json:"Remark"`
	// 是否为客服介入处理
	IsIntercede          bool     `protobuf:"varint,3,opt,name=IsIntercede,json=isIntercede,proto3" json:"IsIntercede"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AfterSalesProcessRequest) Reset()         { *m = AfterSalesProcessRequest{} }
func (m *AfterSalesProcessRequest) String() string { return proto.CompactTextString(m) }
func (*AfterSalesProcessRequest) ProtoMessage()    {}
func (*AfterSalesProcessRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_aftersales_service_e5cd7e9d361f265e, []int{1}
}
func (m *AfterSalesProcessRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AfterSalesProcessRequest.Unmarshal(m, b)
}
func (m *AfterSalesProcessRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AfterSalesProcessRequest.Marshal(b, m, deterministic)
}
func (dst *AfterSalesProcessRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AfterSalesProcessRequest.Merge(dst, src)
}
func (m *AfterSalesProcessRequest) XXX_Size() int {
	return xxx_messageInfo_AfterSalesProcessRequest.Size(m)
}
func (m *AfterSalesProcessRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AfterSalesProcessRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AfterSalesProcessRequest proto.InternalMessageInfo

func (m *AfterSalesProcessRequest) GetOrderNo() string {
	if m != nil {
		return m.OrderNo
	}
	return ""
}

func (m *AfterSalesProcessRequest) GetRemark() string {
	if m != nil {
		return m.Remark
	}
	return ""
}

func (m *AfterSalesProcessRequest) GetIsIntercede() bool {
	if m != nil {
		return m.IsIntercede
	}
	return false
}

// 原实际销售的订单编号
type OriginOrderIdRequest struct {
	OrderId              int64    `protobuf:"varint,1,opt,name=OrderId,json=orderId,proto3" json:"OrderId"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OriginOrderIdRequest) Reset()         { *m = OriginOrderIdRequest{} }
func (m *OriginOrderIdRequest) String() string { return proto.CompactTextString(m) }
func (*OriginOrderIdRequest) ProtoMessage()    {}
func (*OriginOrderIdRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_aftersales_service_e5cd7e9d361f265e, []int{2}
}
func (m *OriginOrderIdRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OriginOrderIdRequest.Unmarshal(m, b)
}
func (m *OriginOrderIdRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OriginOrderIdRequest.Marshal(b, m, deterministic)
}
func (dst *OriginOrderIdRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OriginOrderIdRequest.Merge(dst, src)
}
func (m *OriginOrderIdRequest) XXX_Size() int {
	return xxx_messageInfo_OriginOrderIdRequest.Size(m)
}
func (m *OriginOrderIdRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_OriginOrderIdRequest.DiscardUnknown(m)
}

var xxx_messageInfo_OriginOrderIdRequest proto.InternalMessageInfo

func (m *OriginOrderIdRequest) GetOrderId() int64 {
	if m != nil {
		return m.OrderId
	}
	return 0
}

// 订单售后申请
type SubmitAfterSalesOrderRequest struct {
	// 订单编号
	OrderId int64 `protobuf:"varint,1,opt,name=OrderId,json=orderId,proto3" json:"OrderId"`
	// 售后类型
	AfterSalesType EAfterSalesType `protobuf:"varint,2,opt,name=AfterSalesType,json=afterSalesType,proto3,enum=EAfterSalesType" json:"AfterSalesType"`
	// 商品快照编号
	ItemSnapshotId int64 `protobuf:"varint,3,opt,name=ItemSnapshotId,json=itemSnapshotId,proto3" json:"ItemSnapshotId"`
	// 数量
	Quantity int64 `protobuf:"varint,4,opt,name=Quantity,json=quantity,proto3" json:"Quantity"`
	// 原因
	Reason string `protobuf:"bytes,5,opt,name=Reason,json=reason,proto3" json:"Reason"`
	// 图片
	Images               []string `protobuf:"bytes,6,rep,name=Images,json=images,proto3" json:"Images"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SubmitAfterSalesOrderRequest) Reset()         { *m = SubmitAfterSalesOrderRequest{} }
func (m *SubmitAfterSalesOrderRequest) String() string { return proto.CompactTextString(m) }
func (*SubmitAfterSalesOrderRequest) ProtoMessage()    {}
func (*SubmitAfterSalesOrderRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_aftersales_service_e5cd7e9d361f265e, []int{3}
}
func (m *SubmitAfterSalesOrderRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubmitAfterSalesOrderRequest.Unmarshal(m, b)
}
func (m *SubmitAfterSalesOrderRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubmitAfterSalesOrderRequest.Marshal(b, m, deterministic)
}
func (dst *SubmitAfterSalesOrderRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubmitAfterSalesOrderRequest.Merge(dst, src)
}
func (m *SubmitAfterSalesOrderRequest) XXX_Size() int {
	return xxx_messageInfo_SubmitAfterSalesOrderRequest.Size(m)
}
func (m *SubmitAfterSalesOrderRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SubmitAfterSalesOrderRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SubmitAfterSalesOrderRequest proto.InternalMessageInfo

func (m *SubmitAfterSalesOrderRequest) GetOrderId() int64 {
	if m != nil {
		return m.OrderId
	}
	return 0
}

func (m *SubmitAfterSalesOrderRequest) GetAfterSalesType() EAfterSalesType {
	if m != nil {
		return m.AfterSalesType
	}
	return EAfterSalesType_TypeUnset
}

func (m *SubmitAfterSalesOrderRequest) GetItemSnapshotId() int64 {
	if m != nil {
		return m.ItemSnapshotId
	}
	return 0
}

func (m *SubmitAfterSalesOrderRequest) GetQuantity() int64 {
	if m != nil {
		return m.Quantity
	}
	return 0
}

func (m *SubmitAfterSalesOrderRequest) GetReason() string {
	if m != nil {
		return m.Reason
	}
	return ""
}

func (m *SubmitAfterSalesOrderRequest) GetImages() []string {
	if m != nil {
		return m.Images
	}
	return nil
}

// 提交售后订单响应
type SubmitAfterSalesOrderResponse struct {
	// 状态码
	ErrCode int64 `protobuf:"varint,1,opt,name=ErrCode,json=errCode,proto3" json:"ErrCode"`
	// 错误信息
	ErrMsg string `protobuf:"bytes,2,opt,name=ErrMsg,json=errMsg,proto3" json:"ErrMsg"`
	// 售后单号
	AfterSalesOrderNo    string   `protobuf:"bytes,3,opt,name=AfterSalesOrderNo,json=afterSalesOrderNo,proto3" json:"AfterSalesOrderNo"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SubmitAfterSalesOrderResponse) Reset()         { *m = SubmitAfterSalesOrderResponse{} }
func (m *SubmitAfterSalesOrderResponse) String() string { return proto.CompactTextString(m) }
func (*SubmitAfterSalesOrderResponse) ProtoMessage()    {}
func (*SubmitAfterSalesOrderResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_aftersales_service_e5cd7e9d361f265e, []int{4}
}
func (m *SubmitAfterSalesOrderResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubmitAfterSalesOrderResponse.Unmarshal(m, b)
}
func (m *SubmitAfterSalesOrderResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubmitAfterSalesOrderResponse.Marshal(b, m, deterministic)
}
func (dst *SubmitAfterSalesOrderResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubmitAfterSalesOrderResponse.Merge(dst, src)
}
func (m *SubmitAfterSalesOrderResponse) XXX_Size() int {
	return xxx_messageInfo_SubmitAfterSalesOrderResponse.Size(m)
}
func (m *SubmitAfterSalesOrderResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SubmitAfterSalesOrderResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SubmitAfterSalesOrderResponse proto.InternalMessageInfo

func (m *SubmitAfterSalesOrderResponse) GetErrCode() int64 {
	if m != nil {
		return m.ErrCode
	}
	return 0
}

func (m *SubmitAfterSalesOrderResponse) GetErrMsg() string {
	if m != nil {
		return m.ErrMsg
	}
	return ""
}

func (m *SubmitAfterSalesOrderResponse) GetAfterSalesOrderNo() string {
	if m != nil {
		return m.AfterSalesOrderNo
	}
	return ""
}

type AfterSalesOrderListResponse struct {
	Value                []*SAfterSalesOrder `protobuf:"bytes,1,rep,name=Value,json=value,proto3" json:"Value"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *AfterSalesOrderListResponse) Reset()         { *m = AfterSalesOrderListResponse{} }
func (m *AfterSalesOrderListResponse) String() string { return proto.CompactTextString(m) }
func (*AfterSalesOrderListResponse) ProtoMessage()    {}
func (*AfterSalesOrderListResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_aftersales_service_e5cd7e9d361f265e, []int{5}
}
func (m *AfterSalesOrderListResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AfterSalesOrderListResponse.Unmarshal(m, b)
}
func (m *AfterSalesOrderListResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AfterSalesOrderListResponse.Marshal(b, m, deterministic)
}
func (dst *AfterSalesOrderListResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AfterSalesOrderListResponse.Merge(dst, src)
}
func (m *AfterSalesOrderListResponse) XXX_Size() int {
	return xxx_messageInfo_AfterSalesOrderListResponse.Size(m)
}
func (m *AfterSalesOrderListResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AfterSalesOrderListResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AfterSalesOrderListResponse proto.InternalMessageInfo

func (m *AfterSalesOrderListResponse) GetValue() []*SAfterSalesOrder {
	if m != nil {
		return m.Value
	}
	return nil
}

type PagingBuyerOrdersRequest struct {
	BuyerId              int64          `protobuf:"varint,1,opt,name=BuyerId,json=buyerId,proto3" json:"BuyerId"`
	Params               *SPagingParams `protobuf:"bytes,2,opt,name=Params,json=params,proto3" json:"Params"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *PagingBuyerOrdersRequest) Reset()         { *m = PagingBuyerOrdersRequest{} }
func (m *PagingBuyerOrdersRequest) String() string { return proto.CompactTextString(m) }
func (*PagingBuyerOrdersRequest) ProtoMessage()    {}
func (*PagingBuyerOrdersRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_aftersales_service_e5cd7e9d361f265e, []int{6}
}
func (m *PagingBuyerOrdersRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PagingBuyerOrdersRequest.Unmarshal(m, b)
}
func (m *PagingBuyerOrdersRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PagingBuyerOrdersRequest.Marshal(b, m, deterministic)
}
func (dst *PagingBuyerOrdersRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PagingBuyerOrdersRequest.Merge(dst, src)
}
func (m *PagingBuyerOrdersRequest) XXX_Size() int {
	return xxx_messageInfo_PagingBuyerOrdersRequest.Size(m)
}
func (m *PagingBuyerOrdersRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PagingBuyerOrdersRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PagingBuyerOrdersRequest proto.InternalMessageInfo

func (m *PagingBuyerOrdersRequest) GetBuyerId() int64 {
	if m != nil {
		return m.BuyerId
	}
	return 0
}

func (m *PagingBuyerOrdersRequest) GetParams() *SPagingParams {
	if m != nil {
		return m.Params
	}
	return nil
}

type PagingSellerOrdersRequest struct {
	SellerId             int64          `protobuf:"varint,1,opt,name=SellerId,json=sellerId,proto3" json:"SellerId"`
	Params               *SPagingParams `protobuf:"bytes,2,opt,name=Params,json=params,proto3" json:"Params"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *PagingSellerOrdersRequest) Reset()         { *m = PagingSellerOrdersRequest{} }
func (m *PagingSellerOrdersRequest) String() string { return proto.CompactTextString(m) }
func (*PagingSellerOrdersRequest) ProtoMessage()    {}
func (*PagingSellerOrdersRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_aftersales_service_e5cd7e9d361f265e, []int{7}
}
func (m *PagingSellerOrdersRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PagingSellerOrdersRequest.Unmarshal(m, b)
}
func (m *PagingSellerOrdersRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PagingSellerOrdersRequest.Marshal(b, m, deterministic)
}
func (dst *PagingSellerOrdersRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PagingSellerOrdersRequest.Merge(dst, src)
}
func (m *PagingSellerOrdersRequest) XXX_Size() int {
	return xxx_messageInfo_PagingSellerOrdersRequest.Size(m)
}
func (m *PagingSellerOrdersRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PagingSellerOrdersRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PagingSellerOrdersRequest proto.InternalMessageInfo

func (m *PagingSellerOrdersRequest) GetSellerId() int64 {
	if m != nil {
		return m.SellerId
	}
	return 0
}

func (m *PagingSellerOrdersRequest) GetParams() *SPagingParams {
	if m != nil {
		return m.Params
	}
	return nil
}

type PagingBuyerAfterSalesOrderListResponse struct {
	Total                int64                          `protobuf:"varint,1,opt,name=total,proto3" json:"total"`
	Data                 []*SPagingBuyerAfterSalesOrder `protobuf:"bytes,2,rep,name=Data,json=data,proto3" json:"Data"`
	XXX_NoUnkeyedLiteral struct{}                       `json:"-"`
	XXX_unrecognized     []byte                         `json:"-"`
	XXX_sizecache        int32                          `json:"-"`
}

func (m *PagingBuyerAfterSalesOrderListResponse) Reset() {
	*m = PagingBuyerAfterSalesOrderListResponse{}
}
func (m *PagingBuyerAfterSalesOrderListResponse) String() string { return proto.CompactTextString(m) }
func (*PagingBuyerAfterSalesOrderListResponse) ProtoMessage()    {}
func (*PagingBuyerAfterSalesOrderListResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_aftersales_service_e5cd7e9d361f265e, []int{8}
}
func (m *PagingBuyerAfterSalesOrderListResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PagingBuyerAfterSalesOrderListResponse.Unmarshal(m, b)
}
func (m *PagingBuyerAfterSalesOrderListResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PagingBuyerAfterSalesOrderListResponse.Marshal(b, m, deterministic)
}
func (dst *PagingBuyerAfterSalesOrderListResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PagingBuyerAfterSalesOrderListResponse.Merge(dst, src)
}
func (m *PagingBuyerAfterSalesOrderListResponse) XXX_Size() int {
	return xxx_messageInfo_PagingBuyerAfterSalesOrderListResponse.Size(m)
}
func (m *PagingBuyerAfterSalesOrderListResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PagingBuyerAfterSalesOrderListResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PagingBuyerAfterSalesOrderListResponse proto.InternalMessageInfo

func (m *PagingBuyerAfterSalesOrderListResponse) GetTotal() int64 {
	if m != nil {
		return m.Total
	}
	return 0
}

func (m *PagingBuyerAfterSalesOrderListResponse) GetData() []*SPagingBuyerAfterSalesOrder {
	if m != nil {
		return m.Data
	}
	return nil
}

type PagingSellerAfterSalesOrderListResponse struct {
	Total                int64                           `protobuf:"varint,1,opt,name=total,proto3" json:"total"`
	Data                 []*SPagingSellerAfterSalesOrder `protobuf:"bytes,2,rep,name=Data,json=data,proto3" json:"Data"`
	XXX_NoUnkeyedLiteral struct{}                        `json:"-"`
	XXX_unrecognized     []byte                          `json:"-"`
	XXX_sizecache        int32                           `json:"-"`
}

func (m *PagingSellerAfterSalesOrderListResponse) Reset() {
	*m = PagingSellerAfterSalesOrderListResponse{}
}
func (m *PagingSellerAfterSalesOrderListResponse) String() string { return proto.CompactTextString(m) }
func (*PagingSellerAfterSalesOrderListResponse) ProtoMessage()    {}
func (*PagingSellerAfterSalesOrderListResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_aftersales_service_e5cd7e9d361f265e, []int{9}
}
func (m *PagingSellerAfterSalesOrderListResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PagingSellerAfterSalesOrderListResponse.Unmarshal(m, b)
}
func (m *PagingSellerAfterSalesOrderListResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PagingSellerAfterSalesOrderListResponse.Marshal(b, m, deterministic)
}
func (dst *PagingSellerAfterSalesOrderListResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PagingSellerAfterSalesOrderListResponse.Merge(dst, src)
}
func (m *PagingSellerAfterSalesOrderListResponse) XXX_Size() int {
	return xxx_messageInfo_PagingSellerAfterSalesOrderListResponse.Size(m)
}
func (m *PagingSellerAfterSalesOrderListResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PagingSellerAfterSalesOrderListResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PagingSellerAfterSalesOrderListResponse proto.InternalMessageInfo

func (m *PagingSellerAfterSalesOrderListResponse) GetTotal() int64 {
	if m != nil {
		return m.Total
	}
	return 0
}

func (m *PagingSellerAfterSalesOrderListResponse) GetData() []*SPagingSellerAfterSalesOrder {
	if m != nil {
		return m.Data
	}
	return nil
}

// 售后单
type SAfterSalesOrder struct {
	// 编号
	Id int64 `protobuf:"varint,21,opt,name=Id,json=id,proto3" json:"Id"`
	// 售后单单号
	OrderNo string `protobuf:"bytes,1,opt,name=OrderNo,json=orderNo,proto3" json:"OrderNo"`
	// 订单编号
	RelateOrderId int64 `protobuf:"varint,2,opt,name=RelateOrderId,json=relateOrderId,proto3" json:"RelateOrderId"`
	// 运营商编号
	VendorId int64 `protobuf:"varint,3,opt,name=VendorId,json=vendorId,proto3" json:"VendorId"`
	// 购买者编号
	BuyerId int64 `protobuf:"varint,4,opt,name=BuyerId,json=buyerId,proto3" json:"BuyerId"`
	// 类型，退货、换货、维修
	AfterSalesType int32 `protobuf:"varint,5,opt,name=AfterSalesType,json=afterSalesType,proto3" json:"AfterSalesType"`
	// 退货的商品项编号
	SnapshotId int64 `protobuf:"varint,6,opt,name=SnapshotId,json=snapshotId,proto3" json:"SnapshotId"`
	// 商品数量
	Quantity int32 `protobuf:"varint,7,opt,name=Quantity,json=quantity,proto3" json:"Quantity"`
	// 售后原因
	Reason string `protobuf:"bytes,8,opt,name=Reason,json=reason,proto3" json:"Reason"`
	// 商品售后图片凭证
	ImageUrl string `protobuf:"bytes,9,opt,name=ImageUrl,json=imageUrl,proto3" json:"ImageUrl"`
	// 联系人
	PersonName string `protobuf:"bytes,10,opt,name=PersonName,json=personName,proto3" json:"PersonName"`
	// 联系电话
	PersonPhone string `protobuf:"bytes,11,opt,name=PersonPhone,json=personPhone,proto3" json:"PersonPhone"`
	// 退货的快递服务商编号
	ShipmentExpress string `protobuf:"bytes,12,opt,name=ShipmentExpress,json=shipmentExpress,proto3" json:"ShipmentExpress"`
	// 退货的快递单号
	ShipmentOrderNo string `protobuf:"bytes,13,opt,name=ShipmentOrderNo,json=shipmentOrderNo,proto3" json:"ShipmentOrderNo"`
	// 退货凭证
	ShipmentImage string `protobuf:"bytes,14,opt,name=ShipmentImage,json=shipmentImage,proto3" json:"ShipmentImage"`
	// 备注(系统)
	Remark string `protobuf:"bytes,15,opt,name=Remark,json=remark,proto3" json:"Remark"`
	// 运营商备注
	VendorRemark string `protobuf:"bytes,16,opt,name=VendorRemark,json=vendorRemark,proto3" json:"VendorRemark"`
	// 售后单状态
	Status int32 `protobuf:"varint,17,opt,name=Status,json=status,proto3" json:"Status"`
	// 提交时间
	CreateTime int64 `protobuf:"varint,18,opt,name=CreateTime,json=createTime,proto3" json:"CreateTime"`
	// 更新时间
	UpdateTime int64 `protobuf:"varint,19,opt,name=UpdateTime,json=updateTime,proto3" json:"UpdateTime"`
	// 订单状态
	StatusText           string   `protobuf:"bytes,20,opt,name=StatusText,json=statusText,proto3" json:"StatusText"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SAfterSalesOrder) Reset()         { *m = SAfterSalesOrder{} }
func (m *SAfterSalesOrder) String() string { return proto.CompactTextString(m) }
func (*SAfterSalesOrder) ProtoMessage()    {}
func (*SAfterSalesOrder) Descriptor() ([]byte, []int) {
	return fileDescriptor_aftersales_service_e5cd7e9d361f265e, []int{10}
}
func (m *SAfterSalesOrder) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SAfterSalesOrder.Unmarshal(m, b)
}
func (m *SAfterSalesOrder) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SAfterSalesOrder.Marshal(b, m, deterministic)
}
func (dst *SAfterSalesOrder) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SAfterSalesOrder.Merge(dst, src)
}
func (m *SAfterSalesOrder) XXX_Size() int {
	return xxx_messageInfo_SAfterSalesOrder.Size(m)
}
func (m *SAfterSalesOrder) XXX_DiscardUnknown() {
	xxx_messageInfo_SAfterSalesOrder.DiscardUnknown(m)
}

var xxx_messageInfo_SAfterSalesOrder proto.InternalMessageInfo

func (m *SAfterSalesOrder) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *SAfterSalesOrder) GetOrderNo() string {
	if m != nil {
		return m.OrderNo
	}
	return ""
}

func (m *SAfterSalesOrder) GetRelateOrderId() int64 {
	if m != nil {
		return m.RelateOrderId
	}
	return 0
}

func (m *SAfterSalesOrder) GetVendorId() int64 {
	if m != nil {
		return m.VendorId
	}
	return 0
}

func (m *SAfterSalesOrder) GetBuyerId() int64 {
	if m != nil {
		return m.BuyerId
	}
	return 0
}

func (m *SAfterSalesOrder) GetAfterSalesType() int32 {
	if m != nil {
		return m.AfterSalesType
	}
	return 0
}

func (m *SAfterSalesOrder) GetSnapshotId() int64 {
	if m != nil {
		return m.SnapshotId
	}
	return 0
}

func (m *SAfterSalesOrder) GetQuantity() int32 {
	if m != nil {
		return m.Quantity
	}
	return 0
}

func (m *SAfterSalesOrder) GetReason() string {
	if m != nil {
		return m.Reason
	}
	return ""
}

func (m *SAfterSalesOrder) GetImageUrl() string {
	if m != nil {
		return m.ImageUrl
	}
	return ""
}

func (m *SAfterSalesOrder) GetPersonName() string {
	if m != nil {
		return m.PersonName
	}
	return ""
}

func (m *SAfterSalesOrder) GetPersonPhone() string {
	if m != nil {
		return m.PersonPhone
	}
	return ""
}

func (m *SAfterSalesOrder) GetShipmentExpress() string {
	if m != nil {
		return m.ShipmentExpress
	}
	return ""
}

func (m *SAfterSalesOrder) GetShipmentOrderNo() string {
	if m != nil {
		return m.ShipmentOrderNo
	}
	return ""
}

func (m *SAfterSalesOrder) GetShipmentImage() string {
	if m != nil {
		return m.ShipmentImage
	}
	return ""
}

func (m *SAfterSalesOrder) GetRemark() string {
	if m != nil {
		return m.Remark
	}
	return ""
}

func (m *SAfterSalesOrder) GetVendorRemark() string {
	if m != nil {
		return m.VendorRemark
	}
	return ""
}

func (m *SAfterSalesOrder) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *SAfterSalesOrder) GetCreateTime() int64 {
	if m != nil {
		return m.CreateTime
	}
	return 0
}

func (m *SAfterSalesOrder) GetUpdateTime() int64 {
	if m != nil {
		return m.UpdateTime
	}
	return 0
}

func (m *SAfterSalesOrder) GetStatusText() string {
	if m != nil {
		return m.StatusText
	}
	return ""
}

// 分页售后订单信息
type SPagingBuyerAfterSalesOrder struct {
	// 编号
	Id int64 `protobuf:"varint,1,opt,name=Id,json=id,proto3" json:"Id"`
	// 订单编号
	OrderNo string `protobuf:"bytes,2,opt,name=OrderNo,json=orderNo,proto3" json:"OrderNo"`
	// 运营商编号
	VendorId int64 `protobuf:"varint,3,opt,name=VendorId,json=vendorId,proto3" json:"VendorId"`
	// 运营商名称
	SellerName string `protobuf:"bytes,4,opt,name=SellerName,json=sellerName,proto3" json:"SellerName"`
	// 类型，退货、换货、维修
	AfterSalesType int32 `protobuf:"varint,5,opt,name=AfterSalesType,json=afterSalesType,proto3" json:"AfterSalesType"`
	// 退货的商品项编号
	SnapshotId int64 `protobuf:"varint,6,opt,name=SnapshotId,json=snapshotId,proto3" json:"SnapshotId"`
	// 商品数量
	Quantity int32 `protobuf:"varint,7,opt,name=Quantity,json=quantity,proto3" json:"Quantity"`
	// SKU编号
	SkuId int64 `protobuf:"varint,8,opt,name=SkuId,json=skuId,proto3" json:"SkuId"`
	// 商品标题
	ItemTitle string `protobuf:"bytes,9,opt,name=ItemTitle,json=itemTitle,proto3" json:"ItemTitle"`
	// 商品图片
	ItemImage string `protobuf:"bytes,10,opt,name=ItemImage,json=itemImage,proto3" json:"ItemImage"`
	// 售后单状态
	Status int32 `protobuf:"varint,11,opt,name=Status,json=status,proto3" json:"Status"`
	// 提交时间
	CreateTime int64 `protobuf:"varint,12,opt,name=CreateTime,json=createTime,proto3" json:"CreateTime"`
	// 订单状态
	StatusText           string   `protobuf:"bytes,13,opt,name=StatusText,json=statusText,proto3" json:"StatusText"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SPagingBuyerAfterSalesOrder) Reset()         { *m = SPagingBuyerAfterSalesOrder{} }
func (m *SPagingBuyerAfterSalesOrder) String() string { return proto.CompactTextString(m) }
func (*SPagingBuyerAfterSalesOrder) ProtoMessage()    {}
func (*SPagingBuyerAfterSalesOrder) Descriptor() ([]byte, []int) {
	return fileDescriptor_aftersales_service_e5cd7e9d361f265e, []int{11}
}
func (m *SPagingBuyerAfterSalesOrder) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SPagingBuyerAfterSalesOrder.Unmarshal(m, b)
}
func (m *SPagingBuyerAfterSalesOrder) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SPagingBuyerAfterSalesOrder.Marshal(b, m, deterministic)
}
func (dst *SPagingBuyerAfterSalesOrder) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SPagingBuyerAfterSalesOrder.Merge(dst, src)
}
func (m *SPagingBuyerAfterSalesOrder) XXX_Size() int {
	return xxx_messageInfo_SPagingBuyerAfterSalesOrder.Size(m)
}
func (m *SPagingBuyerAfterSalesOrder) XXX_DiscardUnknown() {
	xxx_messageInfo_SPagingBuyerAfterSalesOrder.DiscardUnknown(m)
}

var xxx_messageInfo_SPagingBuyerAfterSalesOrder proto.InternalMessageInfo

func (m *SPagingBuyerAfterSalesOrder) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *SPagingBuyerAfterSalesOrder) GetOrderNo() string {
	if m != nil {
		return m.OrderNo
	}
	return ""
}

func (m *SPagingBuyerAfterSalesOrder) GetVendorId() int64 {
	if m != nil {
		return m.VendorId
	}
	return 0
}

func (m *SPagingBuyerAfterSalesOrder) GetSellerName() string {
	if m != nil {
		return m.SellerName
	}
	return ""
}

func (m *SPagingBuyerAfterSalesOrder) GetAfterSalesType() int32 {
	if m != nil {
		return m.AfterSalesType
	}
	return 0
}

func (m *SPagingBuyerAfterSalesOrder) GetSnapshotId() int64 {
	if m != nil {
		return m.SnapshotId
	}
	return 0
}

func (m *SPagingBuyerAfterSalesOrder) GetQuantity() int32 {
	if m != nil {
		return m.Quantity
	}
	return 0
}

func (m *SPagingBuyerAfterSalesOrder) GetSkuId() int64 {
	if m != nil {
		return m.SkuId
	}
	return 0
}

func (m *SPagingBuyerAfterSalesOrder) GetItemTitle() string {
	if m != nil {
		return m.ItemTitle
	}
	return ""
}

func (m *SPagingBuyerAfterSalesOrder) GetItemImage() string {
	if m != nil {
		return m.ItemImage
	}
	return ""
}

func (m *SPagingBuyerAfterSalesOrder) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *SPagingBuyerAfterSalesOrder) GetCreateTime() int64 {
	if m != nil {
		return m.CreateTime
	}
	return 0
}

func (m *SPagingBuyerAfterSalesOrder) GetStatusText() string {
	if m != nil {
		return m.StatusText
	}
	return ""
}

// 分页商户售后单
type SPagingSellerAfterSalesOrder struct {
	// 编号
	Id int64 `protobuf:"varint,1,opt,name=Id,json=id,proto3" json:"Id"`
	// 订单编号
	OrderNo string `protobuf:"bytes,2,opt,name=OrderNo,json=orderNo,proto3" json:"OrderNo"`
	// 会员编号
	BuyerId int64 `protobuf:"varint,3,opt,name=BuyerId,json=buyerId,proto3" json:"BuyerId"`
	// 会员名称
	BuyerName string `protobuf:"bytes,4,opt,name=BuyerName,json=buyerName,proto3" json:"BuyerName"`
	// 类型，退货、换货、维修
	AfterSalesType int32 `protobuf:"varint,5,opt,name=AfterSalesType,json=afterSalesType,proto3" json:"AfterSalesType"`
	// 退货的商品项编号
	SnapshotId int64 `protobuf:"varint,6,opt,name=SnapshotId,json=snapshotId,proto3" json:"SnapshotId"`
	// 商品数量
	Quantity int32 `protobuf:"varint,7,opt,name=Quantity,json=quantity,proto3" json:"Quantity"`
	// SKU编号
	SkuId int64 `protobuf:"varint,8,opt,name=SkuId,json=skuId,proto3" json:"SkuId"`
	// 商品标题
	ItemTitle string `protobuf:"bytes,9,opt,name=ItemTitle,json=itemTitle,proto3" json:"ItemTitle"`
	// 商品图片
	ItemImage string `protobuf:"bytes,10,opt,name=ItemImage,json=itemImage,proto3" json:"ItemImage"`
	// 售后单状态
	Status int32 `protobuf:"varint,11,opt,name=Status,json=status,proto3" json:"Status"`
	// 提交时间
	CreateTime int64 `protobuf:"varint,12,opt,name=CreateTime,json=createTime,proto3" json:"CreateTime"`
	// 更新时间
	UpdateTime int64 `protobuf:"varint,13,opt,name=UpdateTime,json=updateTime,proto3" json:"UpdateTime"`
	// 订单状态
	StatusText           string   `protobuf:"bytes,14,opt,name=StatusText,json=statusText,proto3" json:"StatusText"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SPagingSellerAfterSalesOrder) Reset()         { *m = SPagingSellerAfterSalesOrder{} }
func (m *SPagingSellerAfterSalesOrder) String() string { return proto.CompactTextString(m) }
func (*SPagingSellerAfterSalesOrder) ProtoMessage()    {}
func (*SPagingSellerAfterSalesOrder) Descriptor() ([]byte, []int) {
	return fileDescriptor_aftersales_service_e5cd7e9d361f265e, []int{12}
}
func (m *SPagingSellerAfterSalesOrder) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SPagingSellerAfterSalesOrder.Unmarshal(m, b)
}
func (m *SPagingSellerAfterSalesOrder) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SPagingSellerAfterSalesOrder.Marshal(b, m, deterministic)
}
func (dst *SPagingSellerAfterSalesOrder) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SPagingSellerAfterSalesOrder.Merge(dst, src)
}
func (m *SPagingSellerAfterSalesOrder) XXX_Size() int {
	return xxx_messageInfo_SPagingSellerAfterSalesOrder.Size(m)
}
func (m *SPagingSellerAfterSalesOrder) XXX_DiscardUnknown() {
	xxx_messageInfo_SPagingSellerAfterSalesOrder.DiscardUnknown(m)
}

var xxx_messageInfo_SPagingSellerAfterSalesOrder proto.InternalMessageInfo

func (m *SPagingSellerAfterSalesOrder) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *SPagingSellerAfterSalesOrder) GetOrderNo() string {
	if m != nil {
		return m.OrderNo
	}
	return ""
}

func (m *SPagingSellerAfterSalesOrder) GetBuyerId() int64 {
	if m != nil {
		return m.BuyerId
	}
	return 0
}

func (m *SPagingSellerAfterSalesOrder) GetBuyerName() string {
	if m != nil {
		return m.BuyerName
	}
	return ""
}

func (m *SPagingSellerAfterSalesOrder) GetAfterSalesType() int32 {
	if m != nil {
		return m.AfterSalesType
	}
	return 0
}

func (m *SPagingSellerAfterSalesOrder) GetSnapshotId() int64 {
	if m != nil {
		return m.SnapshotId
	}
	return 0
}

func (m *SPagingSellerAfterSalesOrder) GetQuantity() int32 {
	if m != nil {
		return m.Quantity
	}
	return 0
}

func (m *SPagingSellerAfterSalesOrder) GetSkuId() int64 {
	if m != nil {
		return m.SkuId
	}
	return 0
}

func (m *SPagingSellerAfterSalesOrder) GetItemTitle() string {
	if m != nil {
		return m.ItemTitle
	}
	return ""
}

func (m *SPagingSellerAfterSalesOrder) GetItemImage() string {
	if m != nil {
		return m.ItemImage
	}
	return ""
}

func (m *SPagingSellerAfterSalesOrder) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *SPagingSellerAfterSalesOrder) GetCreateTime() int64 {
	if m != nil {
		return m.CreateTime
	}
	return 0
}

func (m *SPagingSellerAfterSalesOrder) GetUpdateTime() int64 {
	if m != nil {
		return m.UpdateTime
	}
	return 0
}

func (m *SPagingSellerAfterSalesOrder) GetStatusText() string {
	if m != nil {
		return m.StatusText
	}
	return ""
}

// 换货发货请求
type ReturnShipmentRequest struct {
	// 换货单编号
	OrderNo string `protobuf:"bytes,1,opt,name=OrderNo,json=orderNo,proto3" json:"OrderNo"`
	// 物流名称
	ShipmentExpress string `protobuf:"bytes,2,opt,name=ShipmentExpress,json=shipmentExpress,proto3" json:"ShipmentExpress"`
	// 物流单号
	ShipmentOrder        string   `protobuf:"bytes,3,opt,name=ShipmentOrder,json=shipmentOrder,proto3" json:"ShipmentOrder"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReturnShipmentRequest) Reset()         { *m = ReturnShipmentRequest{} }
func (m *ReturnShipmentRequest) String() string { return proto.CompactTextString(m) }
func (*ReturnShipmentRequest) ProtoMessage()    {}
func (*ReturnShipmentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_aftersales_service_e5cd7e9d361f265e, []int{13}
}
func (m *ReturnShipmentRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReturnShipmentRequest.Unmarshal(m, b)
}
func (m *ReturnShipmentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReturnShipmentRequest.Marshal(b, m, deterministic)
}
func (dst *ReturnShipmentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReturnShipmentRequest.Merge(dst, src)
}
func (m *ReturnShipmentRequest) XXX_Size() int {
	return xxx_messageInfo_ReturnShipmentRequest.Size(m)
}
func (m *ReturnShipmentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ReturnShipmentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ReturnShipmentRequest proto.InternalMessageInfo

func (m *ReturnShipmentRequest) GetOrderNo() string {
	if m != nil {
		return m.OrderNo
	}
	return ""
}

func (m *ReturnShipmentRequest) GetShipmentExpress() string {
	if m != nil {
		return m.ShipmentExpress
	}
	return ""
}

func (m *ReturnShipmentRequest) GetShipmentOrder() string {
	if m != nil {
		return m.ShipmentOrder
	}
	return ""
}

func init() {
	proto.RegisterType((*AfterSalesOrderNo)(nil), "AfterSalesOrderNo")
	proto.RegisterType((*AfterSalesProcessRequest)(nil), "AfterSalesProcessRequest")
	proto.RegisterType((*OriginOrderIdRequest)(nil), "OriginOrderIdRequest")
	proto.RegisterType((*SubmitAfterSalesOrderRequest)(nil), "SubmitAfterSalesOrderRequest")
	proto.RegisterType((*SubmitAfterSalesOrderResponse)(nil), "SubmitAfterSalesOrderResponse")
	proto.RegisterType((*AfterSalesOrderListResponse)(nil), "AfterSalesOrderListResponse")
	proto.RegisterType((*PagingBuyerOrdersRequest)(nil), "PagingBuyerOrdersRequest")
	proto.RegisterType((*PagingSellerOrdersRequest)(nil), "PagingSellerOrdersRequest")
	proto.RegisterType((*PagingBuyerAfterSalesOrderListResponse)(nil), "PagingBuyerAfterSalesOrderListResponse")
	proto.RegisterType((*PagingSellerAfterSalesOrderListResponse)(nil), "PagingSellerAfterSalesOrderListResponse")
	proto.RegisterType((*SAfterSalesOrder)(nil), "SAfterSalesOrder")
	proto.RegisterType((*SPagingBuyerAfterSalesOrder)(nil), "SPagingBuyerAfterSalesOrder")
	proto.RegisterType((*SPagingSellerAfterSalesOrder)(nil), "SPagingSellerAfterSalesOrder")
	proto.RegisterType((*ReturnShipmentRequest)(nil), "ReturnShipmentRequest")
	proto.RegisterEnum("EAfterSalesType", EAfterSalesType_name, EAfterSalesType_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// AfterSalesServiceClient is the client API for AfterSalesService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AfterSalesServiceClient interface {
	// 提交售后单
	SubmitAfterSalesOrder(ctx context.Context, in *SubmitAfterSalesOrderRequest, opts ...grpc.CallOption) (*SubmitAfterSalesOrderResponse, error)
	// 获取订单的所有售后单,orderId
	GetAllAfterSalesOrderOfSaleOrder(ctx context.Context, in *OriginOrderIdRequest, opts ...grpc.CallOption) (*AfterSalesOrderListResponse, error)
	// 获取会员的分页售后单
	QueryPagerAfterSalesOrderOfMember(ctx context.Context, in *PagingBuyerOrdersRequest, opts ...grpc.CallOption) (*PagingBuyerAfterSalesOrderListResponse, error)
	// 获取商户的分页售后单
	QueryPagerAfterSalesOrderOfVendor(ctx context.Context, in *PagingSellerOrdersRequest, opts ...grpc.CallOption) (*PagingSellerAfterSalesOrderListResponse, error)
	// 获取售后单
	GetAfterSaleOrder(ctx context.Context, in *AfterSalesOrderNo, opts ...grpc.CallOption) (*SAfterSalesOrder, error)
	// 同意售后
	AgreeAfterSales(ctx context.Context, in *AfterSalesProcessRequest, opts ...grpc.CallOption) (*Result, error)
	// 拒绝售后
	DeclineAfterSales(ctx context.Context, in *AfterSalesProcessRequest, opts ...grpc.CallOption) (*Result, error)
	// 申请调解
	RequestIntercede(ctx context.Context, in *AfterSalesProcessRequest, opts ...grpc.CallOption) (*Result, error)
	// 系统确认
	ConfirmAfterSales(ctx context.Context, in *AfterSalesOrderNo, opts ...grpc.CallOption) (*Result, error)
	// 系统退回
	RejectAfterSales(ctx context.Context, in *AfterSalesProcessRequest, opts ...grpc.CallOption) (*Result, error)
	// 处理退款/退货完成,一般是系统自动调用
	ProcessAfterSalesOrder(ctx context.Context, in *AfterSalesProcessRequest, opts ...grpc.CallOption) (*Result, error)
	// 换货发货
	ReturnShipment(ctx context.Context, in *ReturnShipmentRequest, opts ...grpc.CallOption) (*Result, error)
	// 换货收货
	ReceiveItem(ctx context.Context, in *AfterSalesOrderNo, opts ...grpc.CallOption) (*Result, error)
}

type afterSalesServiceClient struct {
	cc *grpc.ClientConn
}

func NewAfterSalesServiceClient(cc *grpc.ClientConn) AfterSalesServiceClient {
	return &afterSalesServiceClient{cc}
}

func (c *afterSalesServiceClient) SubmitAfterSalesOrder(ctx context.Context, in *SubmitAfterSalesOrderRequest, opts ...grpc.CallOption) (*SubmitAfterSalesOrderResponse, error) {
	out := new(SubmitAfterSalesOrderResponse)
	err := c.cc.Invoke(ctx, "/AfterSalesService/SubmitAfterSalesOrder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *afterSalesServiceClient) GetAllAfterSalesOrderOfSaleOrder(ctx context.Context, in *OriginOrderIdRequest, opts ...grpc.CallOption) (*AfterSalesOrderListResponse, error) {
	out := new(AfterSalesOrderListResponse)
	err := c.cc.Invoke(ctx, "/AfterSalesService/GetAllAfterSalesOrderOfSaleOrder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *afterSalesServiceClient) QueryPagerAfterSalesOrderOfMember(ctx context.Context, in *PagingBuyerOrdersRequest, opts ...grpc.CallOption) (*PagingBuyerAfterSalesOrderListResponse, error) {
	out := new(PagingBuyerAfterSalesOrderListResponse)
	err := c.cc.Invoke(ctx, "/AfterSalesService/QueryPagerAfterSalesOrderOfMember", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *afterSalesServiceClient) QueryPagerAfterSalesOrderOfVendor(ctx context.Context, in *PagingSellerOrdersRequest, opts ...grpc.CallOption) (*PagingSellerAfterSalesOrderListResponse, error) {
	out := new(PagingSellerAfterSalesOrderListResponse)
	err := c.cc.Invoke(ctx, "/AfterSalesService/QueryPagerAfterSalesOrderOfVendor", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *afterSalesServiceClient) GetAfterSaleOrder(ctx context.Context, in *AfterSalesOrderNo, opts ...grpc.CallOption) (*SAfterSalesOrder, error) {
	out := new(SAfterSalesOrder)
	err := c.cc.Invoke(ctx, "/AfterSalesService/GetAfterSaleOrder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *afterSalesServiceClient) AgreeAfterSales(ctx context.Context, in *AfterSalesProcessRequest, opts ...grpc.CallOption) (*Result, error) {
	out := new(Result)
	err := c.cc.Invoke(ctx, "/AfterSalesService/AgreeAfterSales", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *afterSalesServiceClient) DeclineAfterSales(ctx context.Context, in *AfterSalesProcessRequest, opts ...grpc.CallOption) (*Result, error) {
	out := new(Result)
	err := c.cc.Invoke(ctx, "/AfterSalesService/DeclineAfterSales", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *afterSalesServiceClient) RequestIntercede(ctx context.Context, in *AfterSalesProcessRequest, opts ...grpc.CallOption) (*Result, error) {
	out := new(Result)
	err := c.cc.Invoke(ctx, "/AfterSalesService/RequestIntercede", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *afterSalesServiceClient) ConfirmAfterSales(ctx context.Context, in *AfterSalesOrderNo, opts ...grpc.CallOption) (*Result, error) {
	out := new(Result)
	err := c.cc.Invoke(ctx, "/AfterSalesService/ConfirmAfterSales", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *afterSalesServiceClient) RejectAfterSales(ctx context.Context, in *AfterSalesProcessRequest, opts ...grpc.CallOption) (*Result, error) {
	out := new(Result)
	err := c.cc.Invoke(ctx, "/AfterSalesService/RejectAfterSales", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *afterSalesServiceClient) ProcessAfterSalesOrder(ctx context.Context, in *AfterSalesProcessRequest, opts ...grpc.CallOption) (*Result, error) {
	out := new(Result)
	err := c.cc.Invoke(ctx, "/AfterSalesService/ProcessAfterSalesOrder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *afterSalesServiceClient) ReturnShipment(ctx context.Context, in *ReturnShipmentRequest, opts ...grpc.CallOption) (*Result, error) {
	out := new(Result)
	err := c.cc.Invoke(ctx, "/AfterSalesService/ReturnShipment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *afterSalesServiceClient) ReceiveItem(ctx context.Context, in *AfterSalesOrderNo, opts ...grpc.CallOption) (*Result, error) {
	out := new(Result)
	err := c.cc.Invoke(ctx, "/AfterSalesService/ReceiveItem", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AfterSalesServiceServer is the server API for AfterSalesService service.
type AfterSalesServiceServer interface {
	// 提交售后单
	SubmitAfterSalesOrder(context.Context, *SubmitAfterSalesOrderRequest) (*SubmitAfterSalesOrderResponse, error)
	// 获取订单的所有售后单,orderId
	GetAllAfterSalesOrderOfSaleOrder(context.Context, *OriginOrderIdRequest) (*AfterSalesOrderListResponse, error)
	// 获取会员的分页售后单
	QueryPagerAfterSalesOrderOfMember(context.Context, *PagingBuyerOrdersRequest) (*PagingBuyerAfterSalesOrderListResponse, error)
	// 获取商户的分页售后单
	QueryPagerAfterSalesOrderOfVendor(context.Context, *PagingSellerOrdersRequest) (*PagingSellerAfterSalesOrderListResponse, error)
	// 获取售后单
	GetAfterSaleOrder(context.Context, *AfterSalesOrderNo) (*SAfterSalesOrder, error)
	// 同意售后
	AgreeAfterSales(context.Context, *AfterSalesProcessRequest) (*Result, error)
	// 拒绝售后
	DeclineAfterSales(context.Context, *AfterSalesProcessRequest) (*Result, error)
	// 申请调解
	RequestIntercede(context.Context, *AfterSalesProcessRequest) (*Result, error)
	// 系统确认
	ConfirmAfterSales(context.Context, *AfterSalesOrderNo) (*Result, error)
	// 系统退回
	RejectAfterSales(context.Context, *AfterSalesProcessRequest) (*Result, error)
	// 处理退款/退货完成,一般是系统自动调用
	ProcessAfterSalesOrder(context.Context, *AfterSalesProcessRequest) (*Result, error)
	// 换货发货
	ReturnShipment(context.Context, *ReturnShipmentRequest) (*Result, error)
	// 换货收货
	ReceiveItem(context.Context, *AfterSalesOrderNo) (*Result, error)
}

func RegisterAfterSalesServiceServer(s *grpc.Server, srv AfterSalesServiceServer) {
	s.RegisterService(&_AfterSalesService_serviceDesc, srv)
}

func _AfterSalesService_SubmitAfterSalesOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SubmitAfterSalesOrderRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AfterSalesServiceServer).SubmitAfterSalesOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/AfterSalesService/SubmitAfterSalesOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AfterSalesServiceServer).SubmitAfterSalesOrder(ctx, req.(*SubmitAfterSalesOrderRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AfterSalesService_GetAllAfterSalesOrderOfSaleOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OriginOrderIdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AfterSalesServiceServer).GetAllAfterSalesOrderOfSaleOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/AfterSalesService/GetAllAfterSalesOrderOfSaleOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AfterSalesServiceServer).GetAllAfterSalesOrderOfSaleOrder(ctx, req.(*OriginOrderIdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AfterSalesService_QueryPagerAfterSalesOrderOfMember_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PagingBuyerOrdersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AfterSalesServiceServer).QueryPagerAfterSalesOrderOfMember(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/AfterSalesService/QueryPagerAfterSalesOrderOfMember",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AfterSalesServiceServer).QueryPagerAfterSalesOrderOfMember(ctx, req.(*PagingBuyerOrdersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AfterSalesService_QueryPagerAfterSalesOrderOfVendor_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PagingSellerOrdersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AfterSalesServiceServer).QueryPagerAfterSalesOrderOfVendor(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/AfterSalesService/QueryPagerAfterSalesOrderOfVendor",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AfterSalesServiceServer).QueryPagerAfterSalesOrderOfVendor(ctx, req.(*PagingSellerOrdersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AfterSalesService_GetAfterSaleOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AfterSalesOrderNo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AfterSalesServiceServer).GetAfterSaleOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/AfterSalesService/GetAfterSaleOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AfterSalesServiceServer).GetAfterSaleOrder(ctx, req.(*AfterSalesOrderNo))
	}
	return interceptor(ctx, in, info, handler)
}

func _AfterSalesService_AgreeAfterSales_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AfterSalesProcessRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AfterSalesServiceServer).AgreeAfterSales(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/AfterSalesService/AgreeAfterSales",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AfterSalesServiceServer).AgreeAfterSales(ctx, req.(*AfterSalesProcessRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AfterSalesService_DeclineAfterSales_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AfterSalesProcessRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AfterSalesServiceServer).DeclineAfterSales(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/AfterSalesService/DeclineAfterSales",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AfterSalesServiceServer).DeclineAfterSales(ctx, req.(*AfterSalesProcessRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AfterSalesService_RequestIntercede_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AfterSalesProcessRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AfterSalesServiceServer).RequestIntercede(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/AfterSalesService/RequestIntercede",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AfterSalesServiceServer).RequestIntercede(ctx, req.(*AfterSalesProcessRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AfterSalesService_ConfirmAfterSales_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AfterSalesOrderNo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AfterSalesServiceServer).ConfirmAfterSales(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/AfterSalesService/ConfirmAfterSales",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AfterSalesServiceServer).ConfirmAfterSales(ctx, req.(*AfterSalesOrderNo))
	}
	return interceptor(ctx, in, info, handler)
}

func _AfterSalesService_RejectAfterSales_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AfterSalesProcessRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AfterSalesServiceServer).RejectAfterSales(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/AfterSalesService/RejectAfterSales",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AfterSalesServiceServer).RejectAfterSales(ctx, req.(*AfterSalesProcessRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AfterSalesService_ProcessAfterSalesOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AfterSalesProcessRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AfterSalesServiceServer).ProcessAfterSalesOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/AfterSalesService/ProcessAfterSalesOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AfterSalesServiceServer).ProcessAfterSalesOrder(ctx, req.(*AfterSalesProcessRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AfterSalesService_ReturnShipment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReturnShipmentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AfterSalesServiceServer).ReturnShipment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/AfterSalesService/ReturnShipment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AfterSalesServiceServer).ReturnShipment(ctx, req.(*ReturnShipmentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AfterSalesService_ReceiveItem_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AfterSalesOrderNo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AfterSalesServiceServer).ReceiveItem(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/AfterSalesService/ReceiveItem",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AfterSalesServiceServer).ReceiveItem(ctx, req.(*AfterSalesOrderNo))
	}
	return interceptor(ctx, in, info, handler)
}

var _AfterSalesService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "AfterSalesService",
	HandlerType: (*AfterSalesServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SubmitAfterSalesOrder",
			Handler:    _AfterSalesService_SubmitAfterSalesOrder_Handler,
		},
		{
			MethodName: "GetAllAfterSalesOrderOfSaleOrder",
			Handler:    _AfterSalesService_GetAllAfterSalesOrderOfSaleOrder_Handler,
		},
		{
			MethodName: "QueryPagerAfterSalesOrderOfMember",
			Handler:    _AfterSalesService_QueryPagerAfterSalesOrderOfMember_Handler,
		},
		{
			MethodName: "QueryPagerAfterSalesOrderOfVendor",
			Handler:    _AfterSalesService_QueryPagerAfterSalesOrderOfVendor_Handler,
		},
		{
			MethodName: "GetAfterSaleOrder",
			Handler:    _AfterSalesService_GetAfterSaleOrder_Handler,
		},
		{
			MethodName: "AgreeAfterSales",
			Handler:    _AfterSalesService_AgreeAfterSales_Handler,
		},
		{
			MethodName: "DeclineAfterSales",
			Handler:    _AfterSalesService_DeclineAfterSales_Handler,
		},
		{
			MethodName: "RequestIntercede",
			Handler:    _AfterSalesService_RequestIntercede_Handler,
		},
		{
			MethodName: "ConfirmAfterSales",
			Handler:    _AfterSalesService_ConfirmAfterSales_Handler,
		},
		{
			MethodName: "RejectAfterSales",
			Handler:    _AfterSalesService_RejectAfterSales_Handler,
		},
		{
			MethodName: "ProcessAfterSalesOrder",
			Handler:    _AfterSalesService_ProcessAfterSalesOrder_Handler,
		},
		{
			MethodName: "ReturnShipment",
			Handler:    _AfterSalesService_ReturnShipment_Handler,
		},
		{
			MethodName: "ReceiveItem",
			Handler:    _AfterSalesService_ReceiveItem_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "aftersales_service.proto",
}

func init() {
	proto.RegisterFile("aftersales_service.proto", fileDescriptor_aftersales_service_e5cd7e9d361f265e)
}

var fileDescriptor_aftersales_service_e5cd7e9d361f265e = []byte{
	// 1212 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe4, 0x57, 0x5d, 0x6e, 0xdb, 0x46,
	0x10, 0xd6, 0x8f, 0x25, 0x4b, 0x23, 0xeb, 0x6f, 0x63, 0x07, 0x8c, 0xa2, 0x04, 0x2e, 0x51, 0x24,
	0x46, 0x91, 0xb2, 0xa9, 0xf2, 0xd0, 0x14, 0x0d, 0x0a, 0x24, 0x8e, 0x5b, 0x08, 0x68, 0x22, 0x85,
	0x72, 0x82, 0xb6, 0x28, 0x10, 0xac, 0xc4, 0xb1, 0xcc, 0x86, 0x22, 0x99, 0xdd, 0xa5, 0x61, 0x3f,
	0x15, 0x3d, 0x42, 0x0f, 0x50, 0xa0, 0x27, 0xe8, 0xb1, 0x7a, 0x8e, 0x62, 0x97, 0xa4, 0x44, 0x52,
	0xb4, 0x6c, 0xbf, 0xf4, 0xa5, 0x4f, 0xd2, 0x7c, 0x33, 0x3b, 0xb3, 0x3b, 0xdf, 0xcc, 0x68, 0x04,
	0x1a, 0x3d, 0x11, 0xc8, 0x38, 0x75, 0x90, 0xbf, 0xe7, 0xc8, 0xce, 0xec, 0x19, 0x1a, 0x3e, 0xf3,
	0x84, 0xd7, 0xdb, 0x99, 0x3b, 0xde, 0x94, 0x3a, 0xa1, 0xa4, 0x7f, 0x0e, 0xdd, 0xe7, 0xd2, 0x72,
	0x22, 0x2d, 0x47, 0xcc, 0x42, 0xf6, 0xda, 0x23, 0x1a, 0x6c, 0x47, 0x5f, 0xb5, 0xe2, 0x7e, 0xf1,
	0xa0, 0x6e, 0x6e, 0x7b, 0xa1, 0xa8, 0xbb, 0xa0, 0xad, 0xcc, 0xc7, 0xcc, 0x9b, 0x21, 0xe7, 0x26,
	0x7e, 0x0c, 0x90, 0x8b, 0xcb, 0x4f, 0x91, 0xdb, 0x50, 0x35, 0x71, 0x41, 0xd9, 0x07, 0xad, 0xa4,
	0x14, 0x55, 0xa6, 0x24, 0xb2, 0x0f, 0x8d, 0x21, 0x1f, 0xba, 0x02, 0xd9, 0x0c, 0x2d, 0xd4, 0xca,
	0xfb, 0xc5, 0x83, 0x9a, 0xd9, 0xb0, 0x57, 0x90, 0xfe, 0x18, 0x76, 0x47, 0xcc, 0x9e, 0xdb, 0xae,
	0xf2, 0x3c, 0xb4, 0xb2, 0xb1, 0x86, 0x96, 0x8a, 0x55, 0x8e, 0x62, 0x0d, 0x2d, 0xfd, 0x9f, 0x22,
	0xf4, 0x27, 0xc1, 0x74, 0x61, 0x8b, 0xcc, 0xbb, 0xae, 0x3c, 0x4a, 0x9e, 0x42, 0x6b, 0x75, 0xe6,
	0xf8, 0xc2, 0x47, 0x75, 0xdd, 0xd6, 0xa0, 0x63, 0x1c, 0xa5, 0x71, 0xb3, 0x45, 0x53, 0x32, 0x79,
	0x00, 0xad, 0xa1, 0xc0, 0xc5, 0xc4, 0xa5, 0x3e, 0x3f, 0xf5, 0xc4, 0xd0, 0x52, 0x6f, 0x29, 0x9b,
	0x2d, 0x3b, 0x85, 0x92, 0x1e, 0xd4, 0xde, 0x04, 0xd4, 0x15, 0xb6, 0xb8, 0xd0, 0xb6, 0x94, 0x45,
	0xed, 0x63, 0x24, 0x87, 0x49, 0xa2, 0xdc, 0x73, 0xb5, 0x4a, 0x9c, 0x24, 0x29, 0x49, 0x7c, 0xb8,
	0xa0, 0x73, 0xe4, 0x5a, 0x75, 0xbf, 0x2c, 0x71, 0x5b, 0x49, 0xfa, 0x6f, 0x70, 0xef, 0x92, 0x77,
	0x72, 0xdf, 0x73, 0x39, 0xca, 0x87, 0x1e, 0x31, 0x76, 0xe8, 0x59, 0x18, 0x3f, 0x14, 0x43, 0x51,
	0xba, 0x3c, 0x62, 0xec, 0x15, 0x9f, 0xc7, 0x7c, 0xa0, 0x92, 0xc8, 0xa3, 0x9c, 0x62, 0x50, 0x2f,
	0xa9, 0x9b, 0x5d, 0x9a, 0x55, 0xe8, 0xdf, 0xc1, 0xdd, 0x8c, 0xf5, 0x0f, 0x36, 0x17, 0xcb, 0xf0,
	0x0f, 0xa1, 0xf2, 0x8e, 0x3a, 0x81, 0x0c, 0x5e, 0x3e, 0x68, 0x0c, 0xba, 0xc6, 0x24, 0x7b, 0xd1,
	0xca, 0x99, 0xd4, 0xeb, 0xbf, 0x80, 0x36, 0xa6, 0x73, 0xdb, 0x9d, 0xbf, 0x08, 0x2e, 0x90, 0x29,
	0x55, 0xb2, 0xa6, 0x14, 0xba, 0x22, 0x6b, 0x1a, 0x8a, 0xe4, 0x01, 0x54, 0xc7, 0x94, 0xd1, 0x05,
	0x57, 0x6f, 0x68, 0x0c, 0x5a, 0xc6, 0x24, 0xf4, 0x12, 0xa2, 0x66, 0xd5, 0x57, 0x9f, 0xfa, 0x7b,
	0xb8, 0x13, 0xe2, 0x13, 0x74, 0x9c, 0xac, 0xfb, 0x1e, 0xd4, 0x42, 0x78, 0xe9, 0xbf, 0xc6, 0x23,
	0xf9, 0xda, 0x01, 0x7c, 0x78, 0x90, 0xb8, 0xfe, 0xa6, 0x8c, 0xec, 0x42, 0x45, 0x78, 0x82, 0x3a,
	0x51, 0xa8, 0x50, 0x20, 0x8f, 0x61, 0xeb, 0x25, 0x15, 0x54, 0x2b, 0xa9, 0x34, 0xf5, 0xe3, 0x28,
	0x79, 0xde, 0xcc, 0x2d, 0x8b, 0x0a, 0xaa, 0x33, 0x78, 0x98, 0x7c, 0xd2, 0xcd, 0x43, 0x7e, 0x99,
	0x0a, 0x79, 0x2f, 0x0e, 0x99, 0xeb, 0x2e, 0x8a, 0xf9, 0x57, 0x05, 0x3a, 0x59, 0x02, 0x49, 0x0b,
	0x4a, 0x43, 0x4b, 0xdb, 0x53, 0xae, 0x4b, 0xb6, 0xb5, 0x61, 0x02, 0x7c, 0x0a, 0x4d, 0x13, 0x1d,
	0x2a, 0x30, 0x6e, 0xbd, 0x92, 0x3a, 0xd4, 0x64, 0x49, 0x50, 0xd2, 0xf1, 0x0e, 0x5d, 0xcb, 0x63,
	0xcb, 0x06, 0xaa, 0x9d, 0x45, 0x72, 0xb2, 0x12, 0xb6, 0xb2, 0x95, 0x90, 0x6d, 0x5b, 0xd9, 0x40,
	0x95, 0xb5, 0x26, 0xbd, 0x0f, 0x90, 0x68, 0xd0, 0xaa, 0x72, 0x02, 0x3c, 0xbf, 0x39, 0xb7, 0x95,
	0x87, 0xbc, 0xe6, 0xac, 0xa5, 0x9a, 0xb3, 0x07, 0x35, 0xd5, 0x9c, 0x6f, 0x99, 0xa3, 0xd5, 0x95,
	0xa6, 0x66, 0x47, 0xb2, 0x8c, 0x37, 0x46, 0xc6, 0x3d, 0xf7, 0x35, 0x5d, 0xa0, 0x06, 0x4a, 0x0b,
	0xfe, 0x12, 0x91, 0xd3, 0x2f, 0xd4, 0x8f, 0x4f, 0x3d, 0x17, 0xb5, 0x86, 0x32, 0x68, 0xf8, 0x2b,
	0x88, 0x1c, 0x40, 0x7b, 0x72, 0x6a, 0xfb, 0x0b, 0x74, 0xc5, 0xd1, 0xb9, 0xcf, 0x90, 0x73, 0x6d,
	0x47, 0x59, 0xb5, 0x79, 0x1a, 0x4e, 0x5a, 0xc6, 0x0c, 0x34, 0xd3, 0x96, 0xa3, 0x15, 0x13, 0xb1,
	0xa5, 0xba, 0xb9, 0xd6, 0x52, 0x76, 0x4d, 0x9e, 0x04, 0x13, 0x13, 0xbb, 0x9d, 0x9a, 0xd8, 0x3a,
	0xec, 0x84, 0x0c, 0x45, 0xda, 0x8e, 0xd2, 0xee, 0x9c, 0x25, 0x30, 0x79, 0x76, 0x22, 0xa8, 0x08,
	0xb8, 0xd6, 0x55, 0x59, 0xac, 0x72, 0x25, 0xc9, 0x7c, 0x1c, 0x32, 0xa4, 0x02, 0x8f, 0xed, 0x05,
	0x6a, 0x24, 0xcc, 0xff, 0x6c, 0x89, 0x48, 0xfd, 0x5b, 0xdf, 0x8a, 0xf5, 0xb7, 0x42, 0x7d, 0xb0,
	0x44, 0x14, 0x7f, 0xca, 0xd3, 0x31, 0x9e, 0x0b, 0x6d, 0x37, 0xcc, 0x27, 0x5f, 0x22, 0xfa, 0x1f,
	0x65, 0xb8, 0xbb, 0xa1, 0x79, 0xa2, 0x6a, 0x2d, 0xe6, 0x55, 0x6b, 0x29, 0x5d, 0xad, 0x9b, 0xea,
	0x50, 0xde, 0x42, 0xf5, 0x89, 0x62, 0x75, 0x2b, 0xba, 0xc5, 0x12, 0xf9, 0x4f, 0xaa, 0x71, 0x17,
	0x2a, 0x93, 0x0f, 0xc1, 0xd0, 0x52, 0xc5, 0x58, 0x36, 0x2b, 0x5c, 0x0a, 0xa4, 0x0f, 0x75, 0xf9,
	0x23, 0x74, 0x6c, 0x0b, 0x07, 0xa3, 0x62, 0xac, 0xdb, 0x31, 0x10, 0x6b, 0x43, 0xce, 0x61, 0xa5,
	0x5d, 0xf2, 0x1d, 0x71, 0xd6, 0xd8, 0xc0, 0xd9, 0x4e, 0x1e, 0x67, 0x09, 0x4e, 0x9a, 0x6b, 0x9c,
	0xfc, 0x5d, 0x86, 0xfe, 0xa6, 0xe9, 0x72, 0x03, 0x52, 0x12, 0x03, 0xa0, 0x9c, 0x1e, 0x00, 0x7d,
	0xa8, 0x2b, 0x4d, 0x82, 0x91, 0xfa, 0x34, 0x06, 0xfe, 0x7f, 0x84, 0x24, 0x9a, 0xa8, 0x79, 0x45,
	0x13, 0xb5, 0xd6, 0x08, 0xfb, 0xbd, 0x08, 0x7b, 0x26, 0x8a, 0x80, 0xb9, 0xf1, 0x94, 0xb8, 0x7a,
	0xbd, 0xcb, 0x19, 0x53, 0xa5, 0xfc, 0x31, 0x95, 0x18, 0x3e, 0xca, 0x57, 0xb4, 0x5c, 0x34, 0x53,
	0x43, 0xea, 0xb3, 0x19, 0xb4, 0x33, 0x0b, 0x17, 0x69, 0x42, 0x5d, 0x7e, 0xbe, 0x75, 0x39, 0x8a,
	0x4e, 0x81, 0xb4, 0x00, 0xd4, 0x1e, 0x86, 0x27, 0x81, 0x6b, 0x75, 0x8a, 0x2b, 0x59, 0x5e, 0xbc,
	0x53, 0x22, 0x1d, 0xd8, 0x91, 0xf2, 0xd1, 0xf9, 0xec, 0x94, 0xba, 0x73, 0xec, 0x94, 0x49, 0x1b,
	0x1a, 0x12, 0x99, 0x84, 0xab, 0x70, 0x67, 0x6b, 0xf0, 0xe7, 0x76, 0x72, 0xd9, 0x89, 0x70, 0xf2,
	0x23, 0xec, 0xe5, 0x2e, 0x55, 0xe4, 0x9e, 0xb1, 0x69, 0xa9, 0xec, 0xdd, 0x37, 0x36, 0xee, 0x62,
	0x7a, 0x81, 0xfc, 0x04, 0xfb, 0xdf, 0xa3, 0x78, 0xee, 0x38, 0x19, 0x93, 0xd1, 0x89, 0xfc, 0x1e,
	0x06, 0xd9, 0x33, 0xf2, 0x96, 0xdd, 0x5e, 0xdf, 0xd8, 0xf0, 0x13, 0xaf, 0x17, 0x88, 0x0d, 0x9f,
	0xbc, 0x09, 0x90, 0x5d, 0x8c, 0xe9, 0x7c, 0xad, 0xc1, 0x46, 0x27, 0xaf, 0x70, 0x31, 0x45, 0x46,
	0xee, 0x18, 0x97, 0x2d, 0x59, 0xbd, 0x87, 0xc6, 0xf5, 0x16, 0x18, 0xbd, 0x40, 0x3e, 0x6c, 0x0c,
	0x15, 0x0e, 0x4d, 0xd2, 0x33, 0x2e, 0xdd, 0xb8, 0x7a, 0x07, 0xc6, 0x35, 0x57, 0x17, 0xbd, 0x40,
	0x9e, 0x41, 0x57, 0xa6, 0x2c, 0xb6, 0x09, 0x73, 0x44, 0x8c, 0xb5, 0x15, 0xb5, 0xb7, 0xbe, 0x5b,
	0xea, 0x05, 0xf2, 0x15, 0xb4, 0x9f, 0xcf, 0x19, 0xe2, 0x4a, 0x43, 0xee, 0x18, 0x97, 0xfd, 0x79,
	0xe9, 0x6d, 0x1b, 0x26, 0xf2, 0xc0, 0x11, 0x7a, 0x81, 0x7c, 0x0d, 0xdd, 0x97, 0x38, 0x73, 0x6c,
	0xf7, 0xe6, 0x47, 0x9f, 0x42, 0x27, 0x42, 0x97, 0x7f, 0x61, 0xae, 0x79, 0x72, 0x00, 0xdd, 0x43,
	0xcf, 0x3d, 0xb1, 0xd9, 0x22, 0x11, 0x34, 0xef, 0xad, 0xd9, 0x68, 0xbf, 0xe2, 0x4c, 0xdc, 0xf8,
	0x9e, 0xdf, 0xc2, 0xed, 0x48, 0x99, 0xad, 0xf3, 0xeb, 0x9d, 0x7f, 0x02, 0xad, 0xf4, 0x90, 0x20,
	0xb7, 0x8d, 0xdc, 0xa9, 0x91, 0x3c, 0xf4, 0x08, 0x1a, 0x26, 0xce, 0xd0, 0x3e, 0x43, 0x39, 0xf7,
	0xae, 0x78, 0xdc, 0x8b, 0x67, 0x70, 0x6b, 0xe6, 0x2d, 0x8c, 0xb9, 0x2d, 0x4e, 0x83, 0xa9, 0x31,
	0xf7, 0x06, 0x9e, 0xc1, 0xfc, 0xd9, 0x8b, 0xbb, 0x6b, 0x3d, 0x3b, 0x0a, 0x04, 0xb2, 0x43, 0x87,
	0x72, 0xfe, 0x73, 0xcd, 0xf8, 0xe2, 0x1b, 0xf5, 0xb7, 0x76, 0x5a, 0x55, 0x1f, 0x4f, 0xfe, 0x0d,
	0x00, 0x00, 0xff, 0xff, 0xc6, 0x9b, 0xac, 0x60, 0x07, 0x0f, 0x00, 0x00,
}
