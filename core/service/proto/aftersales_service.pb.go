// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.12.4
// source: aftersales_service.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EAfterSalesType int32

const (
	// 默认
	EAfterSalesType_TypeUnset EAfterSalesType = 0
	// 退款申请(部分退款)
	EAfterSalesType_TypeRefund EAfterSalesType = 1
	// 退货
	EAfterSalesType_TypeReturn EAfterSalesType = 2
	// 换货
	EAfterSalesType_TypeExchange EAfterSalesType = 3
	// 服务/维修
	EAfterSalesType_TypeService EAfterSalesType = 4
)

// Enum value maps for EAfterSalesType.
var (
	EAfterSalesType_name = map[int32]string{
		0: "TypeUnset",
		1: "TypeRefund",
		2: "TypeReturn",
		3: "TypeExchange",
		4: "TypeService",
	}
	EAfterSalesType_value = map[string]int32{
		"TypeUnset":    0,
		"TypeRefund":   1,
		"TypeReturn":   2,
		"TypeExchange": 3,
		"TypeService":  4,
	}
)

func (x EAfterSalesType) Enum() *EAfterSalesType {
	p := new(EAfterSalesType)
	*p = x
	return p
}

func (x EAfterSalesType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EAfterSalesType) Descriptor() protoreflect.EnumDescriptor {
	return file_aftersales_service_proto_enumTypes[0].Descriptor()
}

func (EAfterSalesType) Type() protoreflect.EnumType {
	return &file_aftersales_service_proto_enumTypes[0]
}

func (x EAfterSalesType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EAfterSalesType.Descriptor instead.
func (EAfterSalesType) EnumDescriptor() ([]byte, []int) {
	return file_aftersales_service_proto_rawDescGZIP(), []int{0}
}

// 售后单订单号
type AfterSalesOrderNo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 订单号
	OrderNo string `protobuf:"bytes,1,opt,name=OrderNo,proto3" json:"OrderNo"`
}

func (x *AfterSalesOrderNo) Reset() {
	*x = AfterSalesOrderNo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aftersales_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AfterSalesOrderNo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AfterSalesOrderNo) ProtoMessage() {}

func (x *AfterSalesOrderNo) ProtoReflect() protoreflect.Message {
	mi := &file_aftersales_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AfterSalesOrderNo.ProtoReflect.Descriptor instead.
func (*AfterSalesOrderNo) Descriptor() ([]byte, []int) {
	return file_aftersales_service_proto_rawDescGZIP(), []int{0}
}

func (x *AfterSalesOrderNo) GetOrderNo() string {
	if x != nil {
		return x.OrderNo
	}
	return ""
}

// 售后单处理请求
type AfterSalesProcessRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 订单号
	OrderNo string `protobuf:"bytes,1,opt,name=OrderNo,proto3" json:"OrderNo"`
	// 备注
	Remark string `protobuf:"bytes,2,opt,name=Remark,proto3" json:"Remark"`
	// 是否为客服介入处理
	IsIntercede bool `protobuf:"varint,3,opt,name=IsIntercede,proto3" json:"IsIntercede"`
}

func (x *AfterSalesProcessRequest) Reset() {
	*x = AfterSalesProcessRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aftersales_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AfterSalesProcessRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AfterSalesProcessRequest) ProtoMessage() {}

func (x *AfterSalesProcessRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aftersales_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AfterSalesProcessRequest.ProtoReflect.Descriptor instead.
func (*AfterSalesProcessRequest) Descriptor() ([]byte, []int) {
	return file_aftersales_service_proto_rawDescGZIP(), []int{1}
}

func (x *AfterSalesProcessRequest) GetOrderNo() string {
	if x != nil {
		return x.OrderNo
	}
	return ""
}

func (x *AfterSalesProcessRequest) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *AfterSalesProcessRequest) GetIsIntercede() bool {
	if x != nil {
		return x.IsIntercede
	}
	return false
}

// 原实际销售的订单编号
type OriginOrderIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderId int64 `protobuf:"varint,1,opt,name=OrderId,proto3" json:"OrderId"`
}

func (x *OriginOrderIdRequest) Reset() {
	*x = OriginOrderIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aftersales_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OriginOrderIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OriginOrderIdRequest) ProtoMessage() {}

func (x *OriginOrderIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aftersales_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OriginOrderIdRequest.ProtoReflect.Descriptor instead.
func (*OriginOrderIdRequest) Descriptor() ([]byte, []int) {
	return file_aftersales_service_proto_rawDescGZIP(), []int{2}
}

func (x *OriginOrderIdRequest) GetOrderId() int64 {
	if x != nil {
		return x.OrderId
	}
	return 0
}

// 订单售后申请
type SubmitAfterSalesOrderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 订单编号
	OrderId int64 `protobuf:"varint,1,opt,name=OrderId,proto3" json:"OrderId"`
	// 售后类型
	AfterSalesType EAfterSalesType `protobuf:"varint,2,opt,name=AfterSalesType,proto3,enum=EAfterSalesType" json:"AfterSalesType"`
	// 商品快照编号
	ItemSnapshotId int64 `protobuf:"varint,3,opt,name=ItemSnapshotId,proto3" json:"ItemSnapshotId"`
	// 数量
	Quantity int64 `protobuf:"varint,4,opt,name=Quantity,proto3" json:"Quantity"`
	// 原因
	Reason string `protobuf:"bytes,5,opt,name=Reason,proto3" json:"Reason"`
	// 图片
	Images []string `protobuf:"bytes,6,rep,name=Images,proto3" json:"Images"`
}

func (x *SubmitAfterSalesOrderRequest) Reset() {
	*x = SubmitAfterSalesOrderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aftersales_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubmitAfterSalesOrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitAfterSalesOrderRequest) ProtoMessage() {}

func (x *SubmitAfterSalesOrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aftersales_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitAfterSalesOrderRequest.ProtoReflect.Descriptor instead.
func (*SubmitAfterSalesOrderRequest) Descriptor() ([]byte, []int) {
	return file_aftersales_service_proto_rawDescGZIP(), []int{3}
}

func (x *SubmitAfterSalesOrderRequest) GetOrderId() int64 {
	if x != nil {
		return x.OrderId
	}
	return 0
}

func (x *SubmitAfterSalesOrderRequest) GetAfterSalesType() EAfterSalesType {
	if x != nil {
		return x.AfterSalesType
	}
	return EAfterSalesType_TypeUnset
}

func (x *SubmitAfterSalesOrderRequest) GetItemSnapshotId() int64 {
	if x != nil {
		return x.ItemSnapshotId
	}
	return 0
}

func (x *SubmitAfterSalesOrderRequest) GetQuantity() int64 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *SubmitAfterSalesOrderRequest) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *SubmitAfterSalesOrderRequest) GetImages() []string {
	if x != nil {
		return x.Images
	}
	return nil
}

// 提交售后订单响应
type SubmitAfterSalesOrderResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 状态码
	ErrCode int64 `protobuf:"varint,1,opt,name=ErrCode,proto3" json:"ErrCode"`
	// 错误信息
	ErrMsg string `protobuf:"bytes,2,opt,name=ErrMsg,proto3" json:"ErrMsg"`
	// 售后单号
	AfterSalesOrderNo string `protobuf:"bytes,3,opt,name=AfterSalesOrderNo,proto3" json:"AfterSalesOrderNo"`
}

func (x *SubmitAfterSalesOrderResponse) Reset() {
	*x = SubmitAfterSalesOrderResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aftersales_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubmitAfterSalesOrderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitAfterSalesOrderResponse) ProtoMessage() {}

func (x *SubmitAfterSalesOrderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aftersales_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitAfterSalesOrderResponse.ProtoReflect.Descriptor instead.
func (*SubmitAfterSalesOrderResponse) Descriptor() ([]byte, []int) {
	return file_aftersales_service_proto_rawDescGZIP(), []int{4}
}

func (x *SubmitAfterSalesOrderResponse) GetErrCode() int64 {
	if x != nil {
		return x.ErrCode
	}
	return 0
}

func (x *SubmitAfterSalesOrderResponse) GetErrMsg() string {
	if x != nil {
		return x.ErrMsg
	}
	return ""
}

func (x *SubmitAfterSalesOrderResponse) GetAfterSalesOrderNo() string {
	if x != nil {
		return x.AfterSalesOrderNo
	}
	return ""
}

type AfterSalesOrderListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value []*SAfterSalesOrder `protobuf:"bytes,1,rep,name=Value,proto3" json:"Value"`
}

func (x *AfterSalesOrderListResponse) Reset() {
	*x = AfterSalesOrderListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aftersales_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AfterSalesOrderListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AfterSalesOrderListResponse) ProtoMessage() {}

func (x *AfterSalesOrderListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aftersales_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AfterSalesOrderListResponse.ProtoReflect.Descriptor instead.
func (*AfterSalesOrderListResponse) Descriptor() ([]byte, []int) {
	return file_aftersales_service_proto_rawDescGZIP(), []int{5}
}

func (x *AfterSalesOrderListResponse) GetValue() []*SAfterSalesOrder {
	if x != nil {
		return x.Value
	}
	return nil
}

type PagingBuyerOrdersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BuyerId int64          `protobuf:"varint,1,opt,name=BuyerId,proto3" json:"BuyerId"`
	Params  *SPagingParams `protobuf:"bytes,2,opt,name=Params,proto3" json:"Params"`
}

func (x *PagingBuyerOrdersRequest) Reset() {
	*x = PagingBuyerOrdersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aftersales_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PagingBuyerOrdersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PagingBuyerOrdersRequest) ProtoMessage() {}

func (x *PagingBuyerOrdersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aftersales_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PagingBuyerOrdersRequest.ProtoReflect.Descriptor instead.
func (*PagingBuyerOrdersRequest) Descriptor() ([]byte, []int) {
	return file_aftersales_service_proto_rawDescGZIP(), []int{6}
}

func (x *PagingBuyerOrdersRequest) GetBuyerId() int64 {
	if x != nil {
		return x.BuyerId
	}
	return 0
}

func (x *PagingBuyerOrdersRequest) GetParams() *SPagingParams {
	if x != nil {
		return x.Params
	}
	return nil
}

type PagingSellerOrdersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SellerId int64          `protobuf:"varint,1,opt,name=SellerId,proto3" json:"SellerId"`
	Params   *SPagingParams `protobuf:"bytes,2,opt,name=Params,proto3" json:"Params"`
}

func (x *PagingSellerOrdersRequest) Reset() {
	*x = PagingSellerOrdersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aftersales_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PagingSellerOrdersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PagingSellerOrdersRequest) ProtoMessage() {}

func (x *PagingSellerOrdersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aftersales_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PagingSellerOrdersRequest.ProtoReflect.Descriptor instead.
func (*PagingSellerOrdersRequest) Descriptor() ([]byte, []int) {
	return file_aftersales_service_proto_rawDescGZIP(), []int{7}
}

func (x *PagingSellerOrdersRequest) GetSellerId() int64 {
	if x != nil {
		return x.SellerId
	}
	return 0
}

func (x *PagingSellerOrdersRequest) GetParams() *SPagingParams {
	if x != nil {
		return x.Params
	}
	return nil
}

type PagingBuyerAfterSalesOrderListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64                          `protobuf:"varint,1,opt,name=total,proto3" json:"total"`
	Data  []*SPagingBuyerAfterSalesOrder `protobuf:"bytes,2,rep,name=Data,proto3" json:"Data"`
}

func (x *PagingBuyerAfterSalesOrderListResponse) Reset() {
	*x = PagingBuyerAfterSalesOrderListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aftersales_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PagingBuyerAfterSalesOrderListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PagingBuyerAfterSalesOrderListResponse) ProtoMessage() {}

func (x *PagingBuyerAfterSalesOrderListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aftersales_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PagingBuyerAfterSalesOrderListResponse.ProtoReflect.Descriptor instead.
func (*PagingBuyerAfterSalesOrderListResponse) Descriptor() ([]byte, []int) {
	return file_aftersales_service_proto_rawDescGZIP(), []int{8}
}

func (x *PagingBuyerAfterSalesOrderListResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *PagingBuyerAfterSalesOrderListResponse) GetData() []*SPagingBuyerAfterSalesOrder {
	if x != nil {
		return x.Data
	}
	return nil
}

type PagingSellerAfterSalesOrderListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64                           `protobuf:"varint,1,opt,name=total,proto3" json:"total"`
	Data  []*SPagingSellerAfterSalesOrder `protobuf:"bytes,2,rep,name=Data,proto3" json:"Data"`
}

func (x *PagingSellerAfterSalesOrderListResponse) Reset() {
	*x = PagingSellerAfterSalesOrderListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aftersales_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PagingSellerAfterSalesOrderListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PagingSellerAfterSalesOrderListResponse) ProtoMessage() {}

func (x *PagingSellerAfterSalesOrderListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aftersales_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PagingSellerAfterSalesOrderListResponse.ProtoReflect.Descriptor instead.
func (*PagingSellerAfterSalesOrderListResponse) Descriptor() ([]byte, []int) {
	return file_aftersales_service_proto_rawDescGZIP(), []int{9}
}

func (x *PagingSellerAfterSalesOrderListResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *PagingSellerAfterSalesOrderListResponse) GetData() []*SPagingSellerAfterSalesOrder {
	if x != nil {
		return x.Data
	}
	return nil
}

// 售后单
type SAfterSalesOrder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 编号
	Id int64 `protobuf:"varint,21,opt,name=Id,proto3" json:"Id"`
	// 售后单单号
	OrderNo string `protobuf:"bytes,1,opt,name=OrderNo,proto3" json:"OrderNo"`
	// 订单编号
	RelateOrderId int64 `protobuf:"varint,2,opt,name=RelateOrderId,proto3" json:"RelateOrderId"`
	// 运营商编号
	VendorId int64 `protobuf:"varint,3,opt,name=VendorId,proto3" json:"VendorId"`
	// 购买者编号
	BuyerId int64 `protobuf:"varint,4,opt,name=BuyerId,proto3" json:"BuyerId"`
	// 类型，退货、换货、维修
	AfterSalesType int32 `protobuf:"varint,5,opt,name=AfterSalesType,proto3" json:"AfterSalesType"`
	// 退货的商品项编号
	SnapshotId int64 `protobuf:"varint,6,opt,name=SnapshotId,proto3" json:"SnapshotId"`
	// 商品数量
	Quantity int32 `protobuf:"varint,7,opt,name=Quantity,proto3" json:"Quantity"`
	// 售后原因
	Reason string `protobuf:"bytes,8,opt,name=Reason,proto3" json:"Reason"`
	// 商品售后图片凭证
	ImageUrl string `protobuf:"bytes,9,opt,name=ImageUrl,proto3" json:"ImageUrl"`
	// 联系人
	PersonName string `protobuf:"bytes,10,opt,name=PersonName,proto3" json:"PersonName"`
	// 联系电话
	PersonPhone string `protobuf:"bytes,11,opt,name=PersonPhone,proto3" json:"PersonPhone"`
	// 退货的快递服务商编号
	ShipmentExpress string `protobuf:"bytes,12,opt,name=ShipmentExpress,proto3" json:"ShipmentExpress"`
	// 退货的快递单号
	ShipmentOrderNo string `protobuf:"bytes,13,opt,name=ShipmentOrderNo,proto3" json:"ShipmentOrderNo"`
	// 退货凭证
	ShipmentImage string `protobuf:"bytes,14,opt,name=ShipmentImage,proto3" json:"ShipmentImage"`
	// 备注(系统)
	Remark string `protobuf:"bytes,15,opt,name=Remark,proto3" json:"Remark"`
	// 运营商备注
	VendorRemark string `protobuf:"bytes,16,opt,name=VendorRemark,proto3" json:"VendorRemark"`
	// 售后单状态
	Status int32 `protobuf:"varint,17,opt,name=Status,proto3" json:"Status"`
	// 提交时间
	CreateTime int64 `protobuf:"varint,18,opt,name=CreateTime,proto3" json:"CreateTime"`
	// 更新时间
	UpdateTime int64 `protobuf:"varint,19,opt,name=UpdateTime,proto3" json:"UpdateTime"`
	// 订单状态
	StatusText string `protobuf:"bytes,20,opt,name=StatusText,proto3" json:"StatusText"`
}

func (x *SAfterSalesOrder) Reset() {
	*x = SAfterSalesOrder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aftersales_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SAfterSalesOrder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SAfterSalesOrder) ProtoMessage() {}

func (x *SAfterSalesOrder) ProtoReflect() protoreflect.Message {
	mi := &file_aftersales_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SAfterSalesOrder.ProtoReflect.Descriptor instead.
func (*SAfterSalesOrder) Descriptor() ([]byte, []int) {
	return file_aftersales_service_proto_rawDescGZIP(), []int{10}
}

func (x *SAfterSalesOrder) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SAfterSalesOrder) GetOrderNo() string {
	if x != nil {
		return x.OrderNo
	}
	return ""
}

func (x *SAfterSalesOrder) GetRelateOrderId() int64 {
	if x != nil {
		return x.RelateOrderId
	}
	return 0
}

func (x *SAfterSalesOrder) GetVendorId() int64 {
	if x != nil {
		return x.VendorId
	}
	return 0
}

func (x *SAfterSalesOrder) GetBuyerId() int64 {
	if x != nil {
		return x.BuyerId
	}
	return 0
}

func (x *SAfterSalesOrder) GetAfterSalesType() int32 {
	if x != nil {
		return x.AfterSalesType
	}
	return 0
}

func (x *SAfterSalesOrder) GetSnapshotId() int64 {
	if x != nil {
		return x.SnapshotId
	}
	return 0
}

func (x *SAfterSalesOrder) GetQuantity() int32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *SAfterSalesOrder) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *SAfterSalesOrder) GetImageUrl() string {
	if x != nil {
		return x.ImageUrl
	}
	return ""
}

func (x *SAfterSalesOrder) GetPersonName() string {
	if x != nil {
		return x.PersonName
	}
	return ""
}

func (x *SAfterSalesOrder) GetPersonPhone() string {
	if x != nil {
		return x.PersonPhone
	}
	return ""
}

func (x *SAfterSalesOrder) GetShipmentExpress() string {
	if x != nil {
		return x.ShipmentExpress
	}
	return ""
}

func (x *SAfterSalesOrder) GetShipmentOrderNo() string {
	if x != nil {
		return x.ShipmentOrderNo
	}
	return ""
}

func (x *SAfterSalesOrder) GetShipmentImage() string {
	if x != nil {
		return x.ShipmentImage
	}
	return ""
}

func (x *SAfterSalesOrder) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *SAfterSalesOrder) GetVendorRemark() string {
	if x != nil {
		return x.VendorRemark
	}
	return ""
}

func (x *SAfterSalesOrder) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *SAfterSalesOrder) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *SAfterSalesOrder) GetUpdateTime() int64 {
	if x != nil {
		return x.UpdateTime
	}
	return 0
}

func (x *SAfterSalesOrder) GetStatusText() string {
	if x != nil {
		return x.StatusText
	}
	return ""
}

// 分页售后订单信息
type SPagingBuyerAfterSalesOrder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 编号
	Id int64 `protobuf:"varint,1,opt,name=Id,proto3" json:"Id"`
	// 订单编号
	OrderNo string `protobuf:"bytes,2,opt,name=OrderNo,proto3" json:"OrderNo"`
	// 运营商编号
	VendorId int64 `protobuf:"varint,3,opt,name=VendorId,proto3" json:"VendorId"`
	// 运营商名称
	SellerName string `protobuf:"bytes,4,opt,name=SellerName,proto3" json:"SellerName"`
	// 类型，退货、换货、维修
	AfterSalesType int32 `protobuf:"varint,5,opt,name=AfterSalesType,proto3" json:"AfterSalesType"`
	// 退货的商品项编号
	SnapshotId int64 `protobuf:"varint,6,opt,name=SnapshotId,proto3" json:"SnapshotId"`
	// 商品数量
	Quantity int32 `protobuf:"varint,7,opt,name=Quantity,proto3" json:"Quantity"`
	// SKU编号
	SkuId int64 `protobuf:"varint,8,opt,name=SkuId,proto3" json:"SkuId"`
	// 商品标题
	ItemTitle string `protobuf:"bytes,9,opt,name=ItemTitle,proto3" json:"ItemTitle"`
	// 商品图片
	ItemImage string `protobuf:"bytes,10,opt,name=ItemImage,proto3" json:"ItemImage"`
	// 售后单状态
	Status int32 `protobuf:"varint,11,opt,name=Status,proto3" json:"Status"`
	// 提交时间
	CreateTime int64 `protobuf:"varint,12,opt,name=CreateTime,proto3" json:"CreateTime"`
	// 订单状态
	StatusText string `protobuf:"bytes,13,opt,name=StatusText,proto3" json:"StatusText"`
}

func (x *SPagingBuyerAfterSalesOrder) Reset() {
	*x = SPagingBuyerAfterSalesOrder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aftersales_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SPagingBuyerAfterSalesOrder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SPagingBuyerAfterSalesOrder) ProtoMessage() {}

func (x *SPagingBuyerAfterSalesOrder) ProtoReflect() protoreflect.Message {
	mi := &file_aftersales_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SPagingBuyerAfterSalesOrder.ProtoReflect.Descriptor instead.
func (*SPagingBuyerAfterSalesOrder) Descriptor() ([]byte, []int) {
	return file_aftersales_service_proto_rawDescGZIP(), []int{11}
}

func (x *SPagingBuyerAfterSalesOrder) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SPagingBuyerAfterSalesOrder) GetOrderNo() string {
	if x != nil {
		return x.OrderNo
	}
	return ""
}

func (x *SPagingBuyerAfterSalesOrder) GetVendorId() int64 {
	if x != nil {
		return x.VendorId
	}
	return 0
}

func (x *SPagingBuyerAfterSalesOrder) GetSellerName() string {
	if x != nil {
		return x.SellerName
	}
	return ""
}

func (x *SPagingBuyerAfterSalesOrder) GetAfterSalesType() int32 {
	if x != nil {
		return x.AfterSalesType
	}
	return 0
}

func (x *SPagingBuyerAfterSalesOrder) GetSnapshotId() int64 {
	if x != nil {
		return x.SnapshotId
	}
	return 0
}

func (x *SPagingBuyerAfterSalesOrder) GetQuantity() int32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *SPagingBuyerAfterSalesOrder) GetSkuId() int64 {
	if x != nil {
		return x.SkuId
	}
	return 0
}

func (x *SPagingBuyerAfterSalesOrder) GetItemTitle() string {
	if x != nil {
		return x.ItemTitle
	}
	return ""
}

func (x *SPagingBuyerAfterSalesOrder) GetItemImage() string {
	if x != nil {
		return x.ItemImage
	}
	return ""
}

func (x *SPagingBuyerAfterSalesOrder) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *SPagingBuyerAfterSalesOrder) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *SPagingBuyerAfterSalesOrder) GetStatusText() string {
	if x != nil {
		return x.StatusText
	}
	return ""
}

// 分页商户售后单
type SPagingSellerAfterSalesOrder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 编号
	Id int64 `protobuf:"varint,1,opt,name=Id,proto3" json:"Id"`
	// 订单编号
	OrderNo string `protobuf:"bytes,2,opt,name=OrderNo,proto3" json:"OrderNo"`
	// 会员编号
	BuyerId int64 `protobuf:"varint,3,opt,name=BuyerId,proto3" json:"BuyerId"`
	// 会员名称
	BuyerName string `protobuf:"bytes,4,opt,name=BuyerName,proto3" json:"BuyerName"`
	// 类型，退货、换货、维修
	AfterSalesType int32 `protobuf:"varint,5,opt,name=AfterSalesType,proto3" json:"AfterSalesType"`
	// 退货的商品项编号
	SnapshotId int64 `protobuf:"varint,6,opt,name=SnapshotId,proto3" json:"SnapshotId"`
	// 商品数量
	Quantity int32 `protobuf:"varint,7,opt,name=Quantity,proto3" json:"Quantity"`
	// SKU编号
	SkuId int64 `protobuf:"varint,8,opt,name=SkuId,proto3" json:"SkuId"`
	// 商品标题
	ItemTitle string `protobuf:"bytes,9,opt,name=ItemTitle,proto3" json:"ItemTitle"`
	// 商品图片
	ItemImage string `protobuf:"bytes,10,opt,name=ItemImage,proto3" json:"ItemImage"`
	// 售后单状态
	Status int32 `protobuf:"varint,11,opt,name=Status,proto3" json:"Status"`
	// 提交时间
	CreateTime int64 `protobuf:"varint,12,opt,name=CreateTime,proto3" json:"CreateTime"`
	// 更新时间
	UpdateTime int64 `protobuf:"varint,13,opt,name=UpdateTime,proto3" json:"UpdateTime"`
	// 订单状态
	StatusText string `protobuf:"bytes,14,opt,name=StatusText,proto3" json:"StatusText"`
}

func (x *SPagingSellerAfterSalesOrder) Reset() {
	*x = SPagingSellerAfterSalesOrder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aftersales_service_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SPagingSellerAfterSalesOrder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SPagingSellerAfterSalesOrder) ProtoMessage() {}

func (x *SPagingSellerAfterSalesOrder) ProtoReflect() protoreflect.Message {
	mi := &file_aftersales_service_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SPagingSellerAfterSalesOrder.ProtoReflect.Descriptor instead.
func (*SPagingSellerAfterSalesOrder) Descriptor() ([]byte, []int) {
	return file_aftersales_service_proto_rawDescGZIP(), []int{12}
}

func (x *SPagingSellerAfterSalesOrder) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SPagingSellerAfterSalesOrder) GetOrderNo() string {
	if x != nil {
		return x.OrderNo
	}
	return ""
}

func (x *SPagingSellerAfterSalesOrder) GetBuyerId() int64 {
	if x != nil {
		return x.BuyerId
	}
	return 0
}

func (x *SPagingSellerAfterSalesOrder) GetBuyerName() string {
	if x != nil {
		return x.BuyerName
	}
	return ""
}

func (x *SPagingSellerAfterSalesOrder) GetAfterSalesType() int32 {
	if x != nil {
		return x.AfterSalesType
	}
	return 0
}

func (x *SPagingSellerAfterSalesOrder) GetSnapshotId() int64 {
	if x != nil {
		return x.SnapshotId
	}
	return 0
}

func (x *SPagingSellerAfterSalesOrder) GetQuantity() int32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *SPagingSellerAfterSalesOrder) GetSkuId() int64 {
	if x != nil {
		return x.SkuId
	}
	return 0
}

func (x *SPagingSellerAfterSalesOrder) GetItemTitle() string {
	if x != nil {
		return x.ItemTitle
	}
	return ""
}

func (x *SPagingSellerAfterSalesOrder) GetItemImage() string {
	if x != nil {
		return x.ItemImage
	}
	return ""
}

func (x *SPagingSellerAfterSalesOrder) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *SPagingSellerAfterSalesOrder) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *SPagingSellerAfterSalesOrder) GetUpdateTime() int64 {
	if x != nil {
		return x.UpdateTime
	}
	return 0
}

func (x *SPagingSellerAfterSalesOrder) GetStatusText() string {
	if x != nil {
		return x.StatusText
	}
	return ""
}

// 换货发货请求
type ReturnShipmentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 换货单编号
	OrderNo string `protobuf:"bytes,1,opt,name=OrderNo,proto3" json:"OrderNo"`
	// 物流名称
	ShipmentExpress string `protobuf:"bytes,2,opt,name=ShipmentExpress,proto3" json:"ShipmentExpress"`
	// 物流单号
	ShipmentOrder string `protobuf:"bytes,3,opt,name=ShipmentOrder,proto3" json:"ShipmentOrder"`
}

func (x *ReturnShipmentRequest) Reset() {
	*x = ReturnShipmentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aftersales_service_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReturnShipmentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReturnShipmentRequest) ProtoMessage() {}

func (x *ReturnShipmentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aftersales_service_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReturnShipmentRequest.ProtoReflect.Descriptor instead.
func (*ReturnShipmentRequest) Descriptor() ([]byte, []int) {
	return file_aftersales_service_proto_rawDescGZIP(), []int{13}
}

func (x *ReturnShipmentRequest) GetOrderNo() string {
	if x != nil {
		return x.OrderNo
	}
	return ""
}

func (x *ReturnShipmentRequest) GetShipmentExpress() string {
	if x != nil {
		return x.ShipmentExpress
	}
	return ""
}

func (x *ReturnShipmentRequest) GetShipmentOrder() string {
	if x != nil {
		return x.ShipmentOrder
	}
	return ""
}

var File_aftersales_service_proto protoreflect.FileDescriptor

var file_aftersales_service_proto_rawDesc = []byte{
	0x0a, 0x18, 0x61, 0x66, 0x74, 0x65, 0x72, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0c, 0x67, 0x6c, 0x6f, 0x62,
	0x61, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x2d, 0x0a, 0x11, 0x41, 0x66, 0x74, 0x65,
	0x72, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x6f, 0x12, 0x18, 0x0a,
	0x07, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x6f, 0x22, 0x6e, 0x0a, 0x18, 0x41, 0x66, 0x74, 0x65, 0x72,
	0x53, 0x61, 0x6c, 0x65, 0x73, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x6f, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x6f, 0x12, 0x16, 0x0a,
	0x06, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x52,
	0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x20, 0x0a, 0x0b, 0x49, 0x73, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x63, 0x65, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x49, 0x73, 0x49, 0x6e,
	0x74, 0x65, 0x72, 0x63, 0x65, 0x64, 0x65, 0x22, 0x30, 0x0a, 0x14, 0x4f, 0x72, 0x69, 0x67, 0x69,
	0x6e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x18, 0x0a, 0x07, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x07, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x22, 0xe6, 0x01, 0x0a, 0x1c, 0x53, 0x75,
	0x62, 0x6d, 0x69, 0x74, 0x41, 0x66, 0x74, 0x65, 0x72, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x38, 0x0a, 0x0e, 0x41, 0x66, 0x74, 0x65, 0x72, 0x53, 0x61, 0x6c,
	0x65, 0x73, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x45,
	0x41, 0x66, 0x74, 0x65, 0x72, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0e,
	0x41, 0x66, 0x74, 0x65, 0x72, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x26,
	0x0a, 0x0e, 0x49, 0x74, 0x65, 0x6d, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x49, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x49, 0x74, 0x65, 0x6d, 0x53, 0x6e, 0x61, 0x70,
	0x73, 0x68, 0x6f, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x49, 0x6d,
	0x61, 0x67, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x49, 0x6d, 0x61, 0x67,
	0x65, 0x73, 0x22, 0x7f, 0x0a, 0x1d, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x41, 0x66, 0x74, 0x65,
	0x72, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x45, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x45, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x45, 0x72, 0x72, 0x4d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x45,
	0x72, 0x72, 0x4d, 0x73, 0x67, 0x12, 0x2c, 0x0a, 0x11, 0x41, 0x66, 0x74, 0x65, 0x72, 0x53, 0x61,
	0x6c, 0x65, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x11, 0x41, 0x66, 0x74, 0x65, 0x72, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x4e, 0x6f, 0x22, 0x46, 0x0a, 0x1b, 0x41, 0x66, 0x74, 0x65, 0x72, 0x53, 0x61, 0x6c, 0x65,
	0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x27, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x53, 0x41, 0x66, 0x74, 0x65, 0x72, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x52, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x5c, 0x0a, 0x18, 0x50,
	0x61, 0x67, 0x69, 0x6e, 0x67, 0x42, 0x75, 0x79, 0x65, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x42, 0x75, 0x79, 0x65, 0x72,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x42, 0x75, 0x79, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x26, 0x0a, 0x06, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0e, 0x2e, 0x53, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x52, 0x06, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x22, 0x5f, 0x0a, 0x19, 0x50, 0x61, 0x67,
	0x69, 0x6e, 0x67, 0x53, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x65, 0x6c, 0x6c, 0x65, 0x72,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x53, 0x65, 0x6c, 0x6c, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x26, 0x0a, 0x06, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x53, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x52, 0x06, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x22, 0x70, 0x0a, 0x26, 0x50, 0x61,
	0x67, 0x69, 0x6e, 0x67, 0x42, 0x75, 0x79, 0x65, 0x72, 0x41, 0x66, 0x74, 0x65, 0x72, 0x53, 0x61,
	0x6c, 0x65, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x30, 0x0a, 0x04, 0x44, 0x61,
	0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x53, 0x50, 0x61, 0x67, 0x69,
	0x6e, 0x67, 0x42, 0x75, 0x79, 0x65, 0x72, 0x41, 0x66, 0x74, 0x65, 0x72, 0x53, 0x61, 0x6c, 0x65,
	0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x22, 0x72, 0x0a, 0x27,
	0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x41, 0x66, 0x74, 0x65,
	0x72, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x31, 0x0a,
	0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x53, 0x50,
	0x61, 0x67, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x41, 0x66, 0x74, 0x65, 0x72,
	0x53, 0x61, 0x6c, 0x65, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61,
	0x22, 0xa0, 0x05, 0x0a, 0x10, 0x53, 0x41, 0x66, 0x74, 0x65, 0x72, 0x53, 0x61, 0x6c, 0x65, 0x73,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x15, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x6f,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x6f, 0x12,
	0x24, 0x0a, 0x0d, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x49,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x49,
	0x64, 0x12, 0x18, 0x0a, 0x07, 0x42, 0x75, 0x79, 0x65, 0x72, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x07, 0x42, 0x75, 0x79, 0x65, 0x72, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x41,
	0x66, 0x74, 0x65, 0x72, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x54, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0e, 0x41, 0x66, 0x74, 0x65, 0x72, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x49,
	0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f,
	0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12,
	0x16, 0x0a, 0x06, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x49, 0x6d, 0x61, 0x67, 0x65,
	0x55, 0x72, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x49, 0x6d, 0x61, 0x67, 0x65,
	0x55, 0x72, 0x6c, 0x12, 0x1e, 0x0a, 0x0a, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x50, 0x68, 0x6f,
	0x6e, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e,
	0x50, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x53, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e,
	0x74, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f,
	0x53, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x12,
	0x28, 0x0a, 0x0f, 0x53, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x4e, 0x6f, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x53, 0x68, 0x69, 0x70, 0x6d, 0x65,
	0x6e, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x6f, 0x12, 0x24, 0x0a, 0x0d, 0x53, 0x68, 0x69,
	0x70, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x53, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x22, 0x0a, 0x0c, 0x56, 0x65, 0x6e, 0x64, 0x6f,
	0x72, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x56,
	0x65, 0x6e, 0x64, 0x6f, 0x72, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x16, 0x0a, 0x06, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x11, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x54, 0x65, 0x78,
	0x74, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x54,
	0x65, 0x78, 0x74, 0x22, 0x91, 0x03, 0x0a, 0x1b, 0x53, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x42,
	0x75, 0x79, 0x65, 0x72, 0x41, 0x66, 0x74, 0x65, 0x72, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x6f, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x6f, 0x12, 0x1a, 0x0a,
	0x08, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x65, 0x6c,
	0x6c, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x53,
	0x65, 0x6c, 0x6c, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x41, 0x66, 0x74,
	0x65, 0x72, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x54, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0e, 0x41, 0x66, 0x74, 0x65, 0x72, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x49, 0x64, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x49,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x53, 0x6b, 0x75, 0x49, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x53, 0x6b,
	0x75, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x49, 0x74, 0x65, 0x6d, 0x54, 0x69, 0x74, 0x6c, 0x65,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x49, 0x74, 0x65, 0x6d, 0x54, 0x69, 0x74, 0x6c,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x54, 0x65, 0x78, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x54, 0x65, 0x78, 0x74, 0x22, 0xae, 0x03, 0x0a, 0x1c, 0x53, 0x50, 0x61, 0x67,
	0x69, 0x6e, 0x67, 0x53, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x41, 0x66, 0x74, 0x65, 0x72, 0x53, 0x61,
	0x6c, 0x65, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x4e, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x4e, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x42, 0x75, 0x79, 0x65, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x07, 0x42, 0x75, 0x79, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09,
	0x42, 0x75, 0x79, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x42, 0x75, 0x79, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x41, 0x66,
	0x74, 0x65, 0x72, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x54, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0e, 0x41, 0x66, 0x74, 0x65, 0x72, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x49, 0x64,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74,
	0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x53, 0x6b, 0x75, 0x49, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x53,
	0x6b, 0x75, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x49, 0x74, 0x65, 0x6d, 0x54, 0x69, 0x74, 0x6c,
	0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x49, 0x74, 0x65, 0x6d, 0x54, 0x69, 0x74,
	0x6c, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x6d, 0x61, 0x67, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x54, 0x65, 0x78, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x54, 0x65, 0x78, 0x74, 0x22, 0x81, 0x01, 0x0a, 0x15, 0x52, 0x65, 0x74,
	0x75, 0x72, 0x6e, 0x53, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x6f, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x6f, 0x12, 0x28, 0x0a, 0x0f,
	0x53, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x53, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x45,
	0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x53, 0x68, 0x69, 0x70, 0x6d, 0x65,
	0x6e, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x53,
	0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x2a, 0x63, 0x0a, 0x0f,
	0x45, 0x41, 0x66, 0x74, 0x65, 0x72, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x0d, 0x0a, 0x09, 0x54, 0x79, 0x70, 0x65, 0x55, 0x6e, 0x73, 0x65, 0x74, 0x10, 0x00, 0x12, 0x0e,
	0x0a, 0x0a, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x10, 0x01, 0x12, 0x0e,
	0x0a, 0x0a, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x10, 0x02, 0x12, 0x10,
	0x0a, 0x0c, 0x54, 0x79, 0x70, 0x65, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x10, 0x03,
	0x12, 0x0f, 0x0a, 0x0b, 0x54, 0x79, 0x70, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x10,
	0x04, 0x32, 0x9d, 0x07, 0x0a, 0x11, 0x41, 0x66, 0x74, 0x65, 0x72, 0x53, 0x61, 0x6c, 0x65, 0x73,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x58, 0x0a, 0x15, 0x53, 0x75, 0x62, 0x6d, 0x69,
	0x74, 0x41, 0x66, 0x74, 0x65, 0x72, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x12, 0x1d, 0x2e, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x41, 0x66, 0x74, 0x65, 0x72, 0x53, 0x61,
	0x6c, 0x65, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1e, 0x2e, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x41, 0x66, 0x74, 0x65, 0x72, 0x53, 0x61, 0x6c,
	0x65, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x59, 0x0a, 0x20, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x41, 0x66, 0x74, 0x65, 0x72,
	0x53, 0x61, 0x6c, 0x65, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4f, 0x66, 0x53, 0x61, 0x6c, 0x65,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x15, 0x2e, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x41,
	0x66, 0x74, 0x65, 0x72, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x69, 0x0a, 0x21,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x50, 0x61, 0x67, 0x65, 0x72, 0x41, 0x66, 0x74, 0x65, 0x72, 0x53,
	0x61, 0x6c, 0x65, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4f, 0x66, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x12, 0x19, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x42, 0x75, 0x79, 0x65, 0x72, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x50,
	0x61, 0x67, 0x69, 0x6e, 0x67, 0x42, 0x75, 0x79, 0x65, 0x72, 0x41, 0x66, 0x74, 0x65, 0x72, 0x53,
	0x61, 0x6c, 0x65, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6b, 0x0a, 0x21, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x50, 0x61, 0x67, 0x65, 0x72, 0x41, 0x66, 0x74, 0x65, 0x72, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x4f, 0x66, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x12, 0x1a, 0x2e, 0x50,
	0x61, 0x67, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e,
	0x67, 0x53, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x41, 0x66, 0x74, 0x65, 0x72, 0x53, 0x61, 0x6c, 0x65,
	0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x3c, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x41, 0x66, 0x74, 0x65, 0x72,
	0x53, 0x61, 0x6c, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x12, 0x2e, 0x41, 0x66, 0x74, 0x65,
	0x72, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x6f, 0x1a, 0x11, 0x2e,
	0x53, 0x41, 0x66, 0x74, 0x65, 0x72, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x22, 0x00, 0x12, 0x37, 0x0a, 0x0f, 0x41, 0x67, 0x72, 0x65, 0x65, 0x41, 0x66, 0x74, 0x65, 0x72,
	0x53, 0x61, 0x6c, 0x65, 0x73, 0x12, 0x19, 0x2e, 0x41, 0x66, 0x74, 0x65, 0x72, 0x53, 0x61, 0x6c,
	0x65, 0x73, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x07, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x00, 0x12, 0x39, 0x0a, 0x11, 0x44,
	0x65, 0x63, 0x6c, 0x69, 0x6e, 0x65, 0x41, 0x66, 0x74, 0x65, 0x72, 0x53, 0x61, 0x6c, 0x65, 0x73,
	0x12, 0x19, 0x2e, 0x41, 0x66, 0x74, 0x65, 0x72, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x50, 0x72, 0x6f,
	0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x07, 0x2e, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x22, 0x00, 0x12, 0x38, 0x0a, 0x10, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x63, 0x65, 0x64, 0x65, 0x12, 0x19, 0x2e, 0x41, 0x66, 0x74,
	0x65, 0x72, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x07, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x00,
	0x12, 0x32, 0x0a, 0x11, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x41, 0x66, 0x74, 0x65, 0x72,
	0x53, 0x61, 0x6c, 0x65, 0x73, 0x12, 0x12, 0x2e, 0x41, 0x66, 0x74, 0x65, 0x72, 0x53, 0x61, 0x6c,
	0x65, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x6f, 0x1a, 0x07, 0x2e, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x22, 0x00, 0x12, 0x38, 0x0a, 0x10, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x41, 0x66,
	0x74, 0x65, 0x72, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x12, 0x19, 0x2e, 0x41, 0x66, 0x74, 0x65, 0x72,
	0x53, 0x61, 0x6c, 0x65, 0x73, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x07, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x00, 0x12, 0x3e,
	0x0a, 0x16, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x41, 0x66, 0x74, 0x65, 0x72, 0x53, 0x61,
	0x6c, 0x65, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x19, 0x2e, 0x41, 0x66, 0x74, 0x65, 0x72,
	0x53, 0x61, 0x6c, 0x65, 0x73, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x07, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x00, 0x12, 0x33,
	0x0a, 0x0e, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x53, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74,
	0x12, 0x16, 0x2e, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x53, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x07, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x22, 0x00, 0x12, 0x2c, 0x0a, 0x0b, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x49, 0x74,
	0x65, 0x6d, 0x12, 0x12, 0x2e, 0x41, 0x66, 0x74, 0x65, 0x72, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x4e, 0x6f, 0x1a, 0x07, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22,
	0x00, 0x42, 0x3c, 0x0a, 0x13, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x67, 0x6f, 0x32, 0x6f, 0x2e, 0x72, 0x70, 0x63, 0x42, 0x1b, 0x41, 0x66, 0x74, 0x65, 0x72, 0x53,
	0x61, 0x6c, 0x65, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4f, 0x75, 0x74, 0x65, 0x72,
	0x43, 0x6c, 0x61, 0x73, 0x73, 0x5a, 0x08, 0x2e, 0x2f, 0x3b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_aftersales_service_proto_rawDescOnce sync.Once
	file_aftersales_service_proto_rawDescData = file_aftersales_service_proto_rawDesc
)

func file_aftersales_service_proto_rawDescGZIP() []byte {
	file_aftersales_service_proto_rawDescOnce.Do(func() {
		file_aftersales_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_aftersales_service_proto_rawDescData)
	})
	return file_aftersales_service_proto_rawDescData
}

var file_aftersales_service_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_aftersales_service_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_aftersales_service_proto_goTypes = []interface{}{
	(EAfterSalesType)(0),                            // 0: EAfterSalesType
	(*AfterSalesOrderNo)(nil),                       // 1: AfterSalesOrderNo
	(*AfterSalesProcessRequest)(nil),                // 2: AfterSalesProcessRequest
	(*OriginOrderIdRequest)(nil),                    // 3: OriginOrderIdRequest
	(*SubmitAfterSalesOrderRequest)(nil),            // 4: SubmitAfterSalesOrderRequest
	(*SubmitAfterSalesOrderResponse)(nil),           // 5: SubmitAfterSalesOrderResponse
	(*AfterSalesOrderListResponse)(nil),             // 6: AfterSalesOrderListResponse
	(*PagingBuyerOrdersRequest)(nil),                // 7: PagingBuyerOrdersRequest
	(*PagingSellerOrdersRequest)(nil),               // 8: PagingSellerOrdersRequest
	(*PagingBuyerAfterSalesOrderListResponse)(nil),  // 9: PagingBuyerAfterSalesOrderListResponse
	(*PagingSellerAfterSalesOrderListResponse)(nil), // 10: PagingSellerAfterSalesOrderListResponse
	(*SAfterSalesOrder)(nil),                        // 11: SAfterSalesOrder
	(*SPagingBuyerAfterSalesOrder)(nil),             // 12: SPagingBuyerAfterSalesOrder
	(*SPagingSellerAfterSalesOrder)(nil),            // 13: SPagingSellerAfterSalesOrder
	(*ReturnShipmentRequest)(nil),                   // 14: ReturnShipmentRequest
	(*SPagingParams)(nil),                           // 15: SPagingParams
	(*Result)(nil),                                  // 16: Result
}
var file_aftersales_service_proto_depIdxs = []int32{
	0,  // 0: SubmitAfterSalesOrderRequest.AfterSalesType:type_name -> EAfterSalesType
	11, // 1: AfterSalesOrderListResponse.Value:type_name -> SAfterSalesOrder
	15, // 2: PagingBuyerOrdersRequest.Params:type_name -> SPagingParams
	15, // 3: PagingSellerOrdersRequest.Params:type_name -> SPagingParams
	12, // 4: PagingBuyerAfterSalesOrderListResponse.Data:type_name -> SPagingBuyerAfterSalesOrder
	13, // 5: PagingSellerAfterSalesOrderListResponse.Data:type_name -> SPagingSellerAfterSalesOrder
	4,  // 6: AfterSalesService.SubmitAfterSalesOrder:input_type -> SubmitAfterSalesOrderRequest
	3,  // 7: AfterSalesService.GetAllAfterSalesOrderOfSaleOrder:input_type -> OriginOrderIdRequest
	7,  // 8: AfterSalesService.QueryPagerAfterSalesOrderOfMember:input_type -> PagingBuyerOrdersRequest
	8,  // 9: AfterSalesService.QueryPagerAfterSalesOrderOfVendor:input_type -> PagingSellerOrdersRequest
	1,  // 10: AfterSalesService.GetAfterSaleOrder:input_type -> AfterSalesOrderNo
	2,  // 11: AfterSalesService.AgreeAfterSales:input_type -> AfterSalesProcessRequest
	2,  // 12: AfterSalesService.DeclineAfterSales:input_type -> AfterSalesProcessRequest
	2,  // 13: AfterSalesService.RequestIntercede:input_type -> AfterSalesProcessRequest
	1,  // 14: AfterSalesService.ConfirmAfterSales:input_type -> AfterSalesOrderNo
	2,  // 15: AfterSalesService.RejectAfterSales:input_type -> AfterSalesProcessRequest
	2,  // 16: AfterSalesService.ProcessAfterSalesOrder:input_type -> AfterSalesProcessRequest
	14, // 17: AfterSalesService.ReturnShipment:input_type -> ReturnShipmentRequest
	1,  // 18: AfterSalesService.ReceiveItem:input_type -> AfterSalesOrderNo
	5,  // 19: AfterSalesService.SubmitAfterSalesOrder:output_type -> SubmitAfterSalesOrderResponse
	6,  // 20: AfterSalesService.GetAllAfterSalesOrderOfSaleOrder:output_type -> AfterSalesOrderListResponse
	9,  // 21: AfterSalesService.QueryPagerAfterSalesOrderOfMember:output_type -> PagingBuyerAfterSalesOrderListResponse
	10, // 22: AfterSalesService.QueryPagerAfterSalesOrderOfVendor:output_type -> PagingSellerAfterSalesOrderListResponse
	11, // 23: AfterSalesService.GetAfterSaleOrder:output_type -> SAfterSalesOrder
	16, // 24: AfterSalesService.AgreeAfterSales:output_type -> Result
	16, // 25: AfterSalesService.DeclineAfterSales:output_type -> Result
	16, // 26: AfterSalesService.RequestIntercede:output_type -> Result
	16, // 27: AfterSalesService.ConfirmAfterSales:output_type -> Result
	16, // 28: AfterSalesService.RejectAfterSales:output_type -> Result
	16, // 29: AfterSalesService.ProcessAfterSalesOrder:output_type -> Result
	16, // 30: AfterSalesService.ReturnShipment:output_type -> Result
	16, // 31: AfterSalesService.ReceiveItem:output_type -> Result
	19, // [19:32] is the sub-list for method output_type
	6,  // [6:19] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_aftersales_service_proto_init() }
func file_aftersales_service_proto_init() {
	if File_aftersales_service_proto != nil {
		return
	}
	file_global_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_aftersales_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AfterSalesOrderNo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aftersales_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AfterSalesProcessRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aftersales_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OriginOrderIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aftersales_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubmitAfterSalesOrderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aftersales_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubmitAfterSalesOrderResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aftersales_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AfterSalesOrderListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aftersales_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PagingBuyerOrdersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aftersales_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PagingSellerOrdersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aftersales_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PagingBuyerAfterSalesOrderListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aftersales_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PagingSellerAfterSalesOrderListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aftersales_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SAfterSalesOrder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aftersales_service_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SPagingBuyerAfterSalesOrder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aftersales_service_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SPagingSellerAfterSalesOrder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aftersales_service_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReturnShipmentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_aftersales_service_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_aftersales_service_proto_goTypes,
		DependencyIndexes: file_aftersales_service_proto_depIdxs,
		EnumInfos:         file_aftersales_service_proto_enumTypes,
		MessageInfos:      file_aftersales_service_proto_msgTypes,
	}.Build()
	File_aftersales_service_proto = out.File
	file_aftersales_service_proto_rawDesc = nil
	file_aftersales_service_proto_goTypes = nil
	file_aftersales_service_proto_depIdxs = nil
}
