// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.12.4
// source: rbac_service.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 用户登录
type RbacLoginRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 用户名
	User string `protobuf:"bytes,1,opt,name=User,proto3" json:"User"`
	// md5密码
	Pwd string `protobuf:"bytes,2,opt,name=Pwd,proto3" json:"Pwd"`
	// 令牌的过期时间(单位：秒)
	Expires int32 `protobuf:"varint,3,opt,name=Expires,proto3" json:"Expires"`
}

func (x *RbacLoginRequest) Reset() {
	*x = RbacLoginRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rbac_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RbacLoginRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RbacLoginRequest) ProtoMessage() {}

func (x *RbacLoginRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rbac_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RbacLoginRequest.ProtoReflect.Descriptor instead.
func (*RbacLoginRequest) Descriptor() ([]byte, []int) {
	return file_rbac_service_proto_rawDescGZIP(), []int{0}
}

func (x *RbacLoginRequest) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *RbacLoginRequest) GetPwd() string {
	if x != nil {
		return x.Pwd
	}
	return ""
}

func (x *RbacLoginRequest) GetExpires() int32 {
	if x != nil {
		return x.Expires
	}
	return 0
}

// 用户登录响应
type RbacLoginResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 错误编码,0为成功
	ErrCode int64 `protobuf:"varint,1,opt,name=ErrCode,proto3" json:"ErrCode"`
	// 错误消息
	ErrMsg string `protobuf:"bytes,2,opt,name=ErrMsg,proto3" json:"ErrMsg"`
	// 用户编号
	UserId int64 `protobuf:"varint,3,opt,name=userId,proto3" json:"userId"`
	// 访问令牌
	AccessToken string `protobuf:"bytes,4,opt,name=AccessToken,proto3" json:"AccessToken"`
	// 角色标志
	Permissions []string `protobuf:"bytes,5,rep,name=Permissions,proto3" json:"Permissions"`
	// 角色编号
	Roles []int64 `protobuf:"varint,6,rep,packed,name=Roles,proto3" json:"Roles"`
}

func (x *RbacLoginResponse) Reset() {
	*x = RbacLoginResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rbac_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RbacLoginResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RbacLoginResponse) ProtoMessage() {}

func (x *RbacLoginResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rbac_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RbacLoginResponse.ProtoReflect.Descriptor instead.
func (*RbacLoginResponse) Descriptor() ([]byte, []int) {
	return file_rbac_service_proto_rawDescGZIP(), []int{1}
}

func (x *RbacLoginResponse) GetErrCode() int64 {
	if x != nil {
		return x.ErrCode
	}
	return 0
}

func (x *RbacLoginResponse) GetErrMsg() string {
	if x != nil {
		return x.ErrMsg
	}
	return ""
}

func (x *RbacLoginResponse) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *RbacLoginResponse) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *RbacLoginResponse) GetPermissions() []string {
	if x != nil {
		return x.Permissions
	}
	return nil
}

func (x *RbacLoginResponse) GetRoles() []int64 {
	if x != nil {
		return x.Roles
	}
	return nil
}

// 用户资源响应,如果无用户则默认为超级管理员
type RbacUserResourceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 角色编号
	Roles []int64 `protobuf:"varint,1,rep,packed,name=Roles,proto3" json:"Roles"`
	// 权限标志
	Permissions []string `protobuf:"bytes,2,rep,name=Permissions,proto3" json:"Permissions"`
	// 菜单
	Resources []*SUserRes `protobuf:"bytes,3,rep,name=Resources,proto3" json:"Resources"`
}

func (x *RbacUserResourceResponse) Reset() {
	*x = RbacUserResourceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rbac_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RbacUserResourceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RbacUserResourceResponse) ProtoMessage() {}

func (x *RbacUserResourceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rbac_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RbacUserResourceResponse.ProtoReflect.Descriptor instead.
func (*RbacUserResourceResponse) Descriptor() ([]byte, []int) {
	return file_rbac_service_proto_rawDescGZIP(), []int{2}
}

func (x *RbacUserResourceResponse) GetRoles() []int64 {
	if x != nil {
		return x.Roles
	}
	return nil
}

func (x *RbacUserResourceResponse) GetPermissions() []string {
	if x != nil {
		return x.Permissions
	}
	return nil
}

func (x *RbacUserResourceResponse) GetResources() []*SUserRes {
	if x != nil {
		return x.Resources
	}
	return nil
}

type SUserRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// * ID
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	// * 资源键
	Key string `protobuf:"bytes,2,opt,name=Key,proto3" json:"Key"`
	// * 资源名称
	Name string `protobuf:"bytes,3,opt,name=Name,proto3" json:"Name"`
	// * 资源类型,0: 目录 1: 资源 2: 菜单 3: 按钮
	ResType int32 `protobuf:"varint,4,opt,name=ResType,proto3" json:"ResType"`
	// * 深度/层级
	Depth int32 `protobuf:"varint,5,opt,name=Depth,proto3" json:"Depth"`
	// * 资源路径
	Path string `protobuf:"bytes,6,opt,name=Path,proto3" json:"Path"`
	// * 图标
	Icon string `protobuf:"bytes,7,opt,name=Icon,proto3" json:"Icon"`
	// * 权限,多个值用|分隔
	Permission string `protobuf:"bytes,8,opt,name=Permission,proto3" json:"Permission"`
	// * 排序
	SortNum int32 `protobuf:"varint,9,opt,name=SortNum,proto3" json:"SortNum"`
	// * 是否隐藏
	IsHidden bool `protobuf:"varint,10,opt,name=IsHidden,proto3" json:"IsHidden"`
	// * 组件名称
	ComponentName string `protobuf:"bytes,11,opt,name=ComponentName,proto3" json:"ComponentName"`
	// * 子资源
	Children []*SUserRes `protobuf:"bytes,12,rep,name=Children,proto3" json:"Children"`
}

func (x *SUserRes) Reset() {
	*x = SUserRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rbac_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SUserRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SUserRes) ProtoMessage() {}

func (x *SUserRes) ProtoReflect() protoreflect.Message {
	mi := &file_rbac_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SUserRes.ProtoReflect.Descriptor instead.
func (*SUserRes) Descriptor() ([]byte, []int) {
	return file_rbac_service_proto_rawDescGZIP(), []int{3}
}

func (x *SUserRes) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SUserRes) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *SUserRes) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SUserRes) GetResType() int32 {
	if x != nil {
		return x.ResType
	}
	return 0
}

func (x *SUserRes) GetDepth() int32 {
	if x != nil {
		return x.Depth
	}
	return 0
}

func (x *SUserRes) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *SUserRes) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *SUserRes) GetPermission() string {
	if x != nil {
		return x.Permission
	}
	return ""
}

func (x *SUserRes) GetSortNum() int32 {
	if x != nil {
		return x.SortNum
	}
	return 0
}

func (x *SUserRes) GetIsHidden() bool {
	if x != nil {
		return x.IsHidden
	}
	return false
}

func (x *SUserRes) GetComponentName() string {
	if x != nil {
		return x.ComponentName
	}
	return ""
}

func (x *SUserRes) GetChildren() []*SUserRes {
	if x != nil {
		return x.Children
	}
	return nil
}

type RoleId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value int64 `protobuf:"varint,1,opt,name=Value,proto3" json:"Value"`
}

func (x *RoleId) Reset() {
	*x = RoleId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rbac_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleId) ProtoMessage() {}

func (x *RoleId) ProtoReflect() protoreflect.Message {
	mi := &file_rbac_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleId.ProtoReflect.Descriptor instead.
func (*RoleId) Descriptor() ([]byte, []int) {
	return file_rbac_service_proto_rawDescGZIP(), []int{4}
}

func (x *RoleId) GetValue() int64 {
	if x != nil {
		return x.Value
	}
	return 0
}

type UserId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value int64 `protobuf:"varint,1,opt,name=Value,proto3" json:"Value"`
}

func (x *UserId) Reset() {
	*x = UserId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rbac_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserId) ProtoMessage() {}

func (x *UserId) ProtoReflect() protoreflect.Message {
	mi := &file_rbac_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserId.ProtoReflect.Descriptor instead.
func (*UserId) Descriptor() ([]byte, []int) {
	return file_rbac_service_proto_rawDescGZIP(), []int{5}
}

func (x *UserId) GetValue() int64 {
	if x != nil {
		return x.Value
	}
	return 0
}

type RbacTree struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int64       `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	Label    string      `protobuf:"bytes,2,opt,name=Label,proto3" json:"Label"`
	Children []*RbacTree `protobuf:"bytes,3,rep,name=Children,proto3" json:"Children"`
}

func (x *RbacTree) Reset() {
	*x = RbacTree{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rbac_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RbacTree) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RbacTree) ProtoMessage() {}

func (x *RbacTree) ProtoReflect() protoreflect.Message {
	mi := &file_rbac_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RbacTree.ProtoReflect.Descriptor instead.
func (*RbacTree) Descriptor() ([]byte, []int) {
	return file_rbac_service_proto_rawDescGZIP(), []int{6}
}

func (x *RbacTree) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RbacTree) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *RbacTree) GetChildren() []*RbacTree {
	if x != nil {
		return x.Children
	}
	return nil
}

type SavePermDeptRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// * ID
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	// * 名称
	Name string `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name"`
	// * 上级部门
	Pid int64 `protobuf:"varint,3,opt,name=Pid,proto3" json:"Pid"`
	// * 部门编码
	Code string `protobuf:"bytes,4,opt,name=Code,proto3" json:"Code"`
	// * 状态
	Enabled int32 `protobuf:"varint,5,opt,name=Enabled,proto3" json:"Enabled"`
	// * 创建日期
	CreateTime int64 `protobuf:"varint,6,opt,name=CreateTime,proto3" json:"CreateTime"`
}

func (x *SavePermDeptRequest) Reset() {
	*x = SavePermDeptRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rbac_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SavePermDeptRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SavePermDeptRequest) ProtoMessage() {}

func (x *SavePermDeptRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rbac_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SavePermDeptRequest.ProtoReflect.Descriptor instead.
func (*SavePermDeptRequest) Descriptor() ([]byte, []int) {
	return file_rbac_service_proto_rawDescGZIP(), []int{7}
}

func (x *SavePermDeptRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SavePermDeptRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SavePermDeptRequest) GetPid() int64 {
	if x != nil {
		return x.Pid
	}
	return 0
}

func (x *SavePermDeptRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *SavePermDeptRequest) GetEnabled() int32 {
	if x != nil {
		return x.Enabled
	}
	return 0
}

func (x *SavePermDeptRequest) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

type SavePermDeptResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrCode int64  `protobuf:"varint,1,opt,name=ErrCode,proto3" json:"ErrCode"`
	ErrMsg  string `protobuf:"bytes,2,opt,name=ErrMsg,proto3" json:"ErrMsg"`
	Id      int64  `protobuf:"varint,3,opt,name=Id,proto3" json:"Id"`
}

func (x *SavePermDeptResponse) Reset() {
	*x = SavePermDeptResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rbac_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SavePermDeptResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SavePermDeptResponse) ProtoMessage() {}

func (x *SavePermDeptResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rbac_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SavePermDeptResponse.ProtoReflect.Descriptor instead.
func (*SavePermDeptResponse) Descriptor() ([]byte, []int) {
	return file_rbac_service_proto_rawDescGZIP(), []int{8}
}

func (x *SavePermDeptResponse) GetErrCode() int64 {
	if x != nil {
		return x.ErrCode
	}
	return 0
}

func (x *SavePermDeptResponse) GetErrMsg() string {
	if x != nil {
		return x.ErrMsg
	}
	return ""
}

func (x *SavePermDeptResponse) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type PermDeptId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value int64 `protobuf:"varint,1,opt,name=Value,proto3" json:"Value"`
}

func (x *PermDeptId) Reset() {
	*x = PermDeptId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rbac_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PermDeptId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PermDeptId) ProtoMessage() {}

func (x *PermDeptId) ProtoReflect() protoreflect.Message {
	mi := &file_rbac_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PermDeptId.ProtoReflect.Descriptor instead.
func (*PermDeptId) Descriptor() ([]byte, []int) {
	return file_rbac_service_proto_rawDescGZIP(), []int{9}
}

func (x *PermDeptId) GetValue() int64 {
	if x != nil {
		return x.Value
	}
	return 0
}

type SPermDept struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// * ID
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	// * 名称
	Name string `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name"`
	// * 上级部门
	Pid  int64  `protobuf:"varint,3,opt,name=Pid,proto3" json:"Pid"`
	Code string `protobuf:"bytes,4,opt,name=Code,proto3" json:"Code"`
	// * 状态
	Enabled int32 `protobuf:"varint,5,opt,name=Enabled,proto3" json:"Enabled"`
	// * 创建日期
	CreateTime int64 `protobuf:"varint,6,opt,name=CreateTime,proto3" json:"CreateTime"`
}

func (x *SPermDept) Reset() {
	*x = SPermDept{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rbac_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SPermDept) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SPermDept) ProtoMessage() {}

func (x *SPermDept) ProtoReflect() protoreflect.Message {
	mi := &file_rbac_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SPermDept.ProtoReflect.Descriptor instead.
func (*SPermDept) Descriptor() ([]byte, []int) {
	return file_rbac_service_proto_rawDescGZIP(), []int{10}
}

func (x *SPermDept) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SPermDept) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SPermDept) GetPid() int64 {
	if x != nil {
		return x.Pid
	}
	return 0
}

func (x *SPermDept) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *SPermDept) GetEnabled() int32 {
	if x != nil {
		return x.Enabled
	}
	return 0
}

func (x *SPermDept) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

type QueryPermDeptRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *QueryPermDeptRequest) Reset() {
	*x = QueryPermDeptRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rbac_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryPermDeptRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryPermDeptRequest) ProtoMessage() {}

func (x *QueryPermDeptRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rbac_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryPermDeptRequest.ProtoReflect.Descriptor instead.
func (*QueryPermDeptRequest) Descriptor() ([]byte, []int) {
	return file_rbac_service_proto_rawDescGZIP(), []int{11}
}

type QueryPermDeptResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*SPermDept `protobuf:"bytes,1,rep,name=List,proto3" json:"List"`
}

func (x *QueryPermDeptResponse) Reset() {
	*x = QueryPermDeptResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rbac_service_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryPermDeptResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryPermDeptResponse) ProtoMessage() {}

func (x *QueryPermDeptResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rbac_service_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryPermDeptResponse.ProtoReflect.Descriptor instead.
func (*QueryPermDeptResponse) Descriptor() ([]byte, []int) {
	return file_rbac_service_proto_rawDescGZIP(), []int{12}
}

func (x *QueryPermDeptResponse) GetList() []*SPermDept {
	if x != nil {
		return x.List
	}
	return nil
}

type SavePermJobRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// * ID
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	// * 岗位名称
	Name string `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name"`
	// * 岗位状态
	Enabled int32 `protobuf:"varint,3,opt,name=Enabled,proto3" json:"Enabled"`
	// * 岗位排序
	Sort int32 `protobuf:"varint,4,opt,name=Sort,proto3" json:"Sort"`
	// * 部门ID
	DeptId int64 `protobuf:"varint,5,opt,name=DeptId,proto3" json:"DeptId"`
	// * 创建日期
	CreateTime int64 `protobuf:"varint,6,opt,name=CreateTime,proto3" json:"CreateTime"`
}

func (x *SavePermJobRequest) Reset() {
	*x = SavePermJobRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rbac_service_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SavePermJobRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SavePermJobRequest) ProtoMessage() {}

func (x *SavePermJobRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rbac_service_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SavePermJobRequest.ProtoReflect.Descriptor instead.
func (*SavePermJobRequest) Descriptor() ([]byte, []int) {
	return file_rbac_service_proto_rawDescGZIP(), []int{13}
}

func (x *SavePermJobRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SavePermJobRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SavePermJobRequest) GetEnabled() int32 {
	if x != nil {
		return x.Enabled
	}
	return 0
}

func (x *SavePermJobRequest) GetSort() int32 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *SavePermJobRequest) GetDeptId() int64 {
	if x != nil {
		return x.DeptId
	}
	return 0
}

func (x *SavePermJobRequest) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

type SavePermJobResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrCode int64  `protobuf:"varint,1,opt,name=ErrCode,proto3" json:"ErrCode"`
	ErrMsg  string `protobuf:"bytes,2,opt,name=ErrMsg,proto3" json:"ErrMsg"`
	Id      int64  `protobuf:"varint,3,opt,name=Id,proto3" json:"Id"`
}

func (x *SavePermJobResponse) Reset() {
	*x = SavePermJobResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rbac_service_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SavePermJobResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SavePermJobResponse) ProtoMessage() {}

func (x *SavePermJobResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rbac_service_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SavePermJobResponse.ProtoReflect.Descriptor instead.
func (*SavePermJobResponse) Descriptor() ([]byte, []int) {
	return file_rbac_service_proto_rawDescGZIP(), []int{14}
}

func (x *SavePermJobResponse) GetErrCode() int64 {
	if x != nil {
		return x.ErrCode
	}
	return 0
}

func (x *SavePermJobResponse) GetErrMsg() string {
	if x != nil {
		return x.ErrMsg
	}
	return ""
}

func (x *SavePermJobResponse) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type PermJobId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value int64 `protobuf:"varint,1,opt,name=Value,proto3" json:"Value"`
}

func (x *PermJobId) Reset() {
	*x = PermJobId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rbac_service_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PermJobId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PermJobId) ProtoMessage() {}

func (x *PermJobId) ProtoReflect() protoreflect.Message {
	mi := &file_rbac_service_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PermJobId.ProtoReflect.Descriptor instead.
func (*PermJobId) Descriptor() ([]byte, []int) {
	return file_rbac_service_proto_rawDescGZIP(), []int{15}
}

func (x *PermJobId) GetValue() int64 {
	if x != nil {
		return x.Value
	}
	return 0
}

type SPermJob struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// * ID
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	// * 岗位名称
	Name string `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name"`
	// * 岗位状态
	Enabled int32 `protobuf:"varint,3,opt,name=Enabled,proto3" json:"Enabled"`
	// * 岗位排序
	Sort int32 `protobuf:"varint,4,opt,name=Sort,proto3" json:"Sort"`
	// * 部门ID
	DeptId int64 `protobuf:"varint,5,opt,name=DeptId,proto3" json:"DeptId"`
	// * 创建日期
	CreateTime int64 `protobuf:"varint,6,opt,name=CreateTime,proto3" json:"CreateTime"`
}

func (x *SPermJob) Reset() {
	*x = SPermJob{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rbac_service_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SPermJob) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SPermJob) ProtoMessage() {}

func (x *SPermJob) ProtoReflect() protoreflect.Message {
	mi := &file_rbac_service_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SPermJob.ProtoReflect.Descriptor instead.
func (*SPermJob) Descriptor() ([]byte, []int) {
	return file_rbac_service_proto_rawDescGZIP(), []int{16}
}

func (x *SPermJob) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SPermJob) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SPermJob) GetEnabled() int32 {
	if x != nil {
		return x.Enabled
	}
	return 0
}

func (x *SPermJob) GetSort() int32 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *SPermJob) GetDeptId() int64 {
	if x != nil {
		return x.DeptId
	}
	return 0
}

func (x *SPermJob) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

type QueryPermJobRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 部门编号,默认为0. 该部门下的岗位也会查询出来
	DepartId int64 `protobuf:"varint,1,opt,name=DepartId,proto3" json:"DepartId"`
}

func (x *QueryPermJobRequest) Reset() {
	*x = QueryPermJobRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rbac_service_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryPermJobRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryPermJobRequest) ProtoMessage() {}

func (x *QueryPermJobRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rbac_service_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryPermJobRequest.ProtoReflect.Descriptor instead.
func (*QueryPermJobRequest) Descriptor() ([]byte, []int) {
	return file_rbac_service_proto_rawDescGZIP(), []int{17}
}

func (x *QueryPermJobRequest) GetDepartId() int64 {
	if x != nil {
		return x.DepartId
	}
	return 0
}

type QueryPermJobResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*SPermJob `protobuf:"bytes,1,rep,name=List,proto3" json:"List"`
}

func (x *QueryPermJobResponse) Reset() {
	*x = QueryPermJobResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rbac_service_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryPermJobResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryPermJobResponse) ProtoMessage() {}

func (x *QueryPermJobResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rbac_service_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryPermJobResponse.ProtoReflect.Descriptor instead.
func (*QueryPermJobResponse) Descriptor() ([]byte, []int) {
	return file_rbac_service_proto_rawDescGZIP(), []int{18}
}

func (x *QueryPermJobResponse) GetList() []*SPermJob {
	if x != nil {
		return x.List
	}
	return nil
}

type PagingPermJob struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// * ID
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	// * 岗位名称
	Name string `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name"`
	// * 岗位状态
	Enabled int32 `protobuf:"varint,3,opt,name=Enabled,proto3" json:"Enabled"`
	// * 岗位排序
	Sort int32 `protobuf:"varint,4,opt,name=Sort,proto3" json:"Sort"`
	// * 部门ID
	DeptId int64 `protobuf:"varint,5,opt,name=DeptId,proto3" json:"DeptId"`
	// * 创建日期
	CreateTime int64 `protobuf:"varint,6,opt,name=CreateTime,proto3" json:"CreateTime"`
}

func (x *PagingPermJob) Reset() {
	*x = PagingPermJob{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rbac_service_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PagingPermJob) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PagingPermJob) ProtoMessage() {}

func (x *PagingPermJob) ProtoReflect() protoreflect.Message {
	mi := &file_rbac_service_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PagingPermJob.ProtoReflect.Descriptor instead.
func (*PagingPermJob) Descriptor() ([]byte, []int) {
	return file_rbac_service_proto_rawDescGZIP(), []int{19}
}

func (x *PagingPermJob) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PagingPermJob) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PagingPermJob) GetEnabled() int32 {
	if x != nil {
		return x.Enabled
	}
	return 0
}

func (x *PagingPermJob) GetSort() int32 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *PagingPermJob) GetDeptId() int64 {
	if x != nil {
		return x.DeptId
	}
	return 0
}

func (x *PagingPermJob) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

type PermJobPagingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 分页参数
	Params *SPagingParams `protobuf:"bytes,1,opt,name=Params,proto3" json:"Params"`
}

func (x *PermJobPagingRequest) Reset() {
	*x = PermJobPagingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rbac_service_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PermJobPagingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PermJobPagingRequest) ProtoMessage() {}

func (x *PermJobPagingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rbac_service_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PermJobPagingRequest.ProtoReflect.Descriptor instead.
func (*PermJobPagingRequest) Descriptor() ([]byte, []int) {
	return file_rbac_service_proto_rawDescGZIP(), []int{20}
}

func (x *PermJobPagingRequest) GetParams() *SPagingParams {
	if x != nil {
		return x.Params
	}
	return nil
}

type PermJobPagingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64            `protobuf:"varint,1,opt,name=total,proto3" json:"total"`
	Value []*PagingPermJob `protobuf:"bytes,2,rep,name=Value,proto3" json:"Value"`
}

func (x *PermJobPagingResponse) Reset() {
	*x = PermJobPagingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rbac_service_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PermJobPagingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PermJobPagingResponse) ProtoMessage() {}

func (x *PermJobPagingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rbac_service_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PermJobPagingResponse.ProtoReflect.Descriptor instead.
func (*PermJobPagingResponse) Descriptor() ([]byte, []int) {
	return file_rbac_service_proto_rawDescGZIP(), []int{21}
}

func (x *PermJobPagingResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *PermJobPagingResponse) GetValue() []*PagingPermJob {
	if x != nil {
		return x.Value
	}
	return nil
}

type SavePermUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// * ID
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	// * 用户名
	Usr string `protobuf:"bytes,2,opt,name=Usr,proto3" json:"Usr"`
	// * 密码
	Pwd string `protobuf:"bytes,3,opt,name=Pwd,proto3" json:"Pwd"`
	// * 标志
	Flag int32 `protobuf:"varint,4,opt,name=Flag,proto3" json:"Flag"`
	// * 头像
	Avatar string `protobuf:"bytes,5,opt,name=Avatar,proto3" json:"Avatar"`
	// * NickName
	NickName string `protobuf:"bytes,6,opt,name=NickName,proto3" json:"NickName"`
	// * Gender
	Gender string `protobuf:"bytes,7,opt,name=Gender,proto3" json:"Gender"`
	// * 邮箱
	Email string `protobuf:"bytes,8,opt,name=Email,proto3" json:"Email"`
	// * 手机号码
	Phone string `protobuf:"bytes,9,opt,name=Phone,proto3" json:"Phone"`
	// * 部门编号
	DeptId int64 `protobuf:"varint,10,opt,name=DeptId,proto3" json:"DeptId"`
	// * 岗位编号
	JobId int64 `protobuf:"varint,11,opt,name=JobId,proto3" json:"JobId"`
	// * 状态：1启用、0禁用
	Enabled int32 `protobuf:"varint,12,opt,name=Enabled,proto3" json:"Enabled"`
	// * 最后登录的日期
	LastLogin int64 `protobuf:"varint,13,opt,name=LastLogin,proto3" json:"LastLogin"`
	// * 创建日期
	CreateTime int64 `protobuf:"varint,14,opt,name=CreateTime,proto3" json:"CreateTime"`
	// 用户角色
	Roles []int64 `protobuf:"varint,15,rep,packed,name=Roles,proto3" json:"Roles"`
}

func (x *SavePermUserRequest) Reset() {
	*x = SavePermUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rbac_service_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SavePermUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SavePermUserRequest) ProtoMessage() {}

func (x *SavePermUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rbac_service_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SavePermUserRequest.ProtoReflect.Descriptor instead.
func (*SavePermUserRequest) Descriptor() ([]byte, []int) {
	return file_rbac_service_proto_rawDescGZIP(), []int{22}
}

func (x *SavePermUserRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SavePermUserRequest) GetUsr() string {
	if x != nil {
		return x.Usr
	}
	return ""
}

func (x *SavePermUserRequest) GetPwd() string {
	if x != nil {
		return x.Pwd
	}
	return ""
}

func (x *SavePermUserRequest) GetFlag() int32 {
	if x != nil {
		return x.Flag
	}
	return 0
}

func (x *SavePermUserRequest) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *SavePermUserRequest) GetNickName() string {
	if x != nil {
		return x.NickName
	}
	return ""
}

func (x *SavePermUserRequest) GetGender() string {
	if x != nil {
		return x.Gender
	}
	return ""
}

func (x *SavePermUserRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *SavePermUserRequest) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *SavePermUserRequest) GetDeptId() int64 {
	if x != nil {
		return x.DeptId
	}
	return 0
}

func (x *SavePermUserRequest) GetJobId() int64 {
	if x != nil {
		return x.JobId
	}
	return 0
}

func (x *SavePermUserRequest) GetEnabled() int32 {
	if x != nil {
		return x.Enabled
	}
	return 0
}

func (x *SavePermUserRequest) GetLastLogin() int64 {
	if x != nil {
		return x.LastLogin
	}
	return 0
}

func (x *SavePermUserRequest) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *SavePermUserRequest) GetRoles() []int64 {
	if x != nil {
		return x.Roles
	}
	return nil
}

type SavePermUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrCode int64  `protobuf:"varint,1,opt,name=ErrCode,proto3" json:"ErrCode"`
	ErrMsg  string `protobuf:"bytes,2,opt,name=ErrMsg,proto3" json:"ErrMsg"`
	Id      int64  `protobuf:"varint,3,opt,name=Id,proto3" json:"Id"`
}

func (x *SavePermUserResponse) Reset() {
	*x = SavePermUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rbac_service_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SavePermUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SavePermUserResponse) ProtoMessage() {}

func (x *SavePermUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rbac_service_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SavePermUserResponse.ProtoReflect.Descriptor instead.
func (*SavePermUserResponse) Descriptor() ([]byte, []int) {
	return file_rbac_service_proto_rawDescGZIP(), []int{23}
}

func (x *SavePermUserResponse) GetErrCode() int64 {
	if x != nil {
		return x.ErrCode
	}
	return 0
}

func (x *SavePermUserResponse) GetErrMsg() string {
	if x != nil {
		return x.ErrMsg
	}
	return ""
}

func (x *SavePermUserResponse) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type PermUserId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value int64 `protobuf:"varint,1,opt,name=Value,proto3" json:"Value"`
}

func (x *PermUserId) Reset() {
	*x = PermUserId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rbac_service_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PermUserId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PermUserId) ProtoMessage() {}

func (x *PermUserId) ProtoReflect() protoreflect.Message {
	mi := &file_rbac_service_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PermUserId.ProtoReflect.Descriptor instead.
func (*PermUserId) Descriptor() ([]byte, []int) {
	return file_rbac_service_proto_rawDescGZIP(), []int{24}
}

func (x *PermUserId) GetValue() int64 {
	if x != nil {
		return x.Value
	}
	return 0
}

type SPermUser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// * ID
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	// * 用户名
	Usr string `protobuf:"bytes,2,opt,name=Usr,proto3" json:"Usr"`
	// * 密码
	Pwd string `protobuf:"bytes,3,opt,name=Pwd,proto3" json:"Pwd"`
	// * 标志
	Flag int32 `protobuf:"varint,4,opt,name=Flag,proto3" json:"Flag"`
	// * 头像
	Avatar string `protobuf:"bytes,5,opt,name=Avatar,proto3" json:"Avatar"`
	// * NickName
	NickName string `protobuf:"bytes,6,opt,name=NickName,proto3" json:"NickName"`
	// * Gender
	Gender string `protobuf:"bytes,7,opt,name=Gender,proto3" json:"Gender"`
	// * 邮箱
	Email string `protobuf:"bytes,8,opt,name=Email,proto3" json:"Email"`
	// * 手机号码
	Phone string `protobuf:"bytes,9,opt,name=Phone,proto3" json:"Phone"`
	// * 部门编号
	DeptId int64 `protobuf:"varint,10,opt,name=DeptId,proto3" json:"DeptId"`
	// * 岗位编号
	JobId int64 `protobuf:"varint,11,opt,name=JobId,proto3" json:"JobId"`
	// * 状态：1启用、0禁用
	Enabled int32 `protobuf:"varint,12,opt,name=Enabled,proto3" json:"Enabled"`
	// * 最后登录的日期
	LastLogin int64 `protobuf:"varint,13,opt,name=LastLogin,proto3" json:"LastLogin"`
	// * 创建日期
	CreateTime int64 `protobuf:"varint,14,opt,name=CreateTime,proto3" json:"CreateTime"`
	// 用户角色
	Roles []int64 `protobuf:"varint,15,rep,packed,name=Roles,proto3" json:"Roles"`
	// 权限
	Permissions []string `protobuf:"bytes,16,rep,name=Permissions,proto3" json:"Permissions"`
}

func (x *SPermUser) Reset() {
	*x = SPermUser{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rbac_service_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SPermUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SPermUser) ProtoMessage() {}

func (x *SPermUser) ProtoReflect() protoreflect.Message {
	mi := &file_rbac_service_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SPermUser.ProtoReflect.Descriptor instead.
func (*SPermUser) Descriptor() ([]byte, []int) {
	return file_rbac_service_proto_rawDescGZIP(), []int{25}
}

func (x *SPermUser) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SPermUser) GetUsr() string {
	if x != nil {
		return x.Usr
	}
	return ""
}

func (x *SPermUser) GetPwd() string {
	if x != nil {
		return x.Pwd
	}
	return ""
}

func (x *SPermUser) GetFlag() int32 {
	if x != nil {
		return x.Flag
	}
	return 0
}

func (x *SPermUser) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *SPermUser) GetNickName() string {
	if x != nil {
		return x.NickName
	}
	return ""
}

func (x *SPermUser) GetGender() string {
	if x != nil {
		return x.Gender
	}
	return ""
}

func (x *SPermUser) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *SPermUser) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *SPermUser) GetDeptId() int64 {
	if x != nil {
		return x.DeptId
	}
	return 0
}

func (x *SPermUser) GetJobId() int64 {
	if x != nil {
		return x.JobId
	}
	return 0
}

func (x *SPermUser) GetEnabled() int32 {
	if x != nil {
		return x.Enabled
	}
	return 0
}

func (x *SPermUser) GetLastLogin() int64 {
	if x != nil {
		return x.LastLogin
	}
	return 0
}

func (x *SPermUser) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *SPermUser) GetRoles() []int64 {
	if x != nil {
		return x.Roles
	}
	return nil
}

func (x *SPermUser) GetPermissions() []string {
	if x != nil {
		return x.Permissions
	}
	return nil
}

type QueryPermUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *QueryPermUserRequest) Reset() {
	*x = QueryPermUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rbac_service_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryPermUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryPermUserRequest) ProtoMessage() {}

func (x *QueryPermUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rbac_service_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryPermUserRequest.ProtoReflect.Descriptor instead.
func (*QueryPermUserRequest) Descriptor() ([]byte, []int) {
	return file_rbac_service_proto_rawDescGZIP(), []int{26}
}

type QueryPermUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*SPermUser `protobuf:"bytes,1,rep,name=List,proto3" json:"List"`
}

func (x *QueryPermUserResponse) Reset() {
	*x = QueryPermUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rbac_service_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryPermUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryPermUserResponse) ProtoMessage() {}

func (x *QueryPermUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rbac_service_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryPermUserResponse.ProtoReflect.Descriptor instead.
func (*QueryPermUserResponse) Descriptor() ([]byte, []int) {
	return file_rbac_service_proto_rawDescGZIP(), []int{27}
}

func (x *QueryPermUserResponse) GetList() []*SPermUser {
	if x != nil {
		return x.List
	}
	return nil
}

type PagingPermUser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// * ID
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	// * 用户名
	Usr string `protobuf:"bytes,2,opt,name=Usr,proto3" json:"Usr"`
	// * 密码
	Pwd string `protobuf:"bytes,3,opt,name=Pwd,proto3" json:"Pwd"`
	// * 标志
	Flag int32 `protobuf:"varint,4,opt,name=Flag,proto3" json:"Flag"`
	// * 头像
	Avatar string `protobuf:"bytes,5,opt,name=Avatar,proto3" json:"Avatar"`
	// * NickName
	NickName string `protobuf:"bytes,6,opt,name=NickName,proto3" json:"NickName"`
	// * Gender
	Gender string `protobuf:"bytes,7,opt,name=Gender,proto3" json:"Gender"`
	// * 邮箱
	Email string `protobuf:"bytes,8,opt,name=Email,proto3" json:"Email"`
	// * 手机号码
	Phone string `protobuf:"bytes,9,opt,name=Phone,proto3" json:"Phone"`
	// * 部门编号
	DeptId int64 `protobuf:"varint,10,opt,name=DeptId,proto3" json:"DeptId"`
	// * 岗位编号
	JobId int64 `protobuf:"varint,11,opt,name=JobId,proto3" json:"JobId"`
	// * 状态：1启用、0禁用
	Enabled int32 `protobuf:"varint,12,opt,name=Enabled,proto3" json:"Enabled"`
	// * 最后登录的日期
	LastLogin int64 `protobuf:"varint,13,opt,name=LastLogin,proto3" json:"LastLogin"`
	// * 创建日期
	CreateTime int64 `protobuf:"varint,14,opt,name=CreateTime,proto3" json:"CreateTime"`
}

func (x *PagingPermUser) Reset() {
	*x = PagingPermUser{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rbac_service_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PagingPermUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PagingPermUser) ProtoMessage() {}

func (x *PagingPermUser) ProtoReflect() protoreflect.Message {
	mi := &file_rbac_service_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PagingPermUser.ProtoReflect.Descriptor instead.
func (*PagingPermUser) Descriptor() ([]byte, []int) {
	return file_rbac_service_proto_rawDescGZIP(), []int{28}
}

func (x *PagingPermUser) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PagingPermUser) GetUsr() string {
	if x != nil {
		return x.Usr
	}
	return ""
}

func (x *PagingPermUser) GetPwd() string {
	if x != nil {
		return x.Pwd
	}
	return ""
}

func (x *PagingPermUser) GetFlag() int32 {
	if x != nil {
		return x.Flag
	}
	return 0
}

func (x *PagingPermUser) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *PagingPermUser) GetNickName() string {
	if x != nil {
		return x.NickName
	}
	return ""
}

func (x *PagingPermUser) GetGender() string {
	if x != nil {
		return x.Gender
	}
	return ""
}

func (x *PagingPermUser) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *PagingPermUser) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *PagingPermUser) GetDeptId() int64 {
	if x != nil {
		return x.DeptId
	}
	return 0
}

func (x *PagingPermUser) GetJobId() int64 {
	if x != nil {
		return x.JobId
	}
	return 0
}

func (x *PagingPermUser) GetEnabled() int32 {
	if x != nil {
		return x.Enabled
	}
	return 0
}

func (x *PagingPermUser) GetLastLogin() int64 {
	if x != nil {
		return x.LastLogin
	}
	return 0
}

func (x *PagingPermUser) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

type PermUserPagingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 部门编号,默认为0. 该部门下的用户也会查询出来
	DepartId int64 `protobuf:"varint,1,opt,name=DepartId,proto3" json:"DepartId"`
	// 分页参数
	Params *SPagingParams `protobuf:"bytes,2,opt,name=Params,proto3" json:"Params"`
}

func (x *PermUserPagingRequest) Reset() {
	*x = PermUserPagingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rbac_service_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PermUserPagingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PermUserPagingRequest) ProtoMessage() {}

func (x *PermUserPagingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rbac_service_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PermUserPagingRequest.ProtoReflect.Descriptor instead.
func (*PermUserPagingRequest) Descriptor() ([]byte, []int) {
	return file_rbac_service_proto_rawDescGZIP(), []int{29}
}

func (x *PermUserPagingRequest) GetDepartId() int64 {
	if x != nil {
		return x.DepartId
	}
	return 0
}

func (x *PermUserPagingRequest) GetParams() *SPagingParams {
	if x != nil {
		return x.Params
	}
	return nil
}

type PermUserPagingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64             `protobuf:"varint,1,opt,name=Total,proto3" json:"Total"`
	Value []*PagingPermUser `protobuf:"bytes,2,rep,name=Value,proto3" json:"Value"`
}

func (x *PermUserPagingResponse) Reset() {
	*x = PermUserPagingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rbac_service_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PermUserPagingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PermUserPagingResponse) ProtoMessage() {}

func (x *PermUserPagingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rbac_service_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PermUserPagingResponse.ProtoReflect.Descriptor instead.
func (*PermUserPagingResponse) Descriptor() ([]byte, []int) {
	return file_rbac_service_proto_rawDescGZIP(), []int{30}
}

func (x *PermUserPagingResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *PermUserPagingResponse) GetValue() []*PagingPermUser {
	if x != nil {
		return x.Value
	}
	return nil
}

type SavePermRoleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// * ID
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	// * 名称
	Name string `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name"`
	// * 角色级别
	Level int32 `protobuf:"varint,3,opt,name=Level,proto3" json:"Level"`
	// * 数据权限
	DataScope string `protobuf:"bytes,4,opt,name=DataScope,proto3" json:"DataScope"`
	// * 功能权限
	Permission string `protobuf:"bytes,5,opt,name=Permission,proto3" json:"Permission"`
	// * 备注
	Remark string `protobuf:"bytes,6,opt,name=Remark,proto3" json:"Remark"`
	// * 创建日期
	CreateTime int64 `protobuf:"varint,7,opt,name=CreateTime,proto3" json:"CreateTime"`
}

func (x *SavePermRoleRequest) Reset() {
	*x = SavePermRoleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rbac_service_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SavePermRoleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SavePermRoleRequest) ProtoMessage() {}

func (x *SavePermRoleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rbac_service_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SavePermRoleRequest.ProtoReflect.Descriptor instead.
func (*SavePermRoleRequest) Descriptor() ([]byte, []int) {
	return file_rbac_service_proto_rawDescGZIP(), []int{31}
}

func (x *SavePermRoleRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SavePermRoleRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SavePermRoleRequest) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *SavePermRoleRequest) GetDataScope() string {
	if x != nil {
		return x.DataScope
	}
	return ""
}

func (x *SavePermRoleRequest) GetPermission() string {
	if x != nil {
		return x.Permission
	}
	return ""
}

func (x *SavePermRoleRequest) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *SavePermRoleRequest) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

// 更新角色资源请求
type UpdateRoleResRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoleId    int64   `protobuf:"varint,1,opt,name=RoleId,proto3" json:"RoleId"`
	Resources []int64 `protobuf:"varint,2,rep,packed,name=Resources,proto3" json:"Resources"`
}

func (x *UpdateRoleResRequest) Reset() {
	*x = UpdateRoleResRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rbac_service_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRoleResRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRoleResRequest) ProtoMessage() {}

func (x *UpdateRoleResRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rbac_service_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRoleResRequest.ProtoReflect.Descriptor instead.
func (*UpdateRoleResRequest) Descriptor() ([]byte, []int) {
	return file_rbac_service_proto_rawDescGZIP(), []int{32}
}

func (x *UpdateRoleResRequest) GetRoleId() int64 {
	if x != nil {
		return x.RoleId
	}
	return 0
}

func (x *UpdateRoleResRequest) GetResources() []int64 {
	if x != nil {
		return x.Resources
	}
	return nil
}

type SavePermRoleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrCode int64  `protobuf:"varint,1,opt,name=ErrCode,proto3" json:"ErrCode"`
	ErrMsg  string `protobuf:"bytes,2,opt,name=ErrMsg,proto3" json:"ErrMsg"`
	Id      int64  `protobuf:"varint,3,opt,name=Id,proto3" json:"Id"`
}

func (x *SavePermRoleResponse) Reset() {
	*x = SavePermRoleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rbac_service_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SavePermRoleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SavePermRoleResponse) ProtoMessage() {}

func (x *SavePermRoleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rbac_service_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SavePermRoleResponse.ProtoReflect.Descriptor instead.
func (*SavePermRoleResponse) Descriptor() ([]byte, []int) {
	return file_rbac_service_proto_rawDescGZIP(), []int{33}
}

func (x *SavePermRoleResponse) GetErrCode() int64 {
	if x != nil {
		return x.ErrCode
	}
	return 0
}

func (x *SavePermRoleResponse) GetErrMsg() string {
	if x != nil {
		return x.ErrMsg
	}
	return ""
}

func (x *SavePermRoleResponse) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type PermRoleId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value int64 `protobuf:"varint,1,opt,name=Value,proto3" json:"Value"`
}

func (x *PermRoleId) Reset() {
	*x = PermRoleId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rbac_service_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PermRoleId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PermRoleId) ProtoMessage() {}

func (x *PermRoleId) ProtoReflect() protoreflect.Message {
	mi := &file_rbac_service_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PermRoleId.ProtoReflect.Descriptor instead.
func (*PermRoleId) Descriptor() ([]byte, []int) {
	return file_rbac_service_proto_rawDescGZIP(), []int{34}
}

func (x *PermRoleId) GetValue() int64 {
	if x != nil {
		return x.Value
	}
	return 0
}

type SPermRole struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// * ID
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	// * 名称
	Name string `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name"`
	// * 角色级别
	Level int32 `protobuf:"varint,3,opt,name=Level,proto3" json:"Level"`
	// * 数据权限
	DataScope string `protobuf:"bytes,4,opt,name=DataScope,proto3" json:"DataScope"`
	// * 功能权限
	Permission string `protobuf:"bytes,5,opt,name=Permission,proto3" json:"Permission"`
	// * 备注
	Remark string `protobuf:"bytes,6,opt,name=Remark,proto3" json:"Remark"`
	// * 创建日期
	CreateTime int64 `protobuf:"varint,7,opt,name=CreateTime,proto3" json:"CreateTime"`
	// * 关联的资源ID列表
	RelatedResIdList []int64 `protobuf:"varint,8,rep,packed,name=RelatedResIdList,proto3" json:"RelatedResIdList"`
}

func (x *SPermRole) Reset() {
	*x = SPermRole{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rbac_service_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SPermRole) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SPermRole) ProtoMessage() {}

func (x *SPermRole) ProtoReflect() protoreflect.Message {
	mi := &file_rbac_service_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SPermRole.ProtoReflect.Descriptor instead.
func (*SPermRole) Descriptor() ([]byte, []int) {
	return file_rbac_service_proto_rawDescGZIP(), []int{35}
}

func (x *SPermRole) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SPermRole) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SPermRole) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *SPermRole) GetDataScope() string {
	if x != nil {
		return x.DataScope
	}
	return ""
}

func (x *SPermRole) GetPermission() string {
	if x != nil {
		return x.Permission
	}
	return ""
}

func (x *SPermRole) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *SPermRole) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *SPermRole) GetRelatedResIdList() []int64 {
	if x != nil {
		return x.RelatedResIdList
	}
	return nil
}

type QueryPermRoleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *QueryPermRoleRequest) Reset() {
	*x = QueryPermRoleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rbac_service_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryPermRoleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryPermRoleRequest) ProtoMessage() {}

func (x *QueryPermRoleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rbac_service_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryPermRoleRequest.ProtoReflect.Descriptor instead.
func (*QueryPermRoleRequest) Descriptor() ([]byte, []int) {
	return file_rbac_service_proto_rawDescGZIP(), []int{36}
}

type QueryPermRoleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*SPermRole `protobuf:"bytes,1,rep,name=List,proto3" json:"List"`
}

func (x *QueryPermRoleResponse) Reset() {
	*x = QueryPermRoleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rbac_service_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryPermRoleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryPermRoleResponse) ProtoMessage() {}

func (x *QueryPermRoleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rbac_service_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryPermRoleResponse.ProtoReflect.Descriptor instead.
func (*QueryPermRoleResponse) Descriptor() ([]byte, []int) {
	return file_rbac_service_proto_rawDescGZIP(), []int{37}
}

func (x *QueryPermRoleResponse) GetList() []*SPermRole {
	if x != nil {
		return x.List
	}
	return nil
}

type PagingPermRole struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// * ID
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	// * 名称
	Name string `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name"`
	// * 角色级别
	Level int32 `protobuf:"varint,3,opt,name=Level,proto3" json:"Level"`
	// * 数据权限
	DataScope string `protobuf:"bytes,4,opt,name=DataScope,proto3" json:"DataScope"`
	// * 功能权限
	Permission string `protobuf:"bytes,5,opt,name=Permission,proto3" json:"Permission"`
	// * 备注
	Remark string `protobuf:"bytes,6,opt,name=Remark,proto3" json:"Remark"`
	// * 创建日期
	CreateTime int64 `protobuf:"varint,7,opt,name=CreateTime,proto3" json:"CreateTime"`
}

func (x *PagingPermRole) Reset() {
	*x = PagingPermRole{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rbac_service_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PagingPermRole) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PagingPermRole) ProtoMessage() {}

func (x *PagingPermRole) ProtoReflect() protoreflect.Message {
	mi := &file_rbac_service_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PagingPermRole.ProtoReflect.Descriptor instead.
func (*PagingPermRole) Descriptor() ([]byte, []int) {
	return file_rbac_service_proto_rawDescGZIP(), []int{38}
}

func (x *PagingPermRole) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PagingPermRole) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PagingPermRole) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *PagingPermRole) GetDataScope() string {
	if x != nil {
		return x.DataScope
	}
	return ""
}

func (x *PagingPermRole) GetPermission() string {
	if x != nil {
		return x.Permission
	}
	return ""
}

func (x *PagingPermRole) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *PagingPermRole) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

type PermRolePagingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 分页参数
	Params *SPagingParams `protobuf:"bytes,1,opt,name=Params,proto3" json:"Params"`
}

func (x *PermRolePagingRequest) Reset() {
	*x = PermRolePagingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rbac_service_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PermRolePagingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PermRolePagingRequest) ProtoMessage() {}

func (x *PermRolePagingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rbac_service_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PermRolePagingRequest.ProtoReflect.Descriptor instead.
func (*PermRolePagingRequest) Descriptor() ([]byte, []int) {
	return file_rbac_service_proto_rawDescGZIP(), []int{39}
}

func (x *PermRolePagingRequest) GetParams() *SPagingParams {
	if x != nil {
		return x.Params
	}
	return nil
}

type PermRolePagingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64             `protobuf:"varint,1,opt,name=Total,proto3" json:"Total"`
	Value []*PagingPermRole `protobuf:"bytes,2,rep,name=Value,proto3" json:"Value"`
}

func (x *PermRolePagingResponse) Reset() {
	*x = PermRolePagingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rbac_service_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PermRolePagingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PermRolePagingResponse) ProtoMessage() {}

func (x *PermRolePagingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rbac_service_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PermRolePagingResponse.ProtoReflect.Descriptor instead.
func (*PermRolePagingResponse) Descriptor() ([]byte, []int) {
	return file_rbac_service_proto_rawDescGZIP(), []int{40}
}

func (x *PermRolePagingResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *PermRolePagingResponse) GetValue() []*PagingPermRole {
	if x != nil {
		return x.Value
	}
	return nil
}

type SavePermResRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// * 资源ID
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	// * 资源名称
	Name string `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name"`
	// * 资源类型, 0: 目录 1: 资源 2: 菜单 3: 按钮
	ResType int32 `protobuf:"varint,3,opt,name=ResType,proto3" json:"ResType"`
	// * 上级菜单ID
	Pid int64 `protobuf:"varint,4,opt,name=Pid,proto3" json:"Pid"`
	// * 资源键
	Key string `protobuf:"bytes,5,opt,name=Key,proto3" json:"Key"`
	// * 资源路径
	Path string `protobuf:"bytes,6,opt,name=Path,proto3" json:"Path"`
	// * 图标
	Icon string `protobuf:"bytes,7,opt,name=Icon,proto3" json:"Icon"`
	// * 权限,多个值用|分隔
	Permission string `protobuf:"bytes,8,opt,name=Permission,proto3" json:"Permission"`
	// * 排序
	SortNum int32 `protobuf:"varint,9,opt,name=SortNum,proto3" json:"SortNum"`
	// * 是否外部
	IsExternal bool `protobuf:"varint,10,opt,name=IsExternal,proto3" json:"IsExternal"`
	// * 是否隐藏
	IsHidden bool `protobuf:"varint,11,opt,name=IsHidden,proto3" json:"IsHidden"`
	// * 创建日期
	CreateTime int64 `protobuf:"varint,12,opt,name=CreateTime,proto3" json:"CreateTime"`
	// * 组件名称
	ComponentName string `protobuf:"bytes,13,opt,name=ComponentName,proto3" json:"ComponentName"`
	// * 缓存
	Cache string `protobuf:"bytes,14,opt,name=Cache,proto3" json:"Cache"`
}

func (x *SavePermResRequest) Reset() {
	*x = SavePermResRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rbac_service_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SavePermResRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SavePermResRequest) ProtoMessage() {}

func (x *SavePermResRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rbac_service_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SavePermResRequest.ProtoReflect.Descriptor instead.
func (*SavePermResRequest) Descriptor() ([]byte, []int) {
	return file_rbac_service_proto_rawDescGZIP(), []int{41}
}

func (x *SavePermResRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SavePermResRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SavePermResRequest) GetResType() int32 {
	if x != nil {
		return x.ResType
	}
	return 0
}

func (x *SavePermResRequest) GetPid() int64 {
	if x != nil {
		return x.Pid
	}
	return 0
}

func (x *SavePermResRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *SavePermResRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *SavePermResRequest) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *SavePermResRequest) GetPermission() string {
	if x != nil {
		return x.Permission
	}
	return ""
}

func (x *SavePermResRequest) GetSortNum() int32 {
	if x != nil {
		return x.SortNum
	}
	return 0
}

func (x *SavePermResRequest) GetIsExternal() bool {
	if x != nil {
		return x.IsExternal
	}
	return false
}

func (x *SavePermResRequest) GetIsHidden() bool {
	if x != nil {
		return x.IsHidden
	}
	return false
}

func (x *SavePermResRequest) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *SavePermResRequest) GetComponentName() string {
	if x != nil {
		return x.ComponentName
	}
	return ""
}

func (x *SavePermResRequest) GetCache() string {
	if x != nil {
		return x.Cache
	}
	return ""
}

type SavePermResResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrCode int64  `protobuf:"varint,1,opt,name=ErrCode,proto3" json:"ErrCode"`
	ErrMsg  string `protobuf:"bytes,2,opt,name=ErrMsg,proto3" json:"ErrMsg"`
	Id      int64  `protobuf:"varint,3,opt,name=Id,proto3" json:"Id"`
}

func (x *SavePermResResponse) Reset() {
	*x = SavePermResResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rbac_service_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SavePermResResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SavePermResResponse) ProtoMessage() {}

func (x *SavePermResResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rbac_service_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SavePermResResponse.ProtoReflect.Descriptor instead.
func (*SavePermResResponse) Descriptor() ([]byte, []int) {
	return file_rbac_service_proto_rawDescGZIP(), []int{42}
}

func (x *SavePermResResponse) GetErrCode() int64 {
	if x != nil {
		return x.ErrCode
	}
	return 0
}

func (x *SavePermResResponse) GetErrMsg() string {
	if x != nil {
		return x.ErrMsg
	}
	return ""
}

func (x *SavePermResResponse) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type PermResId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value int64 `protobuf:"varint,1,opt,name=Value,proto3" json:"Value"`
}

func (x *PermResId) Reset() {
	*x = PermResId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rbac_service_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PermResId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PermResId) ProtoMessage() {}

func (x *PermResId) ProtoReflect() protoreflect.Message {
	mi := &file_rbac_service_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PermResId.ProtoReflect.Descriptor instead.
func (*PermResId) Descriptor() ([]byte, []int) {
	return file_rbac_service_proto_rawDescGZIP(), []int{43}
}

func (x *PermResId) GetValue() int64 {
	if x != nil {
		return x.Value
	}
	return 0
}

type SPermRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// * 资源ID
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	// * 资源名称
	Name string `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name"`
	// * 资源类型, 0: 目录 1: 资源 2: 菜单 3: 按钮
	ResType int32 `protobuf:"varint,3,opt,name=ResType,proto3" json:"ResType"`
	// * 上级菜单ID
	Pid int64 `protobuf:"varint,4,opt,name=Pid,proto3" json:"Pid"`
	// * 深度/层级
	Depth int32 `protobuf:"varint,5,opt,name=Depth,proto3" json:"Depth"`
	// * 资源键
	Key string `protobuf:"bytes,6,opt,name=Key,proto3" json:"Key"`
	// * 资源路径
	Path string `protobuf:"bytes,7,opt,name=Path,proto3" json:"Path"`
	// * 图标
	Icon string `protobuf:"bytes,8,opt,name=Icon,proto3" json:"Icon"`
	// * 权限,多个值用|分隔
	Permission string `protobuf:"bytes,9,opt,name=Permission,proto3" json:"Permission"`
	// * 排序
	SortNum int32 `protobuf:"varint,10,opt,name=SortNum,proto3" json:"SortNum"`
	// * 是否外部
	IsExternal bool `protobuf:"varint,11,opt,name=IsExternal,proto3" json:"IsExternal"`
	// * 是否隐藏
	IsHidden bool `protobuf:"varint,12,opt,name=IsHidden,proto3" json:"IsHidden"`
	// * 创建日期
	CreateTime int64 `protobuf:"varint,13,opt,name=CreateTime,proto3" json:"CreateTime"`
	// * 组件名称
	ComponentName string `protobuf:"bytes,14,opt,name=ComponentName,proto3" json:"ComponentName"`
	// * 缓存
	Cache string `protobuf:"bytes,15,opt,name=Cache,proto3" json:"Cache"`
	// * 是否为叶子节点
	IsLeaf bool `protobuf:"varint,16,opt,name=IsLeaf,proto3" json:"IsLeaf"`
	// * 子资源
	Children []*SPermRes `protobuf:"bytes,17,rep,name=Children,proto3" json:"Children"`
}

func (x *SPermRes) Reset() {
	*x = SPermRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rbac_service_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SPermRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SPermRes) ProtoMessage() {}

func (x *SPermRes) ProtoReflect() protoreflect.Message {
	mi := &file_rbac_service_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SPermRes.ProtoReflect.Descriptor instead.
func (*SPermRes) Descriptor() ([]byte, []int) {
	return file_rbac_service_proto_rawDescGZIP(), []int{44}
}

func (x *SPermRes) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SPermRes) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SPermRes) GetResType() int32 {
	if x != nil {
		return x.ResType
	}
	return 0
}

func (x *SPermRes) GetPid() int64 {
	if x != nil {
		return x.Pid
	}
	return 0
}

func (x *SPermRes) GetDepth() int32 {
	if x != nil {
		return x.Depth
	}
	return 0
}

func (x *SPermRes) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *SPermRes) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *SPermRes) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *SPermRes) GetPermission() string {
	if x != nil {
		return x.Permission
	}
	return ""
}

func (x *SPermRes) GetSortNum() int32 {
	if x != nil {
		return x.SortNum
	}
	return 0
}

func (x *SPermRes) GetIsExternal() bool {
	if x != nil {
		return x.IsExternal
	}
	return false
}

func (x *SPermRes) GetIsHidden() bool {
	if x != nil {
		return x.IsHidden
	}
	return false
}

func (x *SPermRes) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *SPermRes) GetComponentName() string {
	if x != nil {
		return x.ComponentName
	}
	return ""
}

func (x *SPermRes) GetCache() string {
	if x != nil {
		return x.Cache
	}
	return ""
}

func (x *SPermRes) GetIsLeaf() bool {
	if x != nil {
		return x.IsLeaf
	}
	return false
}

func (x *SPermRes) GetChildren() []*SPermRes {
	if x != nil {
		return x.Children
	}
	return nil
}

type GetUserResRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// * 用户编号
	UserId int64 `protobuf:"varint,1,opt,name=userId,proto3" json:"userId"`
	// * 是否只显示菜单
	OnlyMenu bool `protobuf:"varint,2,opt,name=OnlyMenu,proto3" json:"OnlyMenu"`
}

func (x *GetUserResRequest) Reset() {
	*x = GetUserResRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rbac_service_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserResRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserResRequest) ProtoMessage() {}

func (x *GetUserResRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rbac_service_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserResRequest.ProtoReflect.Descriptor instead.
func (*GetUserResRequest) Descriptor() ([]byte, []int) {
	return file_rbac_service_proto_rawDescGZIP(), []int{45}
}

func (x *GetUserResRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *GetUserResRequest) GetOnlyMenu() bool {
	if x != nil {
		return x.OnlyMenu
	}
	return false
}

type QueryPermResRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// * 关键词
	Keyword string `protobuf:"bytes,1,opt,name=Keyword,proto3" json:"Keyword"`
	// * 是否只显示菜单
	OnlyMenu bool `protobuf:"varint,2,opt,name=OnlyMenu,proto3" json:"OnlyMenu"`
	// * 上级编号
	ParentId int64 `protobuf:"varint,3,opt,name=ParentId,proto3" json:"ParentId"`
	// * 初始化数据ID
	InitialId int64 `protobuf:"varint,4,opt,name=InitialId,proto3" json:"InitialId"`
}

func (x *QueryPermResRequest) Reset() {
	*x = QueryPermResRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rbac_service_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryPermResRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryPermResRequest) ProtoMessage() {}

func (x *QueryPermResRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rbac_service_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryPermResRequest.ProtoReflect.Descriptor instead.
func (*QueryPermResRequest) Descriptor() ([]byte, []int) {
	return file_rbac_service_proto_rawDescGZIP(), []int{46}
}

func (x *QueryPermResRequest) GetKeyword() string {
	if x != nil {
		return x.Keyword
	}
	return ""
}

func (x *QueryPermResRequest) GetOnlyMenu() bool {
	if x != nil {
		return x.OnlyMenu
	}
	return false
}

func (x *QueryPermResRequest) GetParentId() int64 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

func (x *QueryPermResRequest) GetInitialId() int64 {
	if x != nil {
		return x.InitialId
	}
	return 0
}

type QueryPermResResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*SPermRes `protobuf:"bytes,1,rep,name=List,proto3" json:"List"`
	// 返回初始化上级ID列表
	InitialList []int64 `protobuf:"varint,2,rep,packed,name=InitialList,proto3" json:"InitialList"`
}

func (x *QueryPermResResponse) Reset() {
	*x = QueryPermResResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rbac_service_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryPermResResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryPermResResponse) ProtoMessage() {}

func (x *QueryPermResResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rbac_service_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryPermResResponse.ProtoReflect.Descriptor instead.
func (*QueryPermResResponse) Descriptor() ([]byte, []int) {
	return file_rbac_service_proto_rawDescGZIP(), []int{47}
}

func (x *QueryPermResResponse) GetList() []*SPermRes {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *QueryPermResResponse) GetInitialList() []int64 {
	if x != nil {
		return x.InitialList
	}
	return nil
}

type PagingPermRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// * 资源ID
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	// * 资源名称
	Name string `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name"`
	// * 资源类型, 0: 目录 1: 资源 2: 菜单 3: 按钮
	ResType int32 `protobuf:"varint,3,opt,name=ResType,proto3" json:"ResType"`
	// * 上级菜单ID
	Pid int64 `protobuf:"varint,4,opt,name=Pid,proto3" json:"Pid"`
	// * 资源键
	Key string `protobuf:"bytes,5,opt,name=Key,proto3" json:"Key"`
	// * 资源路径
	Path string `protobuf:"bytes,6,opt,name=Path,proto3" json:"Path"`
	// * 图标
	Icon string `protobuf:"bytes,7,opt,name=Icon,proto3" json:"Icon"`
	// * 权限,多个值用|分隔
	Permission string `protobuf:"bytes,8,opt,name=Permission,proto3" json:"Permission"`
	// * 排序
	SortNum int32 `protobuf:"varint,9,opt,name=SortNum,proto3" json:"SortNum"`
	// * 是否外部
	IsExternal bool `protobuf:"varint,10,opt,name=IsExternal,proto3" json:"IsExternal"`
	// * 是否隐藏
	IsHidden bool `protobuf:"varint,11,opt,name=IsHidden,proto3" json:"IsHidden"`
	// * 创建日期
	CreateTime int64 `protobuf:"varint,12,opt,name=CreateTime,proto3" json:"CreateTime"`
	// * 组件名称
	ComponentName string `protobuf:"bytes,13,opt,name=ComponentName,proto3" json:"ComponentName"`
	// * 缓存
	Cache string `protobuf:"bytes,14,opt,name=Cache,proto3" json:"Cache"`
}

func (x *PagingPermRes) Reset() {
	*x = PagingPermRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rbac_service_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PagingPermRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PagingPermRes) ProtoMessage() {}

func (x *PagingPermRes) ProtoReflect() protoreflect.Message {
	mi := &file_rbac_service_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PagingPermRes.ProtoReflect.Descriptor instead.
func (*PagingPermRes) Descriptor() ([]byte, []int) {
	return file_rbac_service_proto_rawDescGZIP(), []int{48}
}

func (x *PagingPermRes) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PagingPermRes) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PagingPermRes) GetResType() int32 {
	if x != nil {
		return x.ResType
	}
	return 0
}

func (x *PagingPermRes) GetPid() int64 {
	if x != nil {
		return x.Pid
	}
	return 0
}

func (x *PagingPermRes) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *PagingPermRes) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *PagingPermRes) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *PagingPermRes) GetPermission() string {
	if x != nil {
		return x.Permission
	}
	return ""
}

func (x *PagingPermRes) GetSortNum() int32 {
	if x != nil {
		return x.SortNum
	}
	return 0
}

func (x *PagingPermRes) GetIsExternal() bool {
	if x != nil {
		return x.IsExternal
	}
	return false
}

func (x *PagingPermRes) GetIsHidden() bool {
	if x != nil {
		return x.IsHidden
	}
	return false
}

func (x *PagingPermRes) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *PagingPermRes) GetComponentName() string {
	if x != nil {
		return x.ComponentName
	}
	return ""
}

func (x *PagingPermRes) GetCache() string {
	if x != nil {
		return x.Cache
	}
	return ""
}

type PermResPagingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 分页参数
	Params *SPagingParams `protobuf:"bytes,1,opt,name=Params,proto3" json:"Params"`
}

func (x *PermResPagingRequest) Reset() {
	*x = PermResPagingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rbac_service_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PermResPagingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PermResPagingRequest) ProtoMessage() {}

func (x *PermResPagingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rbac_service_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PermResPagingRequest.ProtoReflect.Descriptor instead.
func (*PermResPagingRequest) Descriptor() ([]byte, []int) {
	return file_rbac_service_proto_rawDescGZIP(), []int{49}
}

func (x *PermResPagingRequest) GetParams() *SPagingParams {
	if x != nil {
		return x.Params
	}
	return nil
}

type PermResPagingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64            `protobuf:"varint,1,opt,name=total,proto3" json:"total"`
	Value []*PagingPermRes `protobuf:"bytes,2,rep,name=Value,proto3" json:"Value"`
}

func (x *PermResPagingResponse) Reset() {
	*x = PermResPagingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rbac_service_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PermResPagingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PermResPagingResponse) ProtoMessage() {}

func (x *PermResPagingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rbac_service_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PermResPagingResponse.ProtoReflect.Descriptor instead.
func (*PermResPagingResponse) Descriptor() ([]byte, []int) {
	return file_rbac_service_proto_rawDescGZIP(), []int{50}
}

func (x *PermResPagingResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *PermResPagingResponse) GetValue() []*PagingPermRes {
	if x != nil {
		return x.Value
	}
	return nil
}

// 移动资源顺序
type MoveResOrdinalRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// * 资源编号
	ResourceId int64 `protobuf:"varint,1,opt,name=ResourceId,proto3" json:"ResourceId"`
	// * 移动方向,0:向上移,1:向下移
	Direction int32 `protobuf:"varint,2,opt,name=Direction,proto3" json:"Direction"`
}

func (x *MoveResOrdinalRequest) Reset() {
	*x = MoveResOrdinalRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rbac_service_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MoveResOrdinalRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MoveResOrdinalRequest) ProtoMessage() {}

func (x *MoveResOrdinalRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rbac_service_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MoveResOrdinalRequest.ProtoReflect.Descriptor instead.
func (*MoveResOrdinalRequest) Descriptor() ([]byte, []int) {
	return file_rbac_service_proto_rawDescGZIP(), []int{51}
}

func (x *MoveResOrdinalRequest) GetResourceId() int64 {
	if x != nil {
		return x.ResourceId
	}
	return 0
}

func (x *MoveResOrdinalRequest) GetDirection() int32 {
	if x != nil {
		return x.Direction
	}
	return 0
}

var File_rbac_service_proto protoreflect.FileDescriptor

var file_rbac_service_proto_rawDesc = []byte{
	0x0a, 0x12, 0x72, 0x62, 0x61, 0x63, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0c, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x52, 0x0a, 0x10, 0x52, 0x62, 0x61, 0x63, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x55, 0x73, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x55, 0x73, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x50, 0x77,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x50, 0x77, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x45,
	0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x22, 0xb7, 0x01, 0x0a, 0x11, 0x52, 0x62, 0x61, 0x63, 0x4c,
	0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x45, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x45,
	0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x45, 0x72, 0x72, 0x4d, 0x73, 0x67,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x45, 0x72, 0x72, 0x4d, 0x73, 0x67, 0x12, 0x16,
	0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x41, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x50, 0x65, 0x72, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x50,
	0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x52, 0x6f,
	0x6c, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x03, 0x52, 0x05, 0x52, 0x6f, 0x6c, 0x65, 0x73,
	0x22, 0x7b, 0x0a, 0x18, 0x52, 0x62, 0x61, 0x63, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x52, 0x6f, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x05, 0x52, 0x6f, 0x6c,
	0x65, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x27, 0x0a, 0x09, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x53, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x52, 0x09, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x22, 0xbb, 0x02,
	0x0a, 0x08, 0x53, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x4b, 0x65,
	0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x4b, 0x65, 0x79, 0x12, 0x12, 0x0a, 0x04,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x52, 0x65, 0x73, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x07, 0x52, 0x65, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x44, 0x65,
	0x70, 0x74, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x44, 0x65, 0x70, 0x74, 0x68,
	0x12, 0x12, 0x0a, 0x04, 0x50, 0x61, 0x74, 0x68, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x50, 0x61, 0x74, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x49, 0x63, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x49, 0x63, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x50, 0x65, 0x72, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x50, 0x65,
	0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x6f, 0x72, 0x74,
	0x4e, 0x75, 0x6d, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x53, 0x6f, 0x72, 0x74, 0x4e,
	0x75, 0x6d, 0x12, 0x1a, 0x0a, 0x08, 0x49, 0x73, 0x48, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x49, 0x73, 0x48, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x12, 0x24,
	0x0a, 0x0d, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x08, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e,
	0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x53, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x52, 0x08, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x22, 0x1e, 0x0a, 0x06, 0x52,
	0x6f, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x1e, 0x0a, 0x06, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x57, 0x0a, 0x08, 0x52,
	0x62, 0x61, 0x63, 0x54, 0x72, 0x65, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x4c, 0x61, 0x62, 0x65, 0x6c,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x25, 0x0a,
	0x08, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x09, 0x2e, 0x52, 0x62, 0x61, 0x63, 0x54, 0x72, 0x65, 0x65, 0x52, 0x08, 0x43, 0x68, 0x69, 0x6c,
	0x64, 0x72, 0x65, 0x6e, 0x22, 0x99, 0x01, 0x0a, 0x13, 0x53, 0x61, 0x76, 0x65, 0x50, 0x65, 0x72,
	0x6d, 0x44, 0x65, 0x70, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x50, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x50,
	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64,
	0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x22, 0x58, 0x0a, 0x14, 0x53, 0x61, 0x76, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x44, 0x65, 0x70, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x45, 0x72, 0x72, 0x43,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x45, 0x72, 0x72, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x45, 0x72, 0x72, 0x4d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x45, 0x72, 0x72, 0x4d, 0x73, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x64, 0x22, 0x22, 0x0a, 0x0a, 0x50, 0x65,
	0x72, 0x6d, 0x44, 0x65, 0x70, 0x74, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x8f,
	0x01, 0x0a, 0x09, 0x53, 0x50, 0x65, 0x72, 0x6d, 0x44, 0x65, 0x70, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x50, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x50,
	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64,
	0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x22, 0x16, 0x0a, 0x14, 0x51, 0x75, 0x65, 0x72, 0x79, 0x50, 0x65, 0x72, 0x6d, 0x44, 0x65, 0x70,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x37, 0x0a, 0x15, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x50, 0x65, 0x72, 0x6d, 0x44, 0x65, 0x70, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x1e, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0a, 0x2e, 0x53, 0x50, 0x65, 0x72, 0x6d, 0x44, 0x65, 0x70, 0x74, 0x52, 0x04, 0x4c, 0x69, 0x73,
	0x74, 0x22, 0x9e, 0x01, 0x0a, 0x12, 0x53, 0x61, 0x76, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x4a, 0x6f,
	0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x45,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x53, 0x6f, 0x72, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x53, 0x6f, 0x72, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x44, 0x65,
	0x70, 0x74, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x44, 0x65, 0x70, 0x74,
	0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x22, 0x57, 0x0a, 0x13, 0x53, 0x61, 0x76, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x4a, 0x6f,
	0x62, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x45, 0x72, 0x72,
	0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x45, 0x72, 0x72, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x45, 0x72, 0x72, 0x4d, 0x73, 0x67, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x45, 0x72, 0x72, 0x4d, 0x73, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x49,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x64, 0x22, 0x21, 0x0a, 0x09, 0x50,
	0x65, 0x72, 0x6d, 0x4a, 0x6f, 0x62, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x94,
	0x01, 0x0a, 0x08, 0x53, 0x50, 0x65, 0x72, 0x6d, 0x4a, 0x6f, 0x62, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x07, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x53, 0x6f, 0x72,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x53, 0x6f, 0x72, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x44, 0x65, 0x70, 0x74, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x44,
	0x65, 0x70, 0x74, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x31, 0x0a, 0x13, 0x51, 0x75, 0x65, 0x72, 0x79, 0x50, 0x65,
	0x72, 0x6d, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08,
	0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x49, 0x64, 0x22, 0x35, 0x0a, 0x14, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x50, 0x65, 0x72, 0x6d, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x1d, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x09,
	0x2e, 0x53, 0x50, 0x65, 0x72, 0x6d, 0x4a, 0x6f, 0x62, 0x52, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x22,
	0x99, 0x01, 0x0a, 0x0d, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x50, 0x65, 0x72, 0x6d, 0x4a, 0x6f,
	0x62, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x53, 0x6f, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x53,
	0x6f, 0x72, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x44, 0x65, 0x70, 0x74, 0x49, 0x64, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x44, 0x65, 0x70, 0x74, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x3e, 0x0a, 0x14, 0x50,
	0x65, 0x72, 0x6d, 0x4a, 0x6f, 0x62, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x06, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x53, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x52, 0x06, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x22, 0x53, 0x0a, 0x15, 0x50,
	0x65, 0x72, 0x6d, 0x4a, 0x6f, 0x62, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x24, 0x0a, 0x05, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x50, 0x61, 0x67, 0x69,
	0x6e, 0x67, 0x50, 0x65, 0x72, 0x6d, 0x4a, 0x6f, 0x62, 0x52, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x22, 0xf1, 0x02, 0x0a, 0x13, 0x53, 0x61, 0x76, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x55, 0x73, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x55, 0x73, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x50, 0x77,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x50, 0x77, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x46, 0x6c, 0x61, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x46, 0x6c, 0x61, 0x67,
	0x12, 0x16, 0x0a, 0x06, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x4e, 0x69, 0x63, 0x6b,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4e, 0x69, 0x63, 0x6b,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x47, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x47, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05,
	0x45, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x45, 0x6d, 0x61,
	0x69, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x44, 0x65, 0x70, 0x74,
	0x49, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x44, 0x65, 0x70, 0x74, 0x49, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x4a, 0x6f, 0x62, 0x49, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x4a, 0x6f, 0x62, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64,
	0x12, 0x1c, 0x0a, 0x09, 0x4c, 0x61, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x4c, 0x61, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x1e,
	0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x03, 0x52, 0x05, 0x52,
	0x6f, 0x6c, 0x65, 0x73, 0x22, 0x58, 0x0a, 0x14, 0x53, 0x61, 0x76, 0x65, 0x50, 0x65, 0x72, 0x6d,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x45, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x45,
	0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x45, 0x72, 0x72, 0x4d, 0x73, 0x67,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x45, 0x72, 0x72, 0x4d, 0x73, 0x67, 0x12, 0x0e,
	0x0a, 0x02, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x64, 0x22, 0x22,
	0x0a, 0x0a, 0x50, 0x65, 0x72, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x22, 0x89, 0x03, 0x0a, 0x09, 0x53, 0x50, 0x65, 0x72, 0x6d, 0x55, 0x73, 0x65, 0x72,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x10, 0x0a, 0x03, 0x55, 0x73, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x55,
	0x73, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x50, 0x77, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x50, 0x77, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x46, 0x6c, 0x61, 0x67, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x76, 0x61, 0x74,
	0x61, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72,
	0x12, 0x1a, 0x0a, 0x08, 0x4e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x4e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x47, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x47, 0x65,
	0x6e, 0x64, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x50, 0x68,
	0x6f, 0x6e, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x50, 0x68, 0x6f, 0x6e, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x44, 0x65, 0x70, 0x74, 0x49, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x44, 0x65, 0x70, 0x74, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x4a, 0x6f, 0x62, 0x49,
	0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x4a, 0x6f, 0x62, 0x49, 0x64, 0x12, 0x18,
	0x0a, 0x07, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x4c, 0x61, 0x73, 0x74,
	0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x4c, 0x61, 0x73,
	0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x18,
	0x0f, 0x20, 0x03, 0x28, 0x03, 0x52, 0x05, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x12, 0x20, 0x0a, 0x0b,
	0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x10, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x0b, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x16,
	0x0a, 0x14, 0x51, 0x75, 0x65, 0x72, 0x79, 0x50, 0x65, 0x72, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x37, 0x0a, 0x15, 0x51, 0x75, 0x65, 0x72, 0x79, 0x50,
	0x65, 0x72, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x1e, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e,
	0x53, 0x50, 0x65, 0x72, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x22,
	0xd6, 0x02, 0x0a, 0x0e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x50, 0x65, 0x72, 0x6d, 0x55, 0x73,
	0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x55, 0x73, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x55, 0x73, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x50, 0x77, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x50, 0x77, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x46, 0x6c, 0x61, 0x67, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x76,
	0x61, 0x74, 0x61, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x41, 0x76, 0x61, 0x74,
	0x61, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x4e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x47, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x47, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x14, 0x0a, 0x05,
	0x50, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x50, 0x68, 0x6f,
	0x6e, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x44, 0x65, 0x70, 0x74, 0x49, 0x64, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x44, 0x65, 0x70, 0x74, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x4a, 0x6f,
	0x62, 0x49, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x4a, 0x6f, 0x62, 0x49, 0x64,
	0x12, 0x18, 0x0a, 0x07, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x07, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x4c, 0x61,
	0x73, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x4c,
	0x61, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x5b, 0x0a, 0x15, 0x50, 0x65, 0x72, 0x6d,
	0x55, 0x73, 0x65, 0x72, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1a, 0x0a, 0x08, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x49, 0x64, 0x12, 0x26, 0x0a,
	0x06, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e,
	0x53, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x06, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x22, 0x55, 0x0a, 0x16, 0x50, 0x65, 0x72, 0x6d, 0x55, 0x73, 0x65,
	0x72, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x25, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x50, 0x65, 0x72,
	0x6d, 0x55, 0x73, 0x65, 0x72, 0x52, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xc5, 0x01, 0x0a,
	0x13, 0x53, 0x61, 0x76, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x4c, 0x65, 0x76, 0x65,
	0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x1c,
	0x0a, 0x09, 0x44, 0x61, 0x74, 0x61, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x44, 0x61, 0x74, 0x61, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a,
	0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06,
	0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x52, 0x65,
	0x6d, 0x61, 0x72, 0x6b, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x22, 0x4c, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x6f,
	0x6c, 0x65, 0x52, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x52, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x52, 0x6f,
	0x6c, 0x65, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x03, 0x52, 0x09, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x73, 0x22, 0x58, 0x0a, 0x14, 0x53, 0x61, 0x76, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x52, 0x6f,
	0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x45, 0x72,
	0x72, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x45, 0x72, 0x72,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x45, 0x72, 0x72, 0x4d, 0x73, 0x67, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x45, 0x72, 0x72, 0x4d, 0x73, 0x67, 0x12, 0x0e, 0x0a, 0x02,
	0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x64, 0x22, 0x22, 0x0a, 0x0a,
	0x50, 0x65, 0x72, 0x6d, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x22, 0xe7, 0x01, 0x0a, 0x09, 0x53, 0x50, 0x65, 0x72, 0x6d, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x44, 0x61, 0x74, 0x61,
	0x53, 0x63, 0x6f, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x44, 0x61, 0x74,
	0x61, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x50, 0x65, 0x72, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x1e,
	0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2a,
	0x0a, 0x10, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x52, 0x65, 0x73, 0x49, 0x64, 0x4c, 0x69,
	0x73, 0x74, 0x18, 0x08, 0x20, 0x03, 0x28, 0x03, 0x52, 0x10, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65,
	0x64, 0x52, 0x65, 0x73, 0x49, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x16, 0x0a, 0x14, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x50, 0x65, 0x72, 0x6d, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x22, 0x37, 0x0a, 0x15, 0x51, 0x75, 0x65, 0x72, 0x79, 0x50, 0x65, 0x72, 0x6d, 0x52,
	0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x04, 0x4c,
	0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x53, 0x50, 0x65, 0x72,
	0x6d, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x22, 0xc0, 0x01, 0x0a, 0x0e,
	0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x50, 0x65, 0x72, 0x6d, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x44, 0x61, 0x74, 0x61,
	0x53, 0x63, 0x6f, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x44, 0x61, 0x74,
	0x61, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x50, 0x65, 0x72, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x1e,
	0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x3f,
	0x0a, 0x15, 0x50, 0x65, 0x72, 0x6d, 0x52, 0x6f, 0x6c, 0x65, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x06, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x53, 0x50, 0x61, 0x67, 0x69, 0x6e,
	0x67, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x06, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x22,
	0x55, 0x0a, 0x16, 0x50, 0x65, 0x72, 0x6d, 0x52, 0x6f, 0x6c, 0x65, 0x50, 0x61, 0x67, 0x69, 0x6e,
	0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x6f, 0x74,
	0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12,
	0x25, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x50, 0x65, 0x72, 0x6d, 0x52, 0x6f, 0x6c, 0x65, 0x52,
	0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xf0, 0x02, 0x0a, 0x12, 0x53, 0x61, 0x76, 0x65, 0x50,
	0x65, 0x72, 0x6d, 0x52, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x52, 0x65, 0x73, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x07, 0x52, 0x65, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x50,
	0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x50, 0x69, 0x64, 0x12, 0x10, 0x0a,
	0x03, 0x4b, 0x65, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x4b, 0x65, 0x79, 0x12,
	0x12, 0x0a, 0x04, 0x50, 0x61, 0x74, 0x68, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x50,
	0x61, 0x74, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x49, 0x63, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x49, 0x63, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x50, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x50, 0x65, 0x72,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x6f, 0x72, 0x74, 0x4e,
	0x75, 0x6d, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x53, 0x6f, 0x72, 0x74, 0x4e, 0x75,
	0x6d, 0x12, 0x1e, 0x0a, 0x0a, 0x49, 0x73, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x49, 0x73, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x49, 0x73, 0x48, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x08, 0x49, 0x73, 0x48, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x12, 0x1e, 0x0a,
	0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x24, 0x0a,
	0x0d, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x43, 0x61, 0x63, 0x68, 0x65, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x43, 0x61, 0x63, 0x68, 0x65, 0x22, 0x57, 0x0a, 0x13, 0x53, 0x61, 0x76,
	0x65, 0x50, 0x65, 0x72, 0x6d, 0x52, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x45, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x07, 0x45, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x45, 0x72,
	0x72, 0x4d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x45, 0x72, 0x72, 0x4d,
	0x73, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x49, 0x64, 0x22, 0x21, 0x0a, 0x09, 0x50, 0x65, 0x72, 0x6d, 0x52, 0x65, 0x73, 0x49, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xbb, 0x03, 0x0a, 0x08, 0x53, 0x50, 0x65, 0x72, 0x6d, 0x52,
	0x65, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x52, 0x65, 0x73, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x52, 0x65, 0x73, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x50, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x50,
	0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x44, 0x65, 0x70, 0x74, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x44, 0x65, 0x70, 0x74, 0x68, 0x12, 0x10, 0x0a, 0x03, 0x4b, 0x65, 0x79, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x4b, 0x65, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x50, 0x61,
	0x74, 0x68, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x50, 0x61, 0x74, 0x68, 0x12, 0x12,
	0x0a, 0x04, 0x49, 0x63, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x49, 0x63,
	0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x6f, 0x72, 0x74, 0x4e, 0x75, 0x6d, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x07, 0x53, 0x6f, 0x72, 0x74, 0x4e, 0x75, 0x6d, 0x12, 0x1e, 0x0a, 0x0a,
	0x49, 0x73, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0a, 0x49, 0x73, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x12, 0x1a, 0x0a, 0x08,
	0x49, 0x73, 0x48, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08,
	0x49, 0x73, 0x48, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x43, 0x6f, 0x6d, 0x70,
	0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x43, 0x61, 0x63, 0x68, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x43,
	0x61, 0x63, 0x68, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x49, 0x73, 0x4c, 0x65, 0x61, 0x66, 0x18, 0x10,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x49, 0x73, 0x4c, 0x65, 0x61, 0x66, 0x12, 0x25, 0x0a, 0x08,
	0x43, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x18, 0x11, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x09,
	0x2e, 0x53, 0x50, 0x65, 0x72, 0x6d, 0x52, 0x65, 0x73, 0x52, 0x08, 0x43, 0x68, 0x69, 0x6c, 0x64,
	0x72, 0x65, 0x6e, 0x22, 0x47, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x1a, 0x0a, 0x08, 0x4f, 0x6e, 0x6c, 0x79, 0x4d, 0x65, 0x6e, 0x75, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x08, 0x4f, 0x6e, 0x6c, 0x79, 0x4d, 0x65, 0x6e, 0x75, 0x22, 0x85, 0x01, 0x0a,
	0x13, 0x51, 0x75, 0x65, 0x72, 0x79, 0x50, 0x65, 0x72, 0x6d, 0x52, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x4f, 0x6e, 0x6c, 0x79, 0x4d, 0x65, 0x6e, 0x75, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x08, 0x4f, 0x6e, 0x6c, 0x79, 0x4d, 0x65, 0x6e, 0x75, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x50, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61,
	0x6c, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x49, 0x6e, 0x69, 0x74, 0x69,
	0x61, 0x6c, 0x49, 0x64, 0x22, 0x57, 0x0a, 0x14, 0x51, 0x75, 0x65, 0x72, 0x79, 0x50, 0x65, 0x72,
	0x6d, 0x52, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x04,
	0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x53, 0x50, 0x65,
	0x72, 0x6d, 0x52, 0x65, 0x73, 0x52, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x49,
	0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x03,
	0x52, 0x0b, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x22, 0xeb, 0x02,
	0x0a, 0x0d, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x50, 0x65, 0x72, 0x6d, 0x52, 0x65, 0x73, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x52, 0x65, 0x73, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x52, 0x65, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x50, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x50, 0x69, 0x64, 0x12,
	0x10, 0x0a, 0x03, 0x4b, 0x65, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x4b, 0x65,
	0x79, 0x12, 0x12, 0x0a, 0x04, 0x50, 0x61, 0x74, 0x68, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x50, 0x61, 0x74, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x49, 0x63, 0x6f, 0x6e, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x49, 0x63, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x50, 0x65, 0x72,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x50,
	0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x6f, 0x72,
	0x74, 0x4e, 0x75, 0x6d, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x53, 0x6f, 0x72, 0x74,
	0x4e, 0x75, 0x6d, 0x12, 0x1e, 0x0a, 0x0a, 0x49, 0x73, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x49, 0x73, 0x45, 0x78, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x49, 0x73, 0x48, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x49, 0x73, 0x48, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x12,
	0x1e, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x24, 0x0a, 0x0d, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x43, 0x61, 0x63, 0x68, 0x65, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x43, 0x61, 0x63, 0x68, 0x65, 0x22, 0x3e, 0x0a, 0x14, 0x50,
	0x65, 0x72, 0x6d, 0x52, 0x65, 0x73, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x06, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x53, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x52, 0x06, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x22, 0x53, 0x0a, 0x15, 0x50,
	0x65, 0x72, 0x6d, 0x52, 0x65, 0x73, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x24, 0x0a, 0x05, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x50, 0x61, 0x67, 0x69,
	0x6e, 0x67, 0x50, 0x65, 0x72, 0x6d, 0x52, 0x65, 0x73, 0x52, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x22, 0x55, 0x0a, 0x15, 0x4d, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x73, 0x4f, 0x72, 0x64, 0x69, 0x6e,
	0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x44, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x44, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x32, 0x96, 0x0b, 0x0a, 0x0b, 0x52, 0x62, 0x61, 0x63,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x34, 0x0a, 0x09, 0x55, 0x73, 0x65, 0x72, 0x4c,
	0x6f, 0x67, 0x69, 0x6e, 0x12, 0x11, 0x2e, 0x52, 0x62, 0x61, 0x63, 0x4c, 0x6f, 0x67, 0x69, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x52, 0x62, 0x61, 0x63, 0x4c, 0x6f,
	0x67, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x20, 0x0a,
	0x0b, 0x47, 0x65, 0x74, 0x4a, 0x77, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x06, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x1a, 0x07, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x22, 0x00, 0x12,
	0x42, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x12, 0x12, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x52, 0x62, 0x61, 0x63, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x3d, 0x0a, 0x0c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x14, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x50, 0x65, 0x72, 0x6d, 0x52,
	0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x50, 0x65, 0x72, 0x6d, 0x52, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x33, 0x0a, 0x0e, 0x4d, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x73, 0x4f, 0x72, 0x64,
	0x69, 0x6e, 0x61, 0x6c, 0x12, 0x16, 0x2e, 0x4d, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x73, 0x4f, 0x72,
	0x64, 0x69, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x07, 0x2e, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x00, 0x12, 0x21, 0x0a, 0x0a, 0x44, 0x65, 0x70, 0x61, 0x72,
	0x74, 0x54, 0x72, 0x65, 0x65, 0x12, 0x06, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x09, 0x2e,
	0x52, 0x62, 0x61, 0x63, 0x54, 0x72, 0x65, 0x65, 0x22, 0x00, 0x12, 0x3d, 0x0a, 0x0c, 0x53, 0x61,
	0x76, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x44, 0x65, 0x70, 0x74, 0x12, 0x14, 0x2e, 0x53, 0x61, 0x76,
	0x65, 0x50, 0x65, 0x72, 0x6d, 0x44, 0x65, 0x70, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x15, 0x2e, 0x53, 0x61, 0x76, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x44, 0x65, 0x70, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x28, 0x0a, 0x0b, 0x47, 0x65, 0x74,
	0x50, 0x65, 0x72, 0x6d, 0x44, 0x65, 0x70, 0x74, 0x12, 0x0b, 0x2e, 0x50, 0x65, 0x72, 0x6d, 0x44,
	0x65, 0x70, 0x74, 0x49, 0x64, 0x1a, 0x0a, 0x2e, 0x53, 0x50, 0x65, 0x72, 0x6d, 0x44, 0x65, 0x70,
	0x74, 0x22, 0x00, 0x12, 0x28, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x65, 0x72,
	0x6d, 0x44, 0x65, 0x70, 0x74, 0x12, 0x0b, 0x2e, 0x50, 0x65, 0x72, 0x6d, 0x44, 0x65, 0x70, 0x74,
	0x49, 0x64, 0x1a, 0x07, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x00, 0x12, 0x3a, 0x0a,
	0x0b, 0x53, 0x61, 0x76, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x4a, 0x6f, 0x62, 0x12, 0x13, 0x2e, 0x53,
	0x61, 0x76, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x14, 0x2e, 0x53, 0x61, 0x76, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x4a, 0x6f, 0x62, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x25, 0x0a, 0x0a, 0x47, 0x65, 0x74,
	0x50, 0x65, 0x72, 0x6d, 0x4a, 0x6f, 0x62, 0x12, 0x0a, 0x2e, 0x50, 0x65, 0x72, 0x6d, 0x4a, 0x6f,
	0x62, 0x49, 0x64, 0x1a, 0x09, 0x2e, 0x53, 0x50, 0x65, 0x72, 0x6d, 0x4a, 0x6f, 0x62, 0x22, 0x00,
	0x12, 0x41, 0x0a, 0x10, 0x51, 0x75, 0x65, 0x72, 0x79, 0x50, 0x65, 0x72, 0x6d, 0x4a, 0x6f, 0x62,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x14, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x50, 0x65, 0x72, 0x6d,
	0x4a, 0x6f, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x50, 0x65, 0x72, 0x6d, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x26, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x65, 0x72,
	0x6d, 0x4a, 0x6f, 0x62, 0x12, 0x0a, 0x2e, 0x50, 0x65, 0x72, 0x6d, 0x4a, 0x6f, 0x62, 0x49, 0x64,
	0x1a, 0x07, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x00, 0x12, 0x3e, 0x0a, 0x0d, 0x50,
	0x61, 0x67, 0x69, 0x6e, 0x67, 0x50, 0x65, 0x72, 0x6d, 0x4a, 0x6f, 0x62, 0x12, 0x15, 0x2e, 0x50,
	0x65, 0x72, 0x6d, 0x4a, 0x6f, 0x62, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x50, 0x65, 0x72, 0x6d, 0x4a, 0x6f, 0x62, 0x50, 0x61, 0x67,
	0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x0c, 0x53,
	0x61, 0x76, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x12, 0x14, 0x2e, 0x53, 0x61,
	0x76, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x15, 0x2e, 0x53, 0x61, 0x76, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x28, 0x0a, 0x0b, 0x47, 0x65,
	0x74, 0x50, 0x65, 0x72, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x12, 0x0b, 0x2e, 0x50, 0x65, 0x72, 0x6d,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x1a, 0x0a, 0x2e, 0x53, 0x50, 0x65, 0x72, 0x6d, 0x55, 0x73,
	0x65, 0x72, 0x22, 0x00, 0x12, 0x28, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x65,
	0x72, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x12, 0x0b, 0x2e, 0x50, 0x65, 0x72, 0x6d, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x1a, 0x07, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x00, 0x12, 0x41,
	0x0a, 0x0e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x50, 0x65, 0x72, 0x6d, 0x55, 0x73, 0x65, 0x72,
	0x12, 0x16, 0x2e, 0x50, 0x65, 0x72, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x50, 0x61, 0x67, 0x69, 0x6e,
	0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x50, 0x65, 0x72, 0x6d, 0x55,
	0x73, 0x65, 0x72, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x3d, 0x0a, 0x0c, 0x53, 0x61, 0x76, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x52, 0x6f, 0x6c,
	0x65, 0x12, 0x14, 0x2e, 0x53, 0x61, 0x76, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x52, 0x6f, 0x6c, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x53, 0x61, 0x76, 0x65, 0x50, 0x65,
	0x72, 0x6d, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x36, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x15, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52,
	0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x07, 0x2e,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x00, 0x12, 0x28, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x50,
	0x65, 0x72, 0x6d, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x0b, 0x2e, 0x50, 0x65, 0x72, 0x6d, 0x52, 0x6f,
	0x6c, 0x65, 0x49, 0x64, 0x1a, 0x0a, 0x2e, 0x53, 0x50, 0x65, 0x72, 0x6d, 0x52, 0x6f, 0x6c, 0x65,
	0x22, 0x00, 0x12, 0x44, 0x0a, 0x11, 0x51, 0x75, 0x65, 0x72, 0x79, 0x50, 0x65, 0x72, 0x6d, 0x52,
	0x6f, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x15, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x50,
	0x65, 0x72, 0x6d, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16,
	0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x50, 0x65, 0x72, 0x6d, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x28, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x0b, 0x2e, 0x50, 0x65, 0x72,
	0x6d, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x1a, 0x07, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x22, 0x00, 0x12, 0x41, 0x0a, 0x0e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x50, 0x65, 0x72, 0x6d,
	0x52, 0x6f, 0x6c, 0x65, 0x12, 0x16, 0x2e, 0x50, 0x65, 0x72, 0x6d, 0x52, 0x6f, 0x6c, 0x65, 0x50,
	0x61, 0x67, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x50,
	0x65, 0x72, 0x6d, 0x52, 0x6f, 0x6c, 0x65, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x0b, 0x53, 0x61, 0x76, 0x65, 0x50, 0x65, 0x72,
	0x6d, 0x52, 0x65, 0x73, 0x12, 0x13, 0x2e, 0x53, 0x61, 0x76, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x52,
	0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x53, 0x61, 0x76, 0x65,
	0x50, 0x65, 0x72, 0x6d, 0x52, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x25, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x50, 0x65, 0x72, 0x6d, 0x52, 0x65, 0x73, 0x12,
	0x0a, 0x2e, 0x50, 0x65, 0x72, 0x6d, 0x52, 0x65, 0x73, 0x49, 0x64, 0x1a, 0x09, 0x2e, 0x53, 0x50,
	0x65, 0x72, 0x6d, 0x52, 0x65, 0x73, 0x22, 0x00, 0x12, 0x26, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x52, 0x65, 0x73, 0x12, 0x0a, 0x2e, 0x50, 0x65, 0x72, 0x6d,
	0x52, 0x65, 0x73, 0x49, 0x64, 0x1a, 0x07, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x00,
	0x42, 0x1f, 0x0a, 0x13, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x67,
	0x6f, 0x32, 0x6f, 0x2e, 0x72, 0x70, 0x63, 0x5a, 0x08, 0x2e, 0x2f, 0x3b, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_rbac_service_proto_rawDescOnce sync.Once
	file_rbac_service_proto_rawDescData = file_rbac_service_proto_rawDesc
)

func file_rbac_service_proto_rawDescGZIP() []byte {
	file_rbac_service_proto_rawDescOnce.Do(func() {
		file_rbac_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_rbac_service_proto_rawDescData)
	})
	return file_rbac_service_proto_rawDescData
}

var file_rbac_service_proto_msgTypes = make([]protoimpl.MessageInfo, 52)
var file_rbac_service_proto_goTypes = []interface{}{
	(*RbacLoginRequest)(nil),         // 0: RbacLoginRequest
	(*RbacLoginResponse)(nil),        // 1: RbacLoginResponse
	(*RbacUserResourceResponse)(nil), // 2: RbacUserResourceResponse
	(*SUserRes)(nil),                 // 3: SUserRes
	(*RoleId)(nil),                   // 4: RoleId
	(*UserId)(nil),                   // 5: UserId
	(*RbacTree)(nil),                 // 6: RbacTree
	(*SavePermDeptRequest)(nil),      // 7: SavePermDeptRequest
	(*SavePermDeptResponse)(nil),     // 8: SavePermDeptResponse
	(*PermDeptId)(nil),               // 9: PermDeptId
	(*SPermDept)(nil),                // 10: SPermDept
	(*QueryPermDeptRequest)(nil),     // 11: QueryPermDeptRequest
	(*QueryPermDeptResponse)(nil),    // 12: QueryPermDeptResponse
	(*SavePermJobRequest)(nil),       // 13: SavePermJobRequest
	(*SavePermJobResponse)(nil),      // 14: SavePermJobResponse
	(*PermJobId)(nil),                // 15: PermJobId
	(*SPermJob)(nil),                 // 16: SPermJob
	(*QueryPermJobRequest)(nil),      // 17: QueryPermJobRequest
	(*QueryPermJobResponse)(nil),     // 18: QueryPermJobResponse
	(*PagingPermJob)(nil),            // 19: PagingPermJob
	(*PermJobPagingRequest)(nil),     // 20: PermJobPagingRequest
	(*PermJobPagingResponse)(nil),    // 21: PermJobPagingResponse
	(*SavePermUserRequest)(nil),      // 22: SavePermUserRequest
	(*SavePermUserResponse)(nil),     // 23: SavePermUserResponse
	(*PermUserId)(nil),               // 24: PermUserId
	(*SPermUser)(nil),                // 25: SPermUser
	(*QueryPermUserRequest)(nil),     // 26: QueryPermUserRequest
	(*QueryPermUserResponse)(nil),    // 27: QueryPermUserResponse
	(*PagingPermUser)(nil),           // 28: PagingPermUser
	(*PermUserPagingRequest)(nil),    // 29: PermUserPagingRequest
	(*PermUserPagingResponse)(nil),   // 30: PermUserPagingResponse
	(*SavePermRoleRequest)(nil),      // 31: SavePermRoleRequest
	(*UpdateRoleResRequest)(nil),     // 32: UpdateRoleResRequest
	(*SavePermRoleResponse)(nil),     // 33: SavePermRoleResponse
	(*PermRoleId)(nil),               // 34: PermRoleId
	(*SPermRole)(nil),                // 35: SPermRole
	(*QueryPermRoleRequest)(nil),     // 36: QueryPermRoleRequest
	(*QueryPermRoleResponse)(nil),    // 37: QueryPermRoleResponse
	(*PagingPermRole)(nil),           // 38: PagingPermRole
	(*PermRolePagingRequest)(nil),    // 39: PermRolePagingRequest
	(*PermRolePagingResponse)(nil),   // 40: PermRolePagingResponse
	(*SavePermResRequest)(nil),       // 41: SavePermResRequest
	(*SavePermResResponse)(nil),      // 42: SavePermResResponse
	(*PermResId)(nil),                // 43: PermResId
	(*SPermRes)(nil),                 // 44: SPermRes
	(*GetUserResRequest)(nil),        // 45: GetUserResRequest
	(*QueryPermResRequest)(nil),      // 46: QueryPermResRequest
	(*QueryPermResResponse)(nil),     // 47: QueryPermResResponse
	(*PagingPermRes)(nil),            // 48: PagingPermRes
	(*PermResPagingRequest)(nil),     // 49: PermResPagingRequest
	(*PermResPagingResponse)(nil),    // 50: PermResPagingResponse
	(*MoveResOrdinalRequest)(nil),    // 51: MoveResOrdinalRequest
	(*SPagingParams)(nil),            // 52: SPagingParams
	(*Empty)(nil),                    // 53: Empty
	(*String)(nil),                   // 54: String
	(*Result)(nil),                   // 55: Result
}
var file_rbac_service_proto_depIdxs = []int32{
	3,  // 0: RbacUserResourceResponse.Resources:type_name -> SUserRes
	3,  // 1: SUserRes.Children:type_name -> SUserRes
	6,  // 2: RbacTree.Children:type_name -> RbacTree
	10, // 3: QueryPermDeptResponse.List:type_name -> SPermDept
	16, // 4: QueryPermJobResponse.List:type_name -> SPermJob
	52, // 5: PermJobPagingRequest.Params:type_name -> SPagingParams
	19, // 6: PermJobPagingResponse.Value:type_name -> PagingPermJob
	25, // 7: QueryPermUserResponse.List:type_name -> SPermUser
	52, // 8: PermUserPagingRequest.Params:type_name -> SPagingParams
	28, // 9: PermUserPagingResponse.Value:type_name -> PagingPermUser
	35, // 10: QueryPermRoleResponse.List:type_name -> SPermRole
	52, // 11: PermRolePagingRequest.Params:type_name -> SPagingParams
	38, // 12: PermRolePagingResponse.Value:type_name -> PagingPermRole
	44, // 13: SPermRes.Children:type_name -> SPermRes
	44, // 14: QueryPermResResponse.List:type_name -> SPermRes
	52, // 15: PermResPagingRequest.Params:type_name -> SPagingParams
	48, // 16: PermResPagingResponse.Value:type_name -> PagingPermRes
	0,  // 17: RbacService.UserLogin:input_type -> RbacLoginRequest
	53, // 18: RbacService.GetJwtToken:input_type -> Empty
	45, // 19: RbacService.GetUserResource:input_type -> GetUserResRequest
	46, // 20: RbacService.QueryResList:input_type -> QueryPermResRequest
	51, // 21: RbacService.MoveResOrdinal:input_type -> MoveResOrdinalRequest
	53, // 22: RbacService.DepartTree:input_type -> Empty
	7,  // 23: RbacService.SavePermDept:input_type -> SavePermDeptRequest
	9,  // 24: RbacService.GetPermDept:input_type -> PermDeptId
	9,  // 25: RbacService.DeletePermDept:input_type -> PermDeptId
	13, // 26: RbacService.SavePermJob:input_type -> SavePermJobRequest
	15, // 27: RbacService.GetPermJob:input_type -> PermJobId
	17, // 28: RbacService.QueryPermJobList:input_type -> QueryPermJobRequest
	15, // 29: RbacService.DeletePermJob:input_type -> PermJobId
	20, // 30: RbacService.PagingPermJob:input_type -> PermJobPagingRequest
	22, // 31: RbacService.SavePermUser:input_type -> SavePermUserRequest
	24, // 32: RbacService.GetPermUser:input_type -> PermUserId
	24, // 33: RbacService.DeletePermUser:input_type -> PermUserId
	29, // 34: RbacService.PagingPermUser:input_type -> PermUserPagingRequest
	31, // 35: RbacService.SavePermRole:input_type -> SavePermRoleRequest
	32, // 36: RbacService.UpdateRoleResource:input_type -> UpdateRoleResRequest
	34, // 37: RbacService.GetPermRole:input_type -> PermRoleId
	36, // 38: RbacService.QueryPermRoleList:input_type -> QueryPermRoleRequest
	34, // 39: RbacService.DeletePermRole:input_type -> PermRoleId
	39, // 40: RbacService.PagingPermRole:input_type -> PermRolePagingRequest
	41, // 41: RbacService.SavePermRes:input_type -> SavePermResRequest
	43, // 42: RbacService.GetPermRes:input_type -> PermResId
	43, // 43: RbacService.DeletePermRes:input_type -> PermResId
	1,  // 44: RbacService.UserLogin:output_type -> RbacLoginResponse
	54, // 45: RbacService.GetJwtToken:output_type -> String
	2,  // 46: RbacService.GetUserResource:output_type -> RbacUserResourceResponse
	47, // 47: RbacService.QueryResList:output_type -> QueryPermResResponse
	55, // 48: RbacService.MoveResOrdinal:output_type -> Result
	6,  // 49: RbacService.DepartTree:output_type -> RbacTree
	8,  // 50: RbacService.SavePermDept:output_type -> SavePermDeptResponse
	10, // 51: RbacService.GetPermDept:output_type -> SPermDept
	55, // 52: RbacService.DeletePermDept:output_type -> Result
	14, // 53: RbacService.SavePermJob:output_type -> SavePermJobResponse
	16, // 54: RbacService.GetPermJob:output_type -> SPermJob
	18, // 55: RbacService.QueryPermJobList:output_type -> QueryPermJobResponse
	55, // 56: RbacService.DeletePermJob:output_type -> Result
	21, // 57: RbacService.PagingPermJob:output_type -> PermJobPagingResponse
	23, // 58: RbacService.SavePermUser:output_type -> SavePermUserResponse
	25, // 59: RbacService.GetPermUser:output_type -> SPermUser
	55, // 60: RbacService.DeletePermUser:output_type -> Result
	30, // 61: RbacService.PagingPermUser:output_type -> PermUserPagingResponse
	33, // 62: RbacService.SavePermRole:output_type -> SavePermRoleResponse
	55, // 63: RbacService.UpdateRoleResource:output_type -> Result
	35, // 64: RbacService.GetPermRole:output_type -> SPermRole
	37, // 65: RbacService.QueryPermRoleList:output_type -> QueryPermRoleResponse
	55, // 66: RbacService.DeletePermRole:output_type -> Result
	40, // 67: RbacService.PagingPermRole:output_type -> PermRolePagingResponse
	42, // 68: RbacService.SavePermRes:output_type -> SavePermResResponse
	44, // 69: RbacService.GetPermRes:output_type -> SPermRes
	55, // 70: RbacService.DeletePermRes:output_type -> Result
	44, // [44:71] is the sub-list for method output_type
	17, // [17:44] is the sub-list for method input_type
	17, // [17:17] is the sub-list for extension type_name
	17, // [17:17] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_rbac_service_proto_init() }
func file_rbac_service_proto_init() {
	if File_rbac_service_proto != nil {
		return
	}
	file_global_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_rbac_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RbacLoginRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rbac_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RbacLoginResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rbac_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RbacUserResourceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rbac_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SUserRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rbac_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rbac_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rbac_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RbacTree); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rbac_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SavePermDeptRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rbac_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SavePermDeptResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rbac_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PermDeptId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rbac_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SPermDept); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rbac_service_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryPermDeptRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rbac_service_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryPermDeptResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rbac_service_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SavePermJobRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rbac_service_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SavePermJobResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rbac_service_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PermJobId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rbac_service_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SPermJob); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rbac_service_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryPermJobRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rbac_service_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryPermJobResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rbac_service_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PagingPermJob); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rbac_service_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PermJobPagingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rbac_service_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PermJobPagingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rbac_service_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SavePermUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rbac_service_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SavePermUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rbac_service_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PermUserId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rbac_service_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SPermUser); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rbac_service_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryPermUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rbac_service_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryPermUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rbac_service_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PagingPermUser); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rbac_service_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PermUserPagingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rbac_service_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PermUserPagingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rbac_service_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SavePermRoleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rbac_service_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateRoleResRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rbac_service_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SavePermRoleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rbac_service_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PermRoleId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rbac_service_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SPermRole); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rbac_service_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryPermRoleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rbac_service_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryPermRoleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rbac_service_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PagingPermRole); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rbac_service_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PermRolePagingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rbac_service_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PermRolePagingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rbac_service_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SavePermResRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rbac_service_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SavePermResResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rbac_service_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PermResId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rbac_service_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SPermRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rbac_service_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserResRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rbac_service_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryPermResRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rbac_service_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryPermResResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rbac_service_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PagingPermRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rbac_service_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PermResPagingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rbac_service_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PermResPagingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rbac_service_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MoveResOrdinalRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_rbac_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   52,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_rbac_service_proto_goTypes,
		DependencyIndexes: file_rbac_service_proto_depIdxs,
		MessageInfos:      file_rbac_service_proto_msgTypes,
	}.Build()
	File_rbac_service_proto = out.File
	file_rbac_service_proto_rawDesc = nil
	file_rbac_service_proto_goTypes = nil
	file_rbac_service_proto_depIdxs = nil
}
