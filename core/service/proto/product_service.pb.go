// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.12.4
// source: product_service.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CategoryIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=Id,proto3" json:"Id"`
}

func (x *CategoryIdRequest) Reset() {
	*x = CategoryIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CategoryIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CategoryIdRequest) ProtoMessage() {}

func (x *CategoryIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_product_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CategoryIdRequest.ProtoReflect.Descriptor instead.
func (*CategoryIdRequest) Descriptor() ([]byte, []int) {
	return file_product_service_proto_rawDescGZIP(), []int{0}
}

func (x *CategoryIdRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeleteProductRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SellerId  int64 `protobuf:"varint,1,opt,name=SellerId,proto3" json:"SellerId"`
	ProductId int64 `protobuf:"varint,2,opt,name=ProductId,proto3" json:"ProductId"`
}

func (x *DeleteProductRequest) Reset() {
	*x = DeleteProductRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteProductRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteProductRequest) ProtoMessage() {}

func (x *DeleteProductRequest) ProtoReflect() protoreflect.Message {
	mi := &file_product_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteProductRequest.ProtoReflect.Descriptor instead.
func (*DeleteProductRequest) Descriptor() ([]byte, []int) {
	return file_product_service_proto_rawDescGZIP(), []int{1}
}

func (x *DeleteProductRequest) GetSellerId() int64 {
	if x != nil {
		return x.SellerId
	}
	return 0
}

func (x *DeleteProductRequest) GetProductId() int64 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

type ProductId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value int64 `protobuf:"varint,1,opt,name=Value,proto3" json:"Value"`
}

func (x *ProductId) Reset() {
	*x = ProductId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductId) ProtoMessage() {}

func (x *ProductId) ProtoReflect() protoreflect.Message {
	mi := &file_product_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductId.ProtoReflect.Descriptor instead.
func (*ProductId) Descriptor() ([]byte, []int) {
	return file_product_service_proto_rawDescGZIP(), []int{2}
}

func (x *ProductId) GetValue() int64 {
	if x != nil {
		return x.Value
	}
	return 0
}

type ProductModelId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value int64 `protobuf:"varint,1,opt,name=Value,proto3" json:"Value"`
}

func (x *ProductModelId) Reset() {
	*x = ProductModelId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductModelId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductModelId) ProtoMessage() {}

func (x *ProductModelId) ProtoReflect() protoreflect.Message {
	mi := &file_product_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductModelId.ProtoReflect.Descriptor instead.
func (*ProductModelId) Descriptor() ([]byte, []int) {
	return file_product_service_proto_rawDescGZIP(), []int{3}
}

func (x *ProductModelId) GetValue() int64 {
	if x != nil {
		return x.Value
	}
	return 0
}

type ProductAttrId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value int64 `protobuf:"varint,1,opt,name=Value,proto3" json:"Value"`
}

func (x *ProductAttrId) Reset() {
	*x = ProductAttrId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductAttrId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductAttrId) ProtoMessage() {}

func (x *ProductAttrId) ProtoReflect() protoreflect.Message {
	mi := &file_product_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductAttrId.ProtoReflect.Descriptor instead.
func (*ProductAttrId) Descriptor() ([]byte, []int) {
	return file_product_service_proto_rawDescGZIP(), []int{4}
}

func (x *ProductAttrId) GetValue() int64 {
	if x != nil {
		return x.Value
	}
	return 0
}

type ProductAttrItemId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value int64 `protobuf:"varint,1,opt,name=Value,proto3" json:"Value"`
}

func (x *ProductAttrItemId) Reset() {
	*x = ProductAttrItemId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductAttrItemId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductAttrItemId) ProtoMessage() {}

func (x *ProductAttrItemId) ProtoReflect() protoreflect.Message {
	mi := &file_product_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductAttrItemId.ProtoReflect.Descriptor instead.
func (*ProductAttrItemId) Descriptor() ([]byte, []int) {
	return file_product_service_proto_rawDescGZIP(), []int{5}
}

func (x *ProductAttrItemId) GetValue() int64 {
	if x != nil {
		return x.Value
	}
	return 0
}

type ProductModelListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value []*SProductModel `protobuf:"bytes,1,rep,name=Value,proto3" json:"Value"`
}

func (x *ProductModelListResponse) Reset() {
	*x = ProductModelListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductModelListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductModelListResponse) ProtoMessage() {}

func (x *ProductModelListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_product_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductModelListResponse.ProtoReflect.Descriptor instead.
func (*ProductModelListResponse) Descriptor() ([]byte, []int) {
	return file_product_service_proto_rawDescGZIP(), []int{6}
}

func (x *ProductModelListResponse) GetValue() []*SProductModel {
	if x != nil {
		return x.Value
	}
	return nil
}

// 产品模型
type SProductModel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 编号
	Id int64 `protobuf:"varint,1,opt,name=Id,proto3" json:"Id"`
	// 名称
	Name string `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name"`
	// 属性字符
	AttrStr string `protobuf:"bytes,3,opt,name=AttrStr,proto3" json:"AttrStr"`
	// 规格字符
	SpecStr string `protobuf:"bytes,4,opt,name=SpecStr,proto3" json:"SpecStr"`
	// 属性
	Attrs []*SProductAttr `protobuf:"bytes,5,rep,name=Attrs,proto3" json:"Attrs"`
	// 规格
	Specs []*SProductSpec `protobuf:"bytes,6,rep,name=Specs,proto3" json:"Specs"`
	// 关联品牌
	Brands []*SProductBrand `protobuf:"bytes,7,rep,name=Brands,proto3" json:"Brands"`
	// 是否启用
	Enabled int32 `protobuf:"varint,8,opt,name=Enabled,proto3" json:"Enabled"`
}

func (x *SProductModel) Reset() {
	*x = SProductModel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SProductModel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SProductModel) ProtoMessage() {}

func (x *SProductModel) ProtoReflect() protoreflect.Message {
	mi := &file_product_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SProductModel.ProtoReflect.Descriptor instead.
func (*SProductModel) Descriptor() ([]byte, []int) {
	return file_product_service_proto_rawDescGZIP(), []int{7}
}

func (x *SProductModel) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SProductModel) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SProductModel) GetAttrStr() string {
	if x != nil {
		return x.AttrStr
	}
	return ""
}

func (x *SProductModel) GetSpecStr() string {
	if x != nil {
		return x.SpecStr
	}
	return ""
}

func (x *SProductModel) GetAttrs() []*SProductAttr {
	if x != nil {
		return x.Attrs
	}
	return nil
}

func (x *SProductModel) GetSpecs() []*SProductSpec {
	if x != nil {
		return x.Specs
	}
	return nil
}

func (x *SProductModel) GetBrands() []*SProductBrand {
	if x != nil {
		return x.Brands
	}
	return nil
}

func (x *SProductModel) GetEnabled() int32 {
	if x != nil {
		return x.Enabled
	}
	return 0
}

// 产品模型属性
type SProductAttr struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 编号
	Id int64 `protobuf:"varint,1,opt,name=Id,proto3" json:"Id"`
	// 属性名称
	Name string `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name"`
	// 是否作为筛选条件
	IsFilter int32 `protobuf:"varint,3,opt,name=IsFilter,proto3" json:"IsFilter"`
	// 是否多选
	MultiCheck int32 `protobuf:"varint,4,opt,name=MultiCheck,proto3" json:"MultiCheck"`
	// 排列序号
	SortNum int32 `protobuf:"varint,5,opt,name=SortNum,proto3" json:"SortNum"`
	// 属性项值
	ItemValues string `protobuf:"bytes,6,opt,name=ItemValues,proto3" json:"ItemValues"`
	// 属性项
	Items []*SProductAttrItem `protobuf:"bytes,7,rep,name=Items,proto3" json:"Items"`
}

func (x *SProductAttr) Reset() {
	*x = SProductAttr{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SProductAttr) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SProductAttr) ProtoMessage() {}

func (x *SProductAttr) ProtoReflect() protoreflect.Message {
	mi := &file_product_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SProductAttr.ProtoReflect.Descriptor instead.
func (*SProductAttr) Descriptor() ([]byte, []int) {
	return file_product_service_proto_rawDescGZIP(), []int{8}
}

func (x *SProductAttr) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SProductAttr) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SProductAttr) GetIsFilter() int32 {
	if x != nil {
		return x.IsFilter
	}
	return 0
}

func (x *SProductAttr) GetMultiCheck() int32 {
	if x != nil {
		return x.MultiCheck
	}
	return 0
}

func (x *SProductAttr) GetSortNum() int32 {
	if x != nil {
		return x.SortNum
	}
	return 0
}

func (x *SProductAttr) GetItemValues() string {
	if x != nil {
		return x.ItemValues
	}
	return ""
}

func (x *SProductAttr) GetItems() []*SProductAttrItem {
	if x != nil {
		return x.Items
	}
	return nil
}

// 产品模型属性项
type SProductAttrItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 编号
	Id int64 `protobuf:"varint,1,opt,name=Id,proto3" json:"Id"`
	// 属性值
	Value string `protobuf:"bytes,2,opt,name=Value,proto3" json:"Value"`
	// 排列序号
	SortNum int32 `protobuf:"varint,3,opt,name=SortNum,proto3" json:"SortNum"`
}

func (x *SProductAttrItem) Reset() {
	*x = SProductAttrItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SProductAttrItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SProductAttrItem) ProtoMessage() {}

func (x *SProductAttrItem) ProtoReflect() protoreflect.Message {
	mi := &file_product_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SProductAttrItem.ProtoReflect.Descriptor instead.
func (*SProductAttrItem) Descriptor() ([]byte, []int) {
	return file_product_service_proto_rawDescGZIP(), []int{9}
}

func (x *SProductAttrItem) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SProductAttrItem) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *SProductAttrItem) GetSortNum() int32 {
	if x != nil {
		return x.SortNum
	}
	return 0
}

// 产品属性值
type SProductAttrValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 编号
	Id int64 `protobuf:"varint,1,opt,name=Id,proto3" json:"Id"`
	// 属性编号
	AttrId int64 `protobuf:"varint,2,opt,name=AttrId,proto3" json:"AttrId"`
	// 属性名称
	AttrName string `protobuf:"bytes,3,opt,name=AttrName,proto3" json:"AttrName"`
	// 属性值
	AttrData string `protobuf:"bytes,4,opt,name=AttrData,proto3" json:"AttrData"`
	// 属性文本
	AttrWord string `protobuf:"bytes,5,opt,name=AttrWord,proto3" json:"AttrWord"`
}

func (x *SProductAttrValue) Reset() {
	*x = SProductAttrValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SProductAttrValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SProductAttrValue) ProtoMessage() {}

func (x *SProductAttrValue) ProtoReflect() protoreflect.Message {
	mi := &file_product_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SProductAttrValue.ProtoReflect.Descriptor instead.
func (*SProductAttrValue) Descriptor() ([]byte, []int) {
	return file_product_service_proto_rawDescGZIP(), []int{10}
}

func (x *SProductAttrValue) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SProductAttrValue) GetAttrId() int64 {
	if x != nil {
		return x.AttrId
	}
	return 0
}

func (x *SProductAttrValue) GetAttrName() string {
	if x != nil {
		return x.AttrName
	}
	return ""
}

func (x *SProductAttrValue) GetAttrData() string {
	if x != nil {
		return x.AttrData
	}
	return ""
}

func (x *SProductAttrValue) GetAttrWord() string {
	if x != nil {
		return x.AttrWord
	}
	return ""
}

// 产品模型规格
type SProductSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 编号
	Id int64 `protobuf:"varint,1,opt,name=Id,proto3" json:"Id"`
	// 规格名称
	Name string `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name"`
	// 排列序号
	SortNum int32 `protobuf:"varint,3,opt,name=SortNum,proto3" json:"SortNum"`
	// 规格项值
	ItemValues string `protobuf:"bytes,4,opt,name=ItemValues,proto3" json:"ItemValues"`
	// 规格项
	Items []*SProductSpecItem `protobuf:"bytes,5,rep,name=Items,proto3" json:"Items"`
}

func (x *SProductSpec) Reset() {
	*x = SProductSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SProductSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SProductSpec) ProtoMessage() {}

func (x *SProductSpec) ProtoReflect() protoreflect.Message {
	mi := &file_product_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SProductSpec.ProtoReflect.Descriptor instead.
func (*SProductSpec) Descriptor() ([]byte, []int) {
	return file_product_service_proto_rawDescGZIP(), []int{11}
}

func (x *SProductSpec) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SProductSpec) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SProductSpec) GetSortNum() int32 {
	if x != nil {
		return x.SortNum
	}
	return 0
}

func (x *SProductSpec) GetItemValues() string {
	if x != nil {
		return x.ItemValues
	}
	return ""
}

func (x *SProductSpec) GetItems() []*SProductSpecItem {
	if x != nil {
		return x.Items
	}
	return nil
}

// 规格项
type SProductSpecItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 编号
	Id int64 `protobuf:"varint,1,opt,name=Id,proto3" json:"Id"`
	// 规格项值
	Value string `protobuf:"bytes,2,opt,name=Value,proto3" json:"Value"`
	// 规格项颜色
	Color string `protobuf:"bytes,3,opt,name=Color,proto3" json:"Color"`
	// 排列序号
	SortNum int32 `protobuf:"varint,4,opt,name=SortNum,proto3" json:"SortNum"`
}

func (x *SProductSpecItem) Reset() {
	*x = SProductSpecItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_service_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SProductSpecItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SProductSpecItem) ProtoMessage() {}

func (x *SProductSpecItem) ProtoReflect() protoreflect.Message {
	mi := &file_product_service_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SProductSpecItem.ProtoReflect.Descriptor instead.
func (*SProductSpecItem) Descriptor() ([]byte, []int) {
	return file_product_service_proto_rawDescGZIP(), []int{12}
}

func (x *SProductSpecItem) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SProductSpecItem) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *SProductSpecItem) GetColor() string {
	if x != nil {
		return x.Color
	}
	return ""
}

func (x *SProductSpecItem) GetSortNum() int32 {
	if x != nil {
		return x.SortNum
	}
	return 0
}

type ProductBrandListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value []*SProductBrand `protobuf:"bytes,1,rep,name=Value,proto3" json:"Value"`
}

func (x *ProductBrandListResponse) Reset() {
	*x = ProductBrandListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_service_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductBrandListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductBrandListResponse) ProtoMessage() {}

func (x *ProductBrandListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_product_service_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductBrandListResponse.ProtoReflect.Descriptor instead.
func (*ProductBrandListResponse) Descriptor() ([]byte, []int) {
	return file_product_service_proto_rawDescGZIP(), []int{13}
}

func (x *ProductBrandListResponse) GetValue() []*SProductBrand {
	if x != nil {
		return x.Value
	}
	return nil
}

// 品牌
type SProductBrand struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 编号
	Id int64 `protobuf:"varint,1,opt,name=Id,proto3" json:"Id"`
	// 品牌名称
	Name string `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name"`
	// 品牌图片
	Image string `protobuf:"bytes,3,opt,name=Image,proto3" json:"Image"`
	// 品牌网址
	SiteUrl string `protobuf:"bytes,4,opt,name=SiteUrl,proto3" json:"SiteUrl"`
	// 介绍
	Introduce string `protobuf:"bytes,5,opt,name=Introduce,proto3" json:"Introduce"`
	// 是否审核
	ReviewState int32 `protobuf:"varint,6,opt,name=ReviewState,proto3" json:"ReviewState"`
	// 审核意见
	ReviewRemark string `protobuf:"bytes,7,opt,name=ReviewRemark,proto3" json:"ReviewRemark"`
	// 是否启用
	Enabled int32 `protobuf:"varint,8,opt,name=Enabled,proto3" json:"Enabled"`
	// 加入时间
	CreateTime int64 `protobuf:"varint,9,opt,name=CreateTime,proto3" json:"CreateTime"`
}

func (x *SProductBrand) Reset() {
	*x = SProductBrand{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_service_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SProductBrand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SProductBrand) ProtoMessage() {}

func (x *SProductBrand) ProtoReflect() protoreflect.Message {
	mi := &file_product_service_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SProductBrand.ProtoReflect.Descriptor instead.
func (*SProductBrand) Descriptor() ([]byte, []int) {
	return file_product_service_proto_rawDescGZIP(), []int{14}
}

func (x *SProductBrand) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SProductBrand) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SProductBrand) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *SProductBrand) GetSiteUrl() string {
	if x != nil {
		return x.SiteUrl
	}
	return ""
}

func (x *SProductBrand) GetIntroduce() string {
	if x != nil {
		return x.Introduce
	}
	return ""
}

func (x *SProductBrand) GetReviewState() int32 {
	if x != nil {
		return x.ReviewState
	}
	return 0
}

func (x *SProductBrand) GetReviewRemark() string {
	if x != nil {
		return x.ReviewRemark
	}
	return ""
}

func (x *SProductBrand) GetEnabled() int32 {
	if x != nil {
		return x.Enabled
	}
	return 0
}

func (x *SProductBrand) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

// 商品分类
type SProductCategory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 编号
	Id int64 `protobuf:"varint,1,opt,name=Id,proto3" json:"Id"`
	// 上级分类
	ParentId int64 `protobuf:"varint,2,opt,name=ParentId,proto3" json:"ParentId"`
	// 产品模型
	ModelId int64 `protobuf:"varint,3,opt,name=ModelId,proto3" json:"ModelId"`
	// 优先级
	Priority int32 `protobuf:"varint,4,opt,name=Priority,proto3" json:"Priority"`
	// 分类名称
	Name string `protobuf:"bytes,5,opt,name=Name,proto3" json:"Name"`
	// * 是否为虚拟分类
	IsVirtual bool `protobuf:"varint,6,opt,name=IsVirtual,proto3" json:"IsVirtual"`
	// * 分类链接地址
	CategoryUrl string `protobuf:"bytes,7,opt,name=CategoryUrl,proto3" json:"CategoryUrl"`
	// 虚拟分类跳转地址
	RedirectUrl string `protobuf:"bytes,18,opt,name=RedirectUrl,proto3" json:"RedirectUrl"`
	// * 图标
	Icon string `protobuf:"bytes,8,opt,name=Icon,proto3" json:"Icon"`
	// * 图标坐标
	IconPoint string `protobuf:"bytes,9,opt,name=IconPoint,proto3" json:"IconPoint"`
	// * 分类层级
	Level int32 `protobuf:"varint,10,opt,name=Level,proto3" json:"Level"`
	// * 序号
	SortNum int32 `protobuf:"varint,11,opt,name=SortNum,proto3" json:"SortNum"`
	// * 是否楼层显示
	FloorShow bool `protobuf:"varint,12,opt,name=FloorShow,proto3" json:"FloorShow"`
	// * 是否启用
	Enabled bool `protobuf:"varint,13,opt,name=Enabled,proto3" json:"Enabled"`
	// * 创建时间
	CreateTime int64 `protobuf:"varint,14,opt,name=CreateTime,proto3" json:"CreateTime"`
	// 选项参数
	Options map[string]string `protobuf:"bytes,15,rep,name=Options,proto3" json:"Options" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// 关联品牌
	Brands []*SProductBrand `protobuf:"bytes,16,rep,name=Brands,proto3" json:"Brands"`
	// * 子分类
	Children []*SProductCategory `protobuf:"bytes,17,rep,name=Children,proto3" json:"Children"`
}

func (x *SProductCategory) Reset() {
	*x = SProductCategory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_service_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SProductCategory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SProductCategory) ProtoMessage() {}

func (x *SProductCategory) ProtoReflect() protoreflect.Message {
	mi := &file_product_service_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SProductCategory.ProtoReflect.Descriptor instead.
func (*SProductCategory) Descriptor() ([]byte, []int) {
	return file_product_service_proto_rawDescGZIP(), []int{15}
}

func (x *SProductCategory) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SProductCategory) GetParentId() int64 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

func (x *SProductCategory) GetModelId() int64 {
	if x != nil {
		return x.ModelId
	}
	return 0
}

func (x *SProductCategory) GetPriority() int32 {
	if x != nil {
		return x.Priority
	}
	return 0
}

func (x *SProductCategory) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SProductCategory) GetIsVirtual() bool {
	if x != nil {
		return x.IsVirtual
	}
	return false
}

func (x *SProductCategory) GetCategoryUrl() string {
	if x != nil {
		return x.CategoryUrl
	}
	return ""
}

func (x *SProductCategory) GetRedirectUrl() string {
	if x != nil {
		return x.RedirectUrl
	}
	return ""
}

func (x *SProductCategory) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *SProductCategory) GetIconPoint() string {
	if x != nil {
		return x.IconPoint
	}
	return ""
}

func (x *SProductCategory) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *SProductCategory) GetSortNum() int32 {
	if x != nil {
		return x.SortNum
	}
	return 0
}

func (x *SProductCategory) GetFloorShow() bool {
	if x != nil {
		return x.FloorShow
	}
	return false
}

func (x *SProductCategory) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *SProductCategory) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *SProductCategory) GetOptions() map[string]string {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *SProductCategory) GetBrands() []*SProductBrand {
	if x != nil {
		return x.Brands
	}
	return nil
}

func (x *SProductCategory) GetChildren() []*SProductCategory {
	if x != nil {
		return x.Children
	}
	return nil
}

// 保存分类请求
type SaveProductCategoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 编号
	Id int64 `protobuf:"varint,1,opt,name=Id,proto3" json:"Id"`
	// 上级分类
	ParentId int64 `protobuf:"varint,2,opt,name=ParentId,proto3" json:"ParentId"`
	// 产品模型
	ModelId int64 `protobuf:"varint,3,opt,name=ModelId,proto3" json:"ModelId"`
	// 优先级
	Priority int32 `protobuf:"varint,4,opt,name=Priority,proto3" json:"Priority"`
	// 分类名称
	Name string `protobuf:"bytes,5,opt,name=Name,proto3" json:"Name"`
	// * 是否为虚拟分类
	IsVirtual bool `protobuf:"varint,6,opt,name=IsVirtual,proto3" json:"IsVirtual"`
	// * 分类链接地址
	CategoryUrl string `protobuf:"bytes,7,opt,name=CategoryUrl,proto3" json:"CategoryUrl"`
	// 虚拟分类跳转地址
	RedirectUrl string `protobuf:"bytes,18,opt,name=RedirectUrl,proto3" json:"RedirectUrl"`
	// * 图标
	Icon string `protobuf:"bytes,8,opt,name=Icon,proto3" json:"Icon"`
	// * 图标坐标
	IconPoint string `protobuf:"bytes,9,opt,name=IconPoint,proto3" json:"IconPoint"`
	// * 序号
	SortNum int32 `protobuf:"varint,11,opt,name=SortNum,proto3" json:"SortNum"`
	// * 是否楼层显示
	FloorShow bool `protobuf:"varint,12,opt,name=FloorShow,proto3" json:"FloorShow"`
	// * 是否启用
	Enabled bool `protobuf:"varint,13,opt,name=Enabled,proto3" json:"Enabled"`
}

func (x *SaveProductCategoryRequest) Reset() {
	*x = SaveProductCategoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_service_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveProductCategoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveProductCategoryRequest) ProtoMessage() {}

func (x *SaveProductCategoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_product_service_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveProductCategoryRequest.ProtoReflect.Descriptor instead.
func (*SaveProductCategoryRequest) Descriptor() ([]byte, []int) {
	return file_product_service_proto_rawDescGZIP(), []int{16}
}

func (x *SaveProductCategoryRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SaveProductCategoryRequest) GetParentId() int64 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

func (x *SaveProductCategoryRequest) GetModelId() int64 {
	if x != nil {
		return x.ModelId
	}
	return 0
}

func (x *SaveProductCategoryRequest) GetPriority() int32 {
	if x != nil {
		return x.Priority
	}
	return 0
}

func (x *SaveProductCategoryRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SaveProductCategoryRequest) GetIsVirtual() bool {
	if x != nil {
		return x.IsVirtual
	}
	return false
}

func (x *SaveProductCategoryRequest) GetCategoryUrl() string {
	if x != nil {
		return x.CategoryUrl
	}
	return ""
}

func (x *SaveProductCategoryRequest) GetRedirectUrl() string {
	if x != nil {
		return x.RedirectUrl
	}
	return ""
}

func (x *SaveProductCategoryRequest) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *SaveProductCategoryRequest) GetIconPoint() string {
	if x != nil {
		return x.IconPoint
	}
	return ""
}

func (x *SaveProductCategoryRequest) GetSortNum() int32 {
	if x != nil {
		return x.SortNum
	}
	return 0
}

func (x *SaveProductCategoryRequest) GetFloorShow() bool {
	if x != nil {
		return x.FloorShow
	}
	return false
}

func (x *SaveProductCategoryRequest) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

// 保存分类响应
type SaveProductCategoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error      string `protobuf:"bytes,1,opt,name=Error,proto3" json:"Error"`
	CategoryId int64  `protobuf:"varint,2,opt,name=CategoryId,proto3" json:"CategoryId"`
}

func (x *SaveProductCategoryResponse) Reset() {
	*x = SaveProductCategoryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_service_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveProductCategoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveProductCategoryResponse) ProtoMessage() {}

func (x *SaveProductCategoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_product_service_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveProductCategoryResponse.ProtoReflect.Descriptor instead.
func (*SaveProductCategoryResponse) Descriptor() ([]byte, []int) {
	return file_product_service_proto_rawDescGZIP(), []int{17}
}

func (x *SaveProductCategoryResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *SaveProductCategoryResponse) GetCategoryId() int64 {
	if x != nil {
		return x.CategoryId
	}
	return 0
}

// 分类树
type SCategoryTree struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 值
	Id int64 `protobuf:"varint,1,opt,name=Id,proto3" json:"Id"`
	// 文本
	Name string `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name"`
	// 图标,icon与JS树形控件冲突
	Image string `protobuf:"bytes,3,opt,name=Image,proto3" json:"Image"`
	// 是否展开
	Url string `protobuf:"bytes,4,opt,name=Url,proto3" json:"Url"`
	// 是否为叶子节点(下级无节点)
	IsLeaf bool `protobuf:"varint,5,opt,name=IsLeaf,proto3" json:"IsLeaf"`
	// 子节点
	Children []*SCategoryTree `protobuf:"bytes,6,rep,name=Children,proto3" json:"Children"`
	// 是否在楼层显示
	OnFloorShow bool `protobuf:"varint,7,opt,name=OnFloorShow,proto3" json:"OnFloorShow"`
}

func (x *SCategoryTree) Reset() {
	*x = SCategoryTree{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_service_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SCategoryTree) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SCategoryTree) ProtoMessage() {}

func (x *SCategoryTree) ProtoReflect() protoreflect.Message {
	mi := &file_product_service_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SCategoryTree.ProtoReflect.Descriptor instead.
func (*SCategoryTree) Descriptor() ([]byte, []int) {
	return file_product_service_proto_rawDescGZIP(), []int{18}
}

func (x *SCategoryTree) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SCategoryTree) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SCategoryTree) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *SCategoryTree) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *SCategoryTree) GetIsLeaf() bool {
	if x != nil {
		return x.IsLeaf
	}
	return false
}

func (x *SCategoryTree) GetChildren() []*SCategoryTree {
	if x != nil {
		return x.Children
	}
	return nil
}

func (x *SCategoryTree) GetOnFloorShow() bool {
	if x != nil {
		return x.OnFloorShow
	}
	return false
}

// 获取分类请求
type GetCategoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 编号
	CategoryId int64 `protobuf:"varint,1,opt,name=CategoryId,proto3" json:"CategoryId"`
	// 是否加载品牌
	Brand bool `protobuf:"varint,2,opt,name=Brand,proto3" json:"Brand"`
}

func (x *GetCategoryRequest) Reset() {
	*x = GetCategoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_service_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCategoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCategoryRequest) ProtoMessage() {}

func (x *GetCategoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_product_service_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCategoryRequest.ProtoReflect.Descriptor instead.
func (*GetCategoryRequest) Descriptor() ([]byte, []int) {
	return file_product_service_proto_rawDescGZIP(), []int{19}
}

func (x *GetCategoryRequest) GetCategoryId() int64 {
	if x != nil {
		return x.CategoryId
	}
	return 0
}

func (x *GetCategoryRequest) GetBrand() bool {
	if x != nil {
		return x.Brand
	}
	return false
}

// 分类树形请求
type CategoryTreeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 上级编号
	ParentId int64 `protobuf:"varint,1,opt,name=ParentId,proto3" json:"ParentId"`
	// 是否懒加载
	Lazy bool `protobuf:"varint,2,opt,name=Lazy,proto3" json:"Lazy"`
	// 是否仅返回已经启用的分类
	LoadEnabled bool `protobuf:"varint,3,opt,name=LoadEnabled,proto3" json:"LoadEnabled"`
	// 排除分类编号
	ExcludeIdList []int64 `protobuf:"varint,4,rep,packed,name=ExcludeIdList,proto3" json:"ExcludeIdList"`
}

func (x *CategoryTreeRequest) Reset() {
	*x = CategoryTreeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_service_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CategoryTreeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CategoryTreeRequest) ProtoMessage() {}

func (x *CategoryTreeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_product_service_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CategoryTreeRequest.ProtoReflect.Descriptor instead.
func (*CategoryTreeRequest) Descriptor() ([]byte, []int) {
	return file_product_service_proto_rawDescGZIP(), []int{20}
}

func (x *CategoryTreeRequest) GetParentId() int64 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

func (x *CategoryTreeRequest) GetLazy() bool {
	if x != nil {
		return x.Lazy
	}
	return false
}

func (x *CategoryTreeRequest) GetLoadEnabled() bool {
	if x != nil {
		return x.LoadEnabled
	}
	return false
}

func (x *CategoryTreeRequest) GetExcludeIdList() []int64 {
	if x != nil {
		return x.ExcludeIdList
	}
	return nil
}

// 分类树形结果
type CategoryTreeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value []*SCategoryTree `protobuf:"bytes,1,rep,name=Value,proto3" json:"Value"`
}

func (x *CategoryTreeResponse) Reset() {
	*x = CategoryTreeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_service_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CategoryTreeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CategoryTreeResponse) ProtoMessage() {}

func (x *CategoryTreeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_product_service_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CategoryTreeResponse.ProtoReflect.Descriptor instead.
func (*CategoryTreeResponse) Descriptor() ([]byte, []int) {
	return file_product_service_proto_rawDescGZIP(), []int{21}
}

func (x *CategoryTreeResponse) GetValue() []*SCategoryTree {
	if x != nil {
		return x.Value
	}
	return nil
}

// 分类来源响应
type SourceCategoriesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*SProductCategory `protobuf:"bytes,1,rep,name=List,proto3" json:"List"`
}

func (x *SourceCategoriesResponse) Reset() {
	*x = SourceCategoriesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_service_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SourceCategoriesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SourceCategoriesResponse) ProtoMessage() {}

func (x *SourceCategoriesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_product_service_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SourceCategoriesResponse.ProtoReflect.Descriptor instead.
func (*SourceCategoriesResponse) Descriptor() ([]byte, []int) {
	return file_product_service_proto_rawDescGZIP(), []int{22}
}

func (x *SourceCategoriesResponse) GetList() []*SProductCategory {
	if x != nil {
		return x.List
	}
	return nil
}

// 产品
type SProduct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 编号
	Id int64 `protobuf:"varint,1,opt,name=Id,proto3" json:"Id"`
	// 分类
	CategoryId int64 `protobuf:"varint,2,opt,name=CategoryId,proto3" json:"CategoryId"`
	// 名称
	Name string `protobuf:"bytes,3,opt,name=Name,proto3" json:"Name"`
	// 供应商编号(暂时同mch_id)
	VendorId int64 `protobuf:"varint,4,opt,name=VendorId,proto3" json:"VendorId"`
	// 品牌编号
	BrandId int64 `protobuf:"varint,5,opt,name=BrandId,proto3" json:"BrandId"`
	// 商家编码
	Code string `protobuf:"bytes,6,opt,name=Code,proto3" json:"Code"`
	// 图片
	Image string `protobuf:"bytes,7,opt,name=Image,proto3" json:"Image"`
	// 描述
	Description string `protobuf:"bytes,8,opt,name=Description,proto3" json:"Description"`
	// 备注
	Remark string `protobuf:"bytes,9,opt,name=Remark,proto3" json:"Remark"`
	// 状态
	State int32 `protobuf:"varint,10,opt,name=State,proto3" json:"State"`
	// 排序编号
	SortNum int32 `protobuf:"varint,11,opt,name=SortNum,proto3" json:"SortNum"`
	// 产品属性
	Attrs []*SProductAttrValue `protobuf:"bytes,12,rep,name=Attrs,proto3" json:"Attrs"`
	// 创建时间
	CreateTime int64 `protobuf:"varint,13,opt,name=CreateTime,proto3" json:"CreateTime"`
	// 更新时间
	UpdateTime int64 `protobuf:"varint,14,opt,name=UpdateTime,proto3" json:"UpdateTime"`
}

func (x *SProduct) Reset() {
	*x = SProduct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_service_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SProduct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SProduct) ProtoMessage() {}

func (x *SProduct) ProtoReflect() protoreflect.Message {
	mi := &file_product_service_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SProduct.ProtoReflect.Descriptor instead.
func (*SProduct) Descriptor() ([]byte, []int) {
	return file_product_service_proto_rawDescGZIP(), []int{23}
}

func (x *SProduct) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SProduct) GetCategoryId() int64 {
	if x != nil {
		return x.CategoryId
	}
	return 0
}

func (x *SProduct) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SProduct) GetVendorId() int64 {
	if x != nil {
		return x.VendorId
	}
	return 0
}

func (x *SProduct) GetBrandId() int64 {
	if x != nil {
		return x.BrandId
	}
	return 0
}

func (x *SProduct) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *SProduct) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *SProduct) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *SProduct) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *SProduct) GetState() int32 {
	if x != nil {
		return x.State
	}
	return 0
}

func (x *SProduct) GetSortNum() int32 {
	if x != nil {
		return x.SortNum
	}
	return 0
}

func (x *SProduct) GetAttrs() []*SProductAttrValue {
	if x != nil {
		return x.Attrs
	}
	return nil
}

func (x *SProduct) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *SProduct) GetUpdateTime() int64 {
	if x != nil {
		return x.UpdateTime
	}
	return 0
}

type ProductInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductId int64  `protobuf:"varint,1,opt,name=ProductId,proto3" json:"ProductId"`
	Info      string `protobuf:"bytes,2,opt,name=Info,proto3" json:"Info"`
}

func (x *ProductInfoRequest) Reset() {
	*x = ProductInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_service_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductInfoRequest) ProtoMessage() {}

func (x *ProductInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_product_service_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductInfoRequest.ProtoReflect.Descriptor instead.
func (*ProductInfoRequest) Descriptor() ([]byte, []int) {
	return file_product_service_proto_rawDescGZIP(), []int{24}
}

func (x *ProductInfoRequest) GetProductId() int64 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

func (x *ProductInfoRequest) GetInfo() string {
	if x != nil {
		return x.Info
	}
	return ""
}

type SaveProductResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrCode   int64  `protobuf:"varint,1,opt,name=ErrCode,proto3" json:"ErrCode"`
	ErrMsg    string `protobuf:"bytes,2,opt,name=ErrMsg,proto3" json:"ErrMsg"`
	ProductId int64  `protobuf:"varint,3,opt,name=ProductId,proto3" json:"ProductId"`
}

func (x *SaveProductResponse) Reset() {
	*x = SaveProductResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_service_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveProductResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveProductResponse) ProtoMessage() {}

func (x *SaveProductResponse) ProtoReflect() protoreflect.Message {
	mi := &file_product_service_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveProductResponse.ProtoReflect.Descriptor instead.
func (*SaveProductResponse) Descriptor() ([]byte, []int) {
	return file_product_service_proto_rawDescGZIP(), []int{25}
}

func (x *SaveProductResponse) GetErrCode() int64 {
	if x != nil {
		return x.ErrCode
	}
	return 0
}

func (x *SaveProductResponse) GetErrMsg() string {
	if x != nil {
		return x.ErrMsg
	}
	return ""
}

func (x *SaveProductResponse) GetProductId() int64 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

var File_product_service_proto protoreflect.FileDescriptor

var file_product_service_proto_rawDesc = []byte{
	0x0a, 0x15, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0c, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x23, 0x0a, 0x11, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x64, 0x22, 0x50, 0x0a, 0x14, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x53, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1c,
	0x0a, 0x09, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x22, 0x21, 0x0a, 0x09,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22,
	0x26, 0x0a, 0x0e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x49,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x25, 0x0a, 0x0d, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x41, 0x74, 0x74, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x29,
	0x0a, 0x11, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x41, 0x74, 0x74, 0x72, 0x49, 0x74, 0x65,
	0x6d, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x40, 0x0a, 0x18, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x24, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x53, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4d,
	0x6f, 0x64, 0x65, 0x6c, 0x52, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xf3, 0x01, 0x0a, 0x0d,
	0x53, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x0e, 0x0a,
	0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x41, 0x74, 0x74, 0x72, 0x53, 0x74, 0x72, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x41, 0x74, 0x74, 0x72, 0x53, 0x74, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x53,
	0x70, 0x65, 0x63, 0x53, 0x74, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x53, 0x70,
	0x65, 0x63, 0x53, 0x74, 0x72, 0x12, 0x23, 0x0a, 0x05, 0x41, 0x74, 0x74, 0x72, 0x73, 0x18, 0x05,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x53, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x41,
	0x74, 0x74, 0x72, 0x52, 0x05, 0x41, 0x74, 0x74, 0x72, 0x73, 0x12, 0x23, 0x0a, 0x05, 0x53, 0x70,
	0x65, 0x63, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x53, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x53, 0x70, 0x65, 0x63, 0x52, 0x05, 0x53, 0x70, 0x65, 0x63, 0x73, 0x12,
	0x26, 0x0a, 0x06, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0e, 0x2e, 0x53, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x52,
	0x06, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x45, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x64, 0x22, 0xd1, 0x01, 0x0a, 0x0c, 0x53, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x41, 0x74,
	0x74, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x49, 0x73, 0x46, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x49, 0x73, 0x46, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x6f, 0x72, 0x74, 0x4e, 0x75, 0x6d, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x07, 0x53, 0x6f, 0x72, 0x74, 0x4e, 0x75, 0x6d, 0x12, 0x1e, 0x0a, 0x0a,
	0x49, 0x74, 0x65, 0x6d, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x49, 0x74, 0x65, 0x6d, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0x27, 0x0a, 0x05,
	0x49, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x53, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x41, 0x74, 0x74, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05,
	0x49, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x52, 0x0a, 0x10, 0x53, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x41, 0x74, 0x74, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x53, 0x6f, 0x72, 0x74, 0x4e, 0x75, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x07, 0x53, 0x6f, 0x72, 0x74, 0x4e, 0x75, 0x6d, 0x22, 0x8f, 0x01, 0x0a, 0x11, 0x53, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x41, 0x74, 0x74, 0x72, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12,
	0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x41, 0x74, 0x74, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x41, 0x74, 0x74, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x41, 0x74, 0x74, 0x72, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x41, 0x74, 0x74, 0x72, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x41, 0x74, 0x74, 0x72, 0x44, 0x61, 0x74, 0x61, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x41, 0x74, 0x74, 0x72, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x1a, 0x0a, 0x08, 0x41, 0x74, 0x74, 0x72, 0x57, 0x6f, 0x72, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x41, 0x74, 0x74, 0x72, 0x57, 0x6f, 0x72, 0x64, 0x22, 0x95, 0x01, 0x0a, 0x0c,
	0x53, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x70, 0x65, 0x63, 0x12, 0x0e, 0x0a, 0x02,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x53, 0x6f, 0x72, 0x74, 0x4e, 0x75, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x07, 0x53, 0x6f, 0x72, 0x74, 0x4e, 0x75, 0x6d, 0x12, 0x1e, 0x0a, 0x0a, 0x49, 0x74,
	0x65, 0x6d, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x49, 0x74, 0x65, 0x6d, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0x27, 0x0a, 0x05, 0x49, 0x74,
	0x65, 0x6d, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x53, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x53, 0x70, 0x65, 0x63, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x49, 0x74,
	0x65, 0x6d, 0x73, 0x22, 0x68, 0x0a, 0x10, 0x53, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53,
	0x70, 0x65, 0x63, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x43, 0x6f,
	0x6c, 0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x6f, 0x72, 0x74, 0x4e, 0x75, 0x6d, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x53, 0x6f, 0x72, 0x74, 0x4e, 0x75, 0x6d, 0x22, 0x40, 0x0a,
	0x18, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x24, 0x0a, 0x05, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x53, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x52, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22,
	0x81, 0x02, 0x0a, 0x0d, 0x53, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x42, 0x72, 0x61, 0x6e,
	0x64, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x53,
	0x69, 0x74, 0x65, 0x55, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x53, 0x69,
	0x74, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x49, 0x6e, 0x74, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x49, 0x6e, 0x74, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52,
	0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x52, 0x65, 0x76,
	0x69, 0x65, 0x77, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x18, 0x0a, 0x07, 0x45, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x45, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x22, 0xf1, 0x04, 0x0a, 0x10, 0x53, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x61, 0x72, 0x65,
	0x6e, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x50, 0x61, 0x72, 0x65,
	0x6e, 0x74, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x49, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x49, 0x73, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x09, 0x49, 0x73, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x12, 0x20, 0x0a, 0x0b,
	0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x55, 0x72, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x55, 0x72, 0x6c, 0x12, 0x20,
	0x0a, 0x0b, 0x52, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x55, 0x72, 0x6c, 0x18, 0x12, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x52, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x55, 0x72, 0x6c,
	0x12, 0x12, 0x0a, 0x04, 0x49, 0x63, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x49, 0x63, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x49, 0x63, 0x6f, 0x6e, 0x50, 0x6f, 0x69, 0x6e,
	0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x49, 0x63, 0x6f, 0x6e, 0x50, 0x6f, 0x69,
	0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x6f, 0x72, 0x74,
	0x4e, 0x75, 0x6d, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x53, 0x6f, 0x72, 0x74, 0x4e,
	0x75, 0x6d, 0x12, 0x1c, 0x0a, 0x09, 0x46, 0x6c, 0x6f, 0x6f, 0x72, 0x53, 0x68, 0x6f, 0x77, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x46, 0x6c, 0x6f, 0x6f, 0x72, 0x53, 0x68, 0x6f, 0x77,
	0x12, 0x18, 0x0a, 0x07, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x38, 0x0a, 0x07, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x53, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x2e, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x26, 0x0a, 0x06, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x73, 0x18, 0x10,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x53, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x42,
	0x72, 0x61, 0x6e, 0x64, 0x52, 0x06, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x73, 0x12, 0x2d, 0x0a, 0x08,
	0x43, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x18, 0x11, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x53, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x52, 0x08, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x1a, 0x3a, 0x0a, 0x0c, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xf8, 0x02, 0x0a, 0x1a, 0x53, 0x61, 0x76, 0x65,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x49, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x07, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08,
	0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x49, 0x73, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x09, 0x49, 0x73, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x12, 0x20, 0x0a, 0x0b, 0x43, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x55, 0x72, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x55, 0x72, 0x6c, 0x12, 0x20, 0x0a, 0x0b,
	0x52, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x55, 0x72, 0x6c, 0x18, 0x12, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x52, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x55, 0x72, 0x6c, 0x12, 0x12,
	0x0a, 0x04, 0x49, 0x63, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x49, 0x63,
	0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x49, 0x63, 0x6f, 0x6e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x49, 0x63, 0x6f, 0x6e, 0x50, 0x6f, 0x69, 0x6e, 0x74,
	0x12, 0x18, 0x0a, 0x07, 0x53, 0x6f, 0x72, 0x74, 0x4e, 0x75, 0x6d, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x07, 0x53, 0x6f, 0x72, 0x74, 0x4e, 0x75, 0x6d, 0x12, 0x1c, 0x0a, 0x09, 0x46, 0x6c,
	0x6f, 0x6f, 0x72, 0x53, 0x68, 0x6f, 0x77, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x46,
	0x6c, 0x6f, 0x6f, 0x72, 0x53, 0x68, 0x6f, 0x77, 0x12, 0x18, 0x0a, 0x07, 0x45, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x45, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x64, 0x22, 0x53, 0x0a, 0x1b, 0x53, 0x61, 0x76, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x43, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x22, 0xc1, 0x01, 0x0a, 0x0d, 0x53, 0x43, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x54, 0x72, 0x65, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x49, 0x6d,
	0x61, 0x67, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x55, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x55, 0x72, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x49, 0x73, 0x4c, 0x65, 0x61, 0x66, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x49, 0x73, 0x4c, 0x65, 0x61, 0x66, 0x12, 0x2a, 0x0a,
	0x08, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0e, 0x2e, 0x53, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x54, 0x72, 0x65, 0x65, 0x52,
	0x08, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x4f, 0x6e, 0x46,
	0x6c, 0x6f, 0x6f, 0x72, 0x53, 0x68, 0x6f, 0x77, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b,
	0x4f, 0x6e, 0x46, 0x6c, 0x6f, 0x6f, 0x72, 0x53, 0x68, 0x6f, 0x77, 0x22, 0x4a, 0x0a, 0x12, 0x47,
	0x65, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x05, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x22, 0x8d, 0x01, 0x0a, 0x13, 0x43, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x54, 0x72, 0x65, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1a, 0x0a, 0x08, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x4c,
	0x61, 0x7a, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x4c, 0x61, 0x7a, 0x79, 0x12,
	0x20, 0x0a, 0x0b, 0x4c, 0x6f, 0x61, 0x64, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x4c, 0x6f, 0x61, 0x64, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x64, 0x12, 0x24, 0x0a, 0x0d, 0x45, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x49, 0x64, 0x4c, 0x69,
	0x73, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x03, 0x52, 0x0d, 0x45, 0x78, 0x63, 0x6c, 0x75, 0x64,
	0x65, 0x49, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x3c, 0x0a, 0x14, 0x43, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x54, 0x72, 0x65, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x24, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x53, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x54, 0x72, 0x65, 0x65, 0x52, 0x05,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x41, 0x0a, 0x18, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x25, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x53, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x52, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x82, 0x03, 0x0a, 0x08, 0x53, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x43, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x56, 0x65, 0x6e,
	0x64, 0x6f, 0x72, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x56, 0x65, 0x6e,
	0x64, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x49, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x49, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x44, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x52,
	0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x52, 0x65, 0x6d,
	0x61, 0x72, 0x6b, 0x12, 0x14, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x6f, 0x72,
	0x74, 0x4e, 0x75, 0x6d, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x53, 0x6f, 0x72, 0x74,
	0x4e, 0x75, 0x6d, 0x12, 0x28, 0x0a, 0x05, 0x41, 0x74, 0x74, 0x72, 0x73, 0x18, 0x0c, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x53, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x41, 0x74, 0x74,
	0x72, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x41, 0x74, 0x74, 0x72, 0x73, 0x12, 0x1e, 0x0a,
	0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a,
	0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x46, 0x0a,
	0x12, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x65, 0x0a, 0x13, 0x53, 0x61, 0x76, 0x65, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x45, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x45,
	0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x45, 0x72, 0x72, 0x4d, 0x73, 0x67,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x45, 0x72, 0x72, 0x4d, 0x73, 0x67, 0x12, 0x1c,
	0x0a, 0x09, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x32, 0xf4, 0x07, 0x0a,
	0x0e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x2d, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x0f, 0x2e, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x49, 0x64, 0x1a, 0x0e, 0x2e, 0x53,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x22, 0x00, 0x12, 0x30,
	0x0a, 0x09, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x12, 0x06, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x1a, 0x19, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4d, 0x6f, 0x64,
	0x65, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x2a, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x41, 0x74, 0x74, 0x72, 0x12, 0x0e, 0x2e, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x41, 0x74, 0x74, 0x72, 0x49, 0x64, 0x1a, 0x0d, 0x2e, 0x53, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x41, 0x74, 0x74, 0x72, 0x22, 0x00, 0x12, 0x36, 0x0a, 0x0b,
	0x47, 0x65, 0x74, 0x41, 0x74, 0x74, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x12, 0x2e, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x41, 0x74, 0x74, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x1a,
	0x11, 0x2e, 0x53, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x41, 0x74, 0x74, 0x72, 0x49, 0x74,
	0x65, 0x6d, 0x22, 0x00, 0x12, 0x2f, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c,
	0x41, 0x74, 0x74, 0x72, 0x73, 0x48, 0x74, 0x6d, 0x6c, 0x12, 0x0f, 0x2e, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x49, 0x64, 0x1a, 0x07, 0x2e, 0x53, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x22, 0x00, 0x12, 0x26, 0x0a, 0x09, 0x53, 0x61, 0x76, 0x65, 0x4d, 0x6f, 0x64,
	0x65, 0x6c, 0x12, 0x0e, 0x2e, 0x53, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4d, 0x6f, 0x64,
	0x65, 0x6c, 0x1a, 0x07, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x00, 0x12, 0x2a, 0x0a,
	0x0c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x12, 0x0f, 0x2e,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x49, 0x64, 0x1a, 0x07,
	0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x00, 0x12, 0x24, 0x0a, 0x08, 0x47, 0x65, 0x74,
	0x42, 0x72, 0x61, 0x6e, 0x64, 0x12, 0x06, 0x2e, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x1a, 0x0e, 0x2e,
	0x53, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x22, 0x00, 0x12,
	0x26, 0x0a, 0x09, 0x53, 0x61, 0x76, 0x65, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x12, 0x0e, 0x2e, 0x53,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x1a, 0x07, 0x2e, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x00, 0x12, 0x20, 0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x12, 0x06, 0x2e, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x1a, 0x07,
	0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x00, 0x12, 0x30, 0x0a, 0x09, 0x47, 0x65, 0x74,
	0x42, 0x72, 0x61, 0x6e, 0x64, 0x73, 0x12, 0x06, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x19,
	0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x37, 0x0a, 0x0b, 0x47,
	0x65, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x13, 0x2e, 0x47, 0x65, 0x74,
	0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x11, 0x2e, 0x53, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x22, 0x00, 0x12, 0x23, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x06, 0x2e, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x1a, 0x07,
	0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x00, 0x12, 0x4b, 0x0a, 0x0c, 0x53, 0x61, 0x76,
	0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x1b, 0x2e, 0x53, 0x61, 0x76, 0x65,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x53, 0x61, 0x76, 0x65, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x44, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x43, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x54, 0x72, 0x65, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x2e,
	0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x54, 0x72, 0x65, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x54, 0x72,
	0x65, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x46, 0x0a, 0x13,
	0x47, 0x65, 0x74, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x69, 0x65, 0x73, 0x12, 0x12, 0x2e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x25, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x12, 0x0a, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x1a, 0x09,
	0x2e, 0x53, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x22, 0x00, 0x12, 0x30, 0x0a, 0x0b, 0x53,
	0x61, 0x76, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x09, 0x2e, 0x53, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x1a, 0x14, 0x2e, 0x53, 0x61, 0x76, 0x65, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x31, 0x0a,
	0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x15,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x07, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x00,
	0x12, 0x31, 0x0a, 0x0f, 0x53, 0x61, 0x76, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x13, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x07, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x22, 0x00, 0x42, 0x1f, 0x0a, 0x13, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x67, 0x6f, 0x32, 0x6f, 0x2e, 0x72, 0x70, 0x63, 0x5a, 0x08, 0x2e, 0x2f, 0x3b, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_product_service_proto_rawDescOnce sync.Once
	file_product_service_proto_rawDescData = file_product_service_proto_rawDesc
)

func file_product_service_proto_rawDescGZIP() []byte {
	file_product_service_proto_rawDescOnce.Do(func() {
		file_product_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_product_service_proto_rawDescData)
	})
	return file_product_service_proto_rawDescData
}

var file_product_service_proto_msgTypes = make([]protoimpl.MessageInfo, 27)
var file_product_service_proto_goTypes = []interface{}{
	(*CategoryIdRequest)(nil),           // 0: CategoryIdRequest
	(*DeleteProductRequest)(nil),        // 1: DeleteProductRequest
	(*ProductId)(nil),                   // 2: ProductId
	(*ProductModelId)(nil),              // 3: ProductModelId
	(*ProductAttrId)(nil),               // 4: ProductAttrId
	(*ProductAttrItemId)(nil),           // 5: ProductAttrItemId
	(*ProductModelListResponse)(nil),    // 6: ProductModelListResponse
	(*SProductModel)(nil),               // 7: SProductModel
	(*SProductAttr)(nil),                // 8: SProductAttr
	(*SProductAttrItem)(nil),            // 9: SProductAttrItem
	(*SProductAttrValue)(nil),           // 10: SProductAttrValue
	(*SProductSpec)(nil),                // 11: SProductSpec
	(*SProductSpecItem)(nil),            // 12: SProductSpecItem
	(*ProductBrandListResponse)(nil),    // 13: ProductBrandListResponse
	(*SProductBrand)(nil),               // 14: SProductBrand
	(*SProductCategory)(nil),            // 15: SProductCategory
	(*SaveProductCategoryRequest)(nil),  // 16: SaveProductCategoryRequest
	(*SaveProductCategoryResponse)(nil), // 17: SaveProductCategoryResponse
	(*SCategoryTree)(nil),               // 18: SCategoryTree
	(*GetCategoryRequest)(nil),          // 19: GetCategoryRequest
	(*CategoryTreeRequest)(nil),         // 20: CategoryTreeRequest
	(*CategoryTreeResponse)(nil),        // 21: CategoryTreeResponse
	(*SourceCategoriesResponse)(nil),    // 22: SourceCategoriesResponse
	(*SProduct)(nil),                    // 23: SProduct
	(*ProductInfoRequest)(nil),          // 24: ProductInfoRequest
	(*SaveProductResponse)(nil),         // 25: SaveProductResponse
	nil,                                 // 26: SProductCategory.OptionsEntry
	(*Empty)(nil),                       // 27: Empty
	(*Int64)(nil),                       // 28: Int64
	(*String)(nil),                      // 29: String
	(*Result)(nil),                      // 30: Result
}
var file_product_service_proto_depIdxs = []int32{
	7,  // 0: ProductModelListResponse.Value:type_name -> SProductModel
	8,  // 1: SProductModel.Attrs:type_name -> SProductAttr
	11, // 2: SProductModel.Specs:type_name -> SProductSpec
	14, // 3: SProductModel.Brands:type_name -> SProductBrand
	9,  // 4: SProductAttr.Items:type_name -> SProductAttrItem
	12, // 5: SProductSpec.Items:type_name -> SProductSpecItem
	14, // 6: ProductBrandListResponse.Value:type_name -> SProductBrand
	26, // 7: SProductCategory.Options:type_name -> SProductCategory.OptionsEntry
	14, // 8: SProductCategory.Brands:type_name -> SProductBrand
	15, // 9: SProductCategory.Children:type_name -> SProductCategory
	18, // 10: SCategoryTree.Children:type_name -> SCategoryTree
	18, // 11: CategoryTreeResponse.Value:type_name -> SCategoryTree
	15, // 12: SourceCategoriesResponse.List:type_name -> SProductCategory
	10, // 13: SProduct.Attrs:type_name -> SProductAttrValue
	3,  // 14: ProductService.GetModel:input_type -> ProductModelId
	27, // 15: ProductService.GetModels:input_type -> Empty
	4,  // 16: ProductService.GetAttr:input_type -> ProductAttrId
	5,  // 17: ProductService.GetAttrItem:input_type -> ProductAttrItemId
	3,  // 18: ProductService.GetModelAttrsHtml:input_type -> ProductModelId
	7,  // 19: ProductService.SaveModel:input_type -> SProductModel
	3,  // 20: ProductService.DeleteModel_:input_type -> ProductModelId
	28, // 21: ProductService.GetBrand:input_type -> Int64
	14, // 22: ProductService.SaveBrand:input_type -> SProductBrand
	28, // 23: ProductService.DeleteBrand:input_type -> Int64
	27, // 24: ProductService.GetBrands:input_type -> Empty
	19, // 25: ProductService.GetCategory:input_type -> GetCategoryRequest
	28, // 26: ProductService.DeleteCategory:input_type -> Int64
	16, // 27: ProductService.SaveCategory:input_type -> SaveProductCategoryRequest
	20, // 28: ProductService.GetCategoryTreeNode:input_type -> CategoryTreeRequest
	0,  // 29: ProductService.GetSourceCategories:input_type -> CategoryIdRequest
	2,  // 30: ProductService.GetProduct:input_type -> ProductId
	23, // 31: ProductService.SaveProduct:input_type -> SProduct
	1,  // 32: ProductService.DeleteProduct:input_type -> DeleteProductRequest
	24, // 33: ProductService.SaveProductInfo:input_type -> ProductInfoRequest
	7,  // 34: ProductService.GetModel:output_type -> SProductModel
	6,  // 35: ProductService.GetModels:output_type -> ProductModelListResponse
	8,  // 36: ProductService.GetAttr:output_type -> SProductAttr
	9,  // 37: ProductService.GetAttrItem:output_type -> SProductAttrItem
	29, // 38: ProductService.GetModelAttrsHtml:output_type -> String
	30, // 39: ProductService.SaveModel:output_type -> Result
	30, // 40: ProductService.DeleteModel_:output_type -> Result
	14, // 41: ProductService.GetBrand:output_type -> SProductBrand
	30, // 42: ProductService.SaveBrand:output_type -> Result
	30, // 43: ProductService.DeleteBrand:output_type -> Result
	13, // 44: ProductService.GetBrands:output_type -> ProductBrandListResponse
	15, // 45: ProductService.GetCategory:output_type -> SProductCategory
	30, // 46: ProductService.DeleteCategory:output_type -> Result
	17, // 47: ProductService.SaveCategory:output_type -> SaveProductCategoryResponse
	21, // 48: ProductService.GetCategoryTreeNode:output_type -> CategoryTreeResponse
	22, // 49: ProductService.GetSourceCategories:output_type -> SourceCategoriesResponse
	23, // 50: ProductService.GetProduct:output_type -> SProduct
	25, // 51: ProductService.SaveProduct:output_type -> SaveProductResponse
	30, // 52: ProductService.DeleteProduct:output_type -> Result
	30, // 53: ProductService.SaveProductInfo:output_type -> Result
	34, // [34:54] is the sub-list for method output_type
	14, // [14:34] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_product_service_proto_init() }
func file_product_service_proto_init() {
	if File_product_service_proto != nil {
		return
	}
	file_global_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_product_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CategoryIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteProductRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductModelId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductAttrId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductAttrItemId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductModelListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SProductModel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SProductAttr); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SProductAttrItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SProductAttrValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_service_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SProductSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_service_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SProductSpecItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_service_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductBrandListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_service_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SProductBrand); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_service_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SProductCategory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_service_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SaveProductCategoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_service_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SaveProductCategoryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_service_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SCategoryTree); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_service_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCategoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_service_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CategoryTreeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_service_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CategoryTreeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_service_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SourceCategoriesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_service_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SProduct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_service_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_service_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SaveProductResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_product_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   27,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_product_service_proto_goTypes,
		DependencyIndexes: file_product_service_proto_depIdxs,
		MessageInfos:      file_product_service_proto_msgTypes,
	}.Build()
	File_product_service_proto = out.File
	file_product_service_proto_rawDesc = nil
	file_product_service_proto_goTypes = nil
	file_product_service_proto_depIdxs = nil
}
