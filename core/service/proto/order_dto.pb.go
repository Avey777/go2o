// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.12.4
// source: message/order_dto.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// * 订单状态
type EOrderStatus int32

const (
	EOrderStatus__3 EOrderStatus = 0 //***** 在履行前,订单可以取消申请退款  *****
	// * 等待支付
	EOrderStatus_StatAwaitingPayment EOrderStatus = 1
	// * 等待确认
	EOrderStatus_StatAwaitingConfirm EOrderStatus = 2
	// * 等待备货
	EOrderStatus_StatAwaitingPickup EOrderStatus = 3
	// * 等待发货
	EOrderStatus_StatAwaitingShipment EOrderStatus = 4
	// * 系统取消
	EOrderStatus_StatCancelled EOrderStatus = 11
	// * 买家申请取消,等待卖家确认
	EOrderStatus_StatAwaitingCancel EOrderStatus = 12
	// * 卖家谢绝订单,由于无货等原因
	EOrderStatus_StatDeclined EOrderStatus = 13
	// * 已退款,完成取消
	EOrderStatus_StatRefunded EOrderStatus = 14
	// * 部分发货(将订单商品分多个包裹发货)
	EOrderStatus_PartiallyShipped EOrderStatus = 5
	// * 完成发货
	EOrderStatus_StatShipped EOrderStatus = 6
	// * 订单已拆分
	EOrderStatus_StatBreak EOrderStatus = 7
	// * 订单完成
	EOrderStatus_StatCompleted EOrderStatus = 8
	// * 已退货
	EOrderStatus_StatGoodsRefunded EOrderStatus = 15
)

// Enum value maps for EOrderStatus.
var (
	EOrderStatus_name = map[int32]string{
		0:  "_3",
		1:  "StatAwaitingPayment",
		2:  "StatAwaitingConfirm",
		3:  "StatAwaitingPickup",
		4:  "StatAwaitingShipment",
		11: "StatCancelled",
		12: "StatAwaitingCancel",
		13: "StatDeclined",
		14: "StatRefunded",
		5:  "PartiallyShipped",
		6:  "StatShipped",
		7:  "StatBreak",
		8:  "StatCompleted",
		15: "StatGoodsRefunded",
	}
	EOrderStatus_value = map[string]int32{
		"_3":                   0,
		"StatAwaitingPayment":  1,
		"StatAwaitingConfirm":  2,
		"StatAwaitingPickup":   3,
		"StatAwaitingShipment": 4,
		"StatCancelled":        11,
		"StatAwaitingCancel":   12,
		"StatDeclined":         13,
		"StatRefunded":         14,
		"PartiallyShipped":     5,
		"StatShipped":          6,
		"StatBreak":            7,
		"StatCompleted":        8,
		"StatGoodsRefunded":    15,
	}
)

func (x EOrderStatus) Enum() *EOrderStatus {
	p := new(EOrderStatus)
	*p = x
	return p
}

func (x EOrderStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EOrderStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_message_order_dto_proto_enumTypes[0].Descriptor()
}

func (EOrderStatus) Type() protoreflect.EnumType {
	return &file_message_order_dto_proto_enumTypes[0]
}

func (x EOrderStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EOrderStatus.Descriptor instead.
func (EOrderStatus) EnumDescriptor() ([]byte, []int) {
	return file_message_order_dto_proto_rawDescGZIP(), []int{0}
}

// 订单商品项
type SOrderItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 编号
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	// 商品快照编号
	SnapshotId int64 `protobuf:"varint,2,opt,name=SnapshotId,proto3" json:"SnapshotId"`
	// Sku编号
	SkuId int64 `protobuf:"varint,3,opt,name=SkuId,proto3" json:"SkuId"`
	// 商品编号
	ItemId int64 `protobuf:"varint,4,opt,name=ItemId,proto3" json:"ItemId"`
	// 商品标题
	ItemTitle string `protobuf:"bytes,5,opt,name=ItemTitle,proto3" json:"ItemTitle"`
	// 商品图片
	Image string `protobuf:"bytes,6,opt,name=image,proto3" json:"image"`
	// 商品单价
	Price int64 `protobuf:"varint,7,opt,name=Price,proto3" json:"Price"`
	// 商品实际单价
	FinalPrice int64 `protobuf:"varint,8,opt,name=FinalPrice,proto3" json:"FinalPrice"`
	// 商品数量
	Quantity int32 `protobuf:"varint,9,opt,name=Quantity,proto3" json:"Quantity"`
	// 退货数量
	ReturnQuantity int32 `protobuf:"varint,10,opt,name=ReturnQuantity,proto3" json:"ReturnQuantity"`
	// 商品总金额
	ItemAmount int64 `protobuf:"varint,11,opt,name=ItemAmount,proto3" json:"ItemAmount"`
	// 商品实际总金额
	FinalAmount int64 `protobuf:"varint,12,opt,name=FinalAmount,proto3" json:"FinalAmount"`
	// 是否已发货
	IsShipped bool `protobuf:"varint,13,opt,name=IsShipped,proto3" json:"IsShipped"`
	// 其他信息
	Data map[string]string `protobuf:"bytes,14,rep,name=Data,proto3" json:"Data" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *SOrderItem) Reset() {
	*x = SOrderItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_order_dto_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SOrderItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SOrderItem) ProtoMessage() {}

func (x *SOrderItem) ProtoReflect() protoreflect.Message {
	mi := &file_message_order_dto_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SOrderItem.ProtoReflect.Descriptor instead.
func (*SOrderItem) Descriptor() ([]byte, []int) {
	return file_message_order_dto_proto_rawDescGZIP(), []int{0}
}

func (x *SOrderItem) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SOrderItem) GetSnapshotId() int64 {
	if x != nil {
		return x.SnapshotId
	}
	return 0
}

func (x *SOrderItem) GetSkuId() int64 {
	if x != nil {
		return x.SkuId
	}
	return 0
}

func (x *SOrderItem) GetItemId() int64 {
	if x != nil {
		return x.ItemId
	}
	return 0
}

func (x *SOrderItem) GetItemTitle() string {
	if x != nil {
		return x.ItemTitle
	}
	return ""
}

func (x *SOrderItem) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *SOrderItem) GetPrice() int64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *SOrderItem) GetFinalPrice() int64 {
	if x != nil {
		return x.FinalPrice
	}
	return 0
}

func (x *SOrderItem) GetQuantity() int32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *SOrderItem) GetReturnQuantity() int32 {
	if x != nil {
		return x.ReturnQuantity
	}
	return 0
}

func (x *SOrderItem) GetItemAmount() int64 {
	if x != nil {
		return x.ItemAmount
	}
	return 0
}

func (x *SOrderItem) GetFinalAmount() int64 {
	if x != nil {
		return x.FinalAmount
	}
	return 0
}

func (x *SOrderItem) GetIsShipped() bool {
	if x != nil {
		return x.IsShipped
	}
	return false
}

func (x *SOrderItem) GetData() map[string]string {
	if x != nil {
		return x.Data
	}
	return nil
}

type SParentOrder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 买家
	BuyerId int64 `protobuf:"varint,1,opt,name=BuyerId,proto3" json:"BuyerId"`
	// 买家用户名
	BuyerUser string `protobuf:"bytes,2,opt,name=BuyerUser,proto3" json:"BuyerUser"`
	// 订单号
	OrderNo string `protobuf:"bytes,3,opt,name=OrderNo,proto3" json:"OrderNo"`
	// 商品
	ItemCount int64 `protobuf:"varint,4,opt,name=ItemCount,proto3" json:"ItemCount"`
	// 商品总金额
	ItemAmount int64 `protobuf:"varint,5,opt,name=ItemAmount,proto3" json:"ItemAmount"`
	// 抵扣金额
	DiscountAmount int64 `protobuf:"varint,6,opt,name=DiscountAmount,proto3" json:"DiscountAmount"`
	// 优惠金额
	DeductAmount int64 `protobuf:"varint,7,opt,name=DeductAmount,proto3" json:"DeductAmount"`
	// 快递费
	ExpressFee int64 `protobuf:"varint,8,opt,name=ExpressFee,proto3" json:"ExpressFee"`
	// 包装费
	PackageFee int64 `protobuf:"varint,9,opt,name=PackageFee,proto3" json:"PackageFee"`
	// 最终金额
	FinalAmount int64 `protobuf:"varint,10,opt,name=FinalAmount,proto3" json:"FinalAmount"`
	// 收货人
	Consignee *SConsigneeInfo `protobuf:"bytes,18,opt,name=Consignee,proto3" json:"Consignee"`
	// 子订单
	SubOrders []*SSubOrder `protobuf:"bytes,11,rep,name=SubOrders,proto3" json:"SubOrders"`
	// 是否支付
	IsPaid bool `protobuf:"varint,12,opt,name=IsPaid,proto3" json:"IsPaid"`
	// 状态
	Status int32 `protobuf:"varint,13,opt,name=Status,proto3" json:"Status"`
	// 状态文本
	StatusText string `protobuf:"bytes,14,opt,name=StatusText,proto3" json:"StatusText"`
	// 下单时间
	CreateTime int64 `protobuf:"zigzag64,15,opt,name=CreateTime,proto3" json:"CreateTime"`
}

func (x *SParentOrder) Reset() {
	*x = SParentOrder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_order_dto_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SParentOrder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SParentOrder) ProtoMessage() {}

func (x *SParentOrder) ProtoReflect() protoreflect.Message {
	mi := &file_message_order_dto_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SParentOrder.ProtoReflect.Descriptor instead.
func (*SParentOrder) Descriptor() ([]byte, []int) {
	return file_message_order_dto_proto_rawDescGZIP(), []int{1}
}

func (x *SParentOrder) GetBuyerId() int64 {
	if x != nil {
		return x.BuyerId
	}
	return 0
}

func (x *SParentOrder) GetBuyerUser() string {
	if x != nil {
		return x.BuyerUser
	}
	return ""
}

func (x *SParentOrder) GetOrderNo() string {
	if x != nil {
		return x.OrderNo
	}
	return ""
}

func (x *SParentOrder) GetItemCount() int64 {
	if x != nil {
		return x.ItemCount
	}
	return 0
}

func (x *SParentOrder) GetItemAmount() int64 {
	if x != nil {
		return x.ItemAmount
	}
	return 0
}

func (x *SParentOrder) GetDiscountAmount() int64 {
	if x != nil {
		return x.DiscountAmount
	}
	return 0
}

func (x *SParentOrder) GetDeductAmount() int64 {
	if x != nil {
		return x.DeductAmount
	}
	return 0
}

func (x *SParentOrder) GetExpressFee() int64 {
	if x != nil {
		return x.ExpressFee
	}
	return 0
}

func (x *SParentOrder) GetPackageFee() int64 {
	if x != nil {
		return x.PackageFee
	}
	return 0
}

func (x *SParentOrder) GetFinalAmount() int64 {
	if x != nil {
		return x.FinalAmount
	}
	return 0
}

func (x *SParentOrder) GetConsignee() *SConsigneeInfo {
	if x != nil {
		return x.Consignee
	}
	return nil
}

func (x *SParentOrder) GetSubOrders() []*SSubOrder {
	if x != nil {
		return x.SubOrders
	}
	return nil
}

func (x *SParentOrder) GetIsPaid() bool {
	if x != nil {
		return x.IsPaid
	}
	return false
}

func (x *SParentOrder) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *SParentOrder) GetStatusText() string {
	if x != nil {
		return x.StatusText
	}
	return ""
}

func (x *SParentOrder) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

type SSubOrder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 订单号
	OrderNo string `protobuf:"bytes,1,opt,name=OrderNo,proto3" json:"OrderNo"`
	// 店铺编号
	ShopId int64 `protobuf:"varint,2,opt,name=ShopId,proto3" json:"ShopId"`
	// 店铺名称
	ShopName string `protobuf:"bytes,3,opt,name=ShopName,proto3" json:"ShopName"`
	// 商品总金额
	ItemAmount int64 `protobuf:"varint,4,opt,name=ItemAmount,proto3" json:"ItemAmount"`
	// 优惠金额
	DiscountAmount int64 `protobuf:"varint,5,opt,name=DiscountAmount,proto3" json:"DiscountAmount"`
	// 抵扣金额
	DeductAmount int64 `protobuf:"varint,6,opt,name=DeductAmount,proto3" json:"DeductAmount"`
	// 调整金额
	AdjustAmount int64 `protobuf:"varint,7,opt,name=AdjustAmount,proto3" json:"AdjustAmount"`
	// 配送费
	ExpressFee int64 `protobuf:"varint,8,opt,name=ExpressFee,proto3" json:"ExpressFee"`
	// 包装费
	PackageFee int64 `protobuf:"varint,9,opt,name=PackageFee,proto3" json:"PackageFee"`
	// 手续费
	ProcedureFee int64 `protobuf:"varint,10,opt,name=ProcedureFee,proto3" json:"ProcedureFee"`
	// 订单总金额
	TotalAmount int64 `protobuf:"varint,11,opt,name=TotalAmount,proto3" json:"TotalAmount"`
	// 最终金额
	FinalAmount int64 `protobuf:"varint,12,opt,name=FinalAmount,proto3" json:"FinalAmount"`
	// 买家留言
	BuyerComment string `protobuf:"bytes,13,opt,name=BuyerComment,proto3" json:"BuyerComment"`
	// 状态
	Status int32 `protobuf:"varint,14,opt,name=Status,proto3" json:"Status"`
	// 商品列表
	Items []*SOrderItem `protobuf:"bytes,15,rep,name=Items,proto3" json:"Items"`
	// 状态文本
	StatusText string `protobuf:"bytes,16,opt,name=StatusText,proto3" json:"StatusText"`
}

func (x *SSubOrder) Reset() {
	*x = SSubOrder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_order_dto_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SSubOrder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SSubOrder) ProtoMessage() {}

func (x *SSubOrder) ProtoReflect() protoreflect.Message {
	mi := &file_message_order_dto_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SSubOrder.ProtoReflect.Descriptor instead.
func (*SSubOrder) Descriptor() ([]byte, []int) {
	return file_message_order_dto_proto_rawDescGZIP(), []int{2}
}

func (x *SSubOrder) GetOrderNo() string {
	if x != nil {
		return x.OrderNo
	}
	return ""
}

func (x *SSubOrder) GetShopId() int64 {
	if x != nil {
		return x.ShopId
	}
	return 0
}

func (x *SSubOrder) GetShopName() string {
	if x != nil {
		return x.ShopName
	}
	return ""
}

func (x *SSubOrder) GetItemAmount() int64 {
	if x != nil {
		return x.ItemAmount
	}
	return 0
}

func (x *SSubOrder) GetDiscountAmount() int64 {
	if x != nil {
		return x.DiscountAmount
	}
	return 0
}

func (x *SSubOrder) GetDeductAmount() int64 {
	if x != nil {
		return x.DeductAmount
	}
	return 0
}

func (x *SSubOrder) GetAdjustAmount() int64 {
	if x != nil {
		return x.AdjustAmount
	}
	return 0
}

func (x *SSubOrder) GetExpressFee() int64 {
	if x != nil {
		return x.ExpressFee
	}
	return 0
}

func (x *SSubOrder) GetPackageFee() int64 {
	if x != nil {
		return x.PackageFee
	}
	return 0
}

func (x *SSubOrder) GetProcedureFee() int64 {
	if x != nil {
		return x.ProcedureFee
	}
	return 0
}

func (x *SSubOrder) GetTotalAmount() int64 {
	if x != nil {
		return x.TotalAmount
	}
	return 0
}

func (x *SSubOrder) GetFinalAmount() int64 {
	if x != nil {
		return x.FinalAmount
	}
	return 0
}

func (x *SSubOrder) GetBuyerComment() string {
	if x != nil {
		return x.BuyerComment
	}
	return ""
}

func (x *SSubOrder) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *SSubOrder) GetItems() []*SOrderItem {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *SSubOrder) GetStatusText() string {
	if x != nil {
		return x.StatusText
	}
	return ""
}

// 子订单
type SSingleOrder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 订单编号
	OrderId int64 `protobuf:"varint,1,opt,name=OrderId,proto3" json:"OrderId"`
	// 父订单编号
	ParentOrderId int64 `protobuf:"varint,2,opt,name=ParentOrderId,proto3" json:"ParentOrderId"`
	// 订单号
	OrderNo string `protobuf:"bytes,3,opt,name=OrderNo,proto3" json:"OrderNo"`
	// 订单类型
	OrderType int32 `protobuf:"varint,4,opt,name=OrderType,proto3" json:"OrderType"`
	// 买家编号
	BuyerId int64 `protobuf:"varint,5,opt,name=BuyerId,proto3" json:"BuyerId"`
	// 卖家编号
	SellerId int64 `protobuf:"varint,6,opt,name=SellerId,proto3" json:"SellerId"`
	// 店铺编号
	ShopId int64 `protobuf:"varint,7,opt,name=ShopId,proto3" json:"ShopId"`
	// int64 SubOrderId = 2;
	// 订单标题
	Subject string `protobuf:"bytes,8,opt,name=Subject,proto3" json:"Subject"`
	// 商品总金额
	ItemAmount int64 `protobuf:"varint,9,opt,name=ItemAmount,proto3" json:"ItemAmount"`
	// 优惠金额
	DiscountAmount int64 `protobuf:"varint,10,opt,name=DiscountAmount,proto3" json:"DiscountAmount"`
	// 抵扣金额
	DeductAmount int32 `protobuf:"varint,11,opt,name=DeductAmount,proto3" json:"DeductAmount"`
	// 调整金额
	AdjustAmount int32 `protobuf:"varint,12,opt,name=AdjustAmount,proto3" json:"AdjustAmount"`
	// 配送费
	ExpressFee int64 `protobuf:"varint,13,opt,name=ExpressFee,proto3" json:"ExpressFee"`
	// 包装费
	PackageFee int64 `protobuf:"varint,14,opt,name=PackageFee,proto3" json:"PackageFee"`
	// 手续费
	ProcedureFee int32 `protobuf:"varint,15,opt,name=ProcedureFee,proto3" json:"ProcedureFee"`
	// 订单总金额
	TotalAmount int32 `protobuf:"varint,16,opt,name=TotalAmount,proto3" json:"TotalAmount"`
	// 最终金额
	FinalAmount int64 `protobuf:"varint,17,opt,name=FinalAmount,proto3" json:"FinalAmount"`
	// 收货人
	Consignee *SConsigneeInfo `protobuf:"bytes,18,opt,name=Consignee,proto3" json:"Consignee"`
	// 买家留言
	BuyerComment string `protobuf:"bytes,19,opt,name=BuyerComment,proto3" json:"BuyerComment"`
	// 是否支付
	IsPaid bool `protobuf:"varint,20,opt,name=IsPaid,proto3" json:"IsPaid"`
	// sint32 IsBreak = 18;
	Status int32 `protobuf:"zigzag32,21,opt,name=Status,proto3" json:"Status"`
	// 下单时间
	SubmitTime int64 `protobuf:"zigzag64,22,opt,name=SubmitTime,proto3" json:"SubmitTime"`
	// sint64 UpdateTime = 21;
	Items []*SOrderItem `protobuf:"bytes,23,rep,name=Items,proto3" json:"Items"`
	// 扩展信息
	Data map[string]string `protobuf:"bytes,25,rep,name=Data,proto3" json:"Data" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// 更新时间
	UpdateTime int64 `protobuf:"varint,24,opt,name=UpdateTime,proto3" json:"UpdateTime"`
}

func (x *SSingleOrder) Reset() {
	*x = SSingleOrder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_order_dto_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SSingleOrder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SSingleOrder) ProtoMessage() {}

func (x *SSingleOrder) ProtoReflect() protoreflect.Message {
	mi := &file_message_order_dto_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SSingleOrder.ProtoReflect.Descriptor instead.
func (*SSingleOrder) Descriptor() ([]byte, []int) {
	return file_message_order_dto_proto_rawDescGZIP(), []int{3}
}

func (x *SSingleOrder) GetOrderId() int64 {
	if x != nil {
		return x.OrderId
	}
	return 0
}

func (x *SSingleOrder) GetParentOrderId() int64 {
	if x != nil {
		return x.ParentOrderId
	}
	return 0
}

func (x *SSingleOrder) GetOrderNo() string {
	if x != nil {
		return x.OrderNo
	}
	return ""
}

func (x *SSingleOrder) GetOrderType() int32 {
	if x != nil {
		return x.OrderType
	}
	return 0
}

func (x *SSingleOrder) GetBuyerId() int64 {
	if x != nil {
		return x.BuyerId
	}
	return 0
}

func (x *SSingleOrder) GetSellerId() int64 {
	if x != nil {
		return x.SellerId
	}
	return 0
}

func (x *SSingleOrder) GetShopId() int64 {
	if x != nil {
		return x.ShopId
	}
	return 0
}

func (x *SSingleOrder) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *SSingleOrder) GetItemAmount() int64 {
	if x != nil {
		return x.ItemAmount
	}
	return 0
}

func (x *SSingleOrder) GetDiscountAmount() int64 {
	if x != nil {
		return x.DiscountAmount
	}
	return 0
}

func (x *SSingleOrder) GetDeductAmount() int32 {
	if x != nil {
		return x.DeductAmount
	}
	return 0
}

func (x *SSingleOrder) GetAdjustAmount() int32 {
	if x != nil {
		return x.AdjustAmount
	}
	return 0
}

func (x *SSingleOrder) GetExpressFee() int64 {
	if x != nil {
		return x.ExpressFee
	}
	return 0
}

func (x *SSingleOrder) GetPackageFee() int64 {
	if x != nil {
		return x.PackageFee
	}
	return 0
}

func (x *SSingleOrder) GetProcedureFee() int32 {
	if x != nil {
		return x.ProcedureFee
	}
	return 0
}

func (x *SSingleOrder) GetTotalAmount() int32 {
	if x != nil {
		return x.TotalAmount
	}
	return 0
}

func (x *SSingleOrder) GetFinalAmount() int64 {
	if x != nil {
		return x.FinalAmount
	}
	return 0
}

func (x *SSingleOrder) GetConsignee() *SConsigneeInfo {
	if x != nil {
		return x.Consignee
	}
	return nil
}

func (x *SSingleOrder) GetBuyerComment() string {
	if x != nil {
		return x.BuyerComment
	}
	return ""
}

func (x *SSingleOrder) GetIsPaid() bool {
	if x != nil {
		return x.IsPaid
	}
	return false
}

func (x *SSingleOrder) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *SSingleOrder) GetSubmitTime() int64 {
	if x != nil {
		return x.SubmitTime
	}
	return 0
}

func (x *SSingleOrder) GetItems() []*SOrderItem {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *SSingleOrder) GetData() map[string]string {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *SSingleOrder) GetUpdateTime() int64 {
	if x != nil {
		return x.UpdateTime
	}
	return 0
}

// 收货人信息
type SConsigneeInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 收货人
	ConsigneeName string `protobuf:"bytes,1,opt,name=ConsigneeName,proto3" json:"ConsigneeName"`
	// 收货电话
	ConsigneePhone string `protobuf:"bytes,12,opt,name=ConsigneePhone,proto3" json:"ConsigneePhone"`
	// 配送地址
	ShippingAddress string `protobuf:"bytes,13,opt,name=ShippingAddress,proto3" json:"ShippingAddress"`
}

func (x *SConsigneeInfo) Reset() {
	*x = SConsigneeInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_order_dto_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SConsigneeInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SConsigneeInfo) ProtoMessage() {}

func (x *SConsigneeInfo) ProtoReflect() protoreflect.Message {
	mi := &file_message_order_dto_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SConsigneeInfo.ProtoReflect.Descriptor instead.
func (*SConsigneeInfo) Descriptor() ([]byte, []int) {
	return file_message_order_dto_proto_rawDescGZIP(), []int{4}
}

func (x *SConsigneeInfo) GetConsigneeName() string {
	if x != nil {
		return x.ConsigneeName
	}
	return ""
}

func (x *SConsigneeInfo) GetConsigneePhone() string {
	if x != nil {
		return x.ConsigneePhone
	}
	return ""
}

func (x *SConsigneeInfo) GetShippingAddress() string {
	if x != nil {
		return x.ShippingAddress
	}
	return ""
}

// todo: 批发的参数改为属性而不是map
type SubmitOrderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BuyerId  int64             `protobuf:"zigzag64,1,opt,name=BuyerId,proto3" json:"BuyerId"`
	CartType int32             `protobuf:"zigzag32,2,opt,name=CartType,proto3" json:"CartType"`
	Data     map[string]string `protobuf:"bytes,3,rep,name=Data,proto3" json:"Data" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *SubmitOrderRequest) Reset() {
	*x = SubmitOrderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_order_dto_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubmitOrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitOrderRequest) ProtoMessage() {}

func (x *SubmitOrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_message_order_dto_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitOrderRequest.ProtoReflect.Descriptor instead.
func (*SubmitOrderRequest) Descriptor() ([]byte, []int) {
	return file_message_order_dto_proto_rawDescGZIP(), []int{5}
}

func (x *SubmitOrderRequest) GetBuyerId() int64 {
	if x != nil {
		return x.BuyerId
	}
	return 0
}

func (x *SubmitOrderRequest) GetCartType() int32 {
	if x != nil {
		return x.CartType
	}
	return 0
}

func (x *SubmitOrderRequest) GetData() map[string]string {
	if x != nil {
		return x.Data
	}
	return nil
}

// 提交订单请求
type SubmitNormalOrderV2Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BuyerId         int64  `protobuf:"varint,1,opt,name=BuyerId,proto3" json:"BuyerId"`
	CartCode        string `protobuf:"bytes,2,opt,name=CartCode,proto3" json:"CartCode"`
	AddressId       int64  `protobuf:"varint,3,opt,name=AddressId,proto3" json:"AddressId"`
	Subject         string `protobuf:"bytes,4,opt,name=Subject,proto3" json:"Subject"`
	CouponCode      string `protobuf:"bytes,5,opt,name=CouponCode,proto3" json:"CouponCode"`
	BalanceDiscount bool   `protobuf:"varint,6,opt,name=BalanceDiscount,proto3" json:"BalanceDiscount"`
}

func (x *SubmitNormalOrderV2Request) Reset() {
	*x = SubmitNormalOrderV2Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_order_dto_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubmitNormalOrderV2Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitNormalOrderV2Request) ProtoMessage() {}

func (x *SubmitNormalOrderV2Request) ProtoReflect() protoreflect.Message {
	mi := &file_message_order_dto_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitNormalOrderV2Request.ProtoReflect.Descriptor instead.
func (*SubmitNormalOrderV2Request) Descriptor() ([]byte, []int) {
	return file_message_order_dto_proto_rawDescGZIP(), []int{6}
}

func (x *SubmitNormalOrderV2Request) GetBuyerId() int64 {
	if x != nil {
		return x.BuyerId
	}
	return 0
}

func (x *SubmitNormalOrderV2Request) GetCartCode() string {
	if x != nil {
		return x.CartCode
	}
	return ""
}

func (x *SubmitNormalOrderV2Request) GetAddressId() int64 {
	if x != nil {
		return x.AddressId
	}
	return 0
}

func (x *SubmitNormalOrderV2Request) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *SubmitNormalOrderV2Request) GetCouponCode() string {
	if x != nil {
		return x.CouponCode
	}
	return ""
}

func (x *SubmitNormalOrderV2Request) GetBalanceDiscount() bool {
	if x != nil {
		return x.BalanceDiscount
	}
	return false
}

// 订单提交返回数据
type NormalOrderSubmitResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 错误码
	ErrCode int64 `protobuf:"varint,1,opt,name=ErrCode,proto3" json:"ErrCode"`
	// 错误信息
	ErrMsg string `protobuf:"bytes,2,opt,name=ErrMsg,proto3" json:"ErrMsg"`
	// 订单号，多个订单号，用","分割
	OrderNo string `protobuf:"bytes,3,opt,name=OrderNo,proto3" json:"OrderNo"`
	// 合并支付
	MergePay bool `protobuf:"varint,4,opt,name=MergePay,proto3" json:"MergePay"`
	// 交易号
	TradeNo string `protobuf:"bytes,5,opt,name=TradeNo,proto3" json:"TradeNo"`
	// 交易金额
	TradeAmount int64 `protobuf:"varint,6,opt,name=TradeAmount,proto3" json:"TradeAmount"`
}

func (x *NormalOrderSubmitResponse) Reset() {
	*x = NormalOrderSubmitResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_order_dto_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NormalOrderSubmitResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NormalOrderSubmitResponse) ProtoMessage() {}

func (x *NormalOrderSubmitResponse) ProtoReflect() protoreflect.Message {
	mi := &file_message_order_dto_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NormalOrderSubmitResponse.ProtoReflect.Descriptor instead.
func (*NormalOrderSubmitResponse) Descriptor() ([]byte, []int) {
	return file_message_order_dto_proto_rawDescGZIP(), []int{7}
}

func (x *NormalOrderSubmitResponse) GetErrCode() int64 {
	if x != nil {
		return x.ErrCode
	}
	return 0
}

func (x *NormalOrderSubmitResponse) GetErrMsg() string {
	if x != nil {
		return x.ErrMsg
	}
	return ""
}

func (x *NormalOrderSubmitResponse) GetOrderNo() string {
	if x != nil {
		return x.OrderNo
	}
	return ""
}

func (x *NormalOrderSubmitResponse) GetMergePay() bool {
	if x != nil {
		return x.MergePay
	}
	return false
}

func (x *NormalOrderSubmitResponse) GetTradeNo() string {
	if x != nil {
		return x.TradeNo
	}
	return ""
}

func (x *NormalOrderSubmitResponse) GetTradeAmount() int64 {
	if x != nil {
		return x.TradeAmount
	}
	return 0
}

type GetOrderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderNo  string `protobuf:"bytes,1,opt,name=OrderNo,proto3" json:"OrderNo"`
	SubOrder bool   `protobuf:"varint,2,opt,name=SubOrder,proto3" json:"SubOrder"`
}

func (x *GetOrderRequest) Reset() {
	*x = GetOrderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_order_dto_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrderRequest) ProtoMessage() {}

func (x *GetOrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_message_order_dto_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrderRequest.ProtoReflect.Descriptor instead.
func (*GetOrderRequest) Descriptor() ([]byte, []int) {
	return file_message_order_dto_proto_rawDescGZIP(), []int{8}
}

func (x *GetOrderRequest) GetOrderNo() string {
	if x != nil {
		return x.OrderNo
	}
	return ""
}

func (x *GetOrderRequest) GetSubOrder() bool {
	if x != nil {
		return x.SubOrder
	}
	return false
}

type TradeOrderSubmitRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Order *SSingleOrder `protobuf:"bytes,1,opt,name=Order,proto3" json:"Order"`
	Rate  float64       `protobuf:"fixed64,2,opt,name=Rate,proto3" json:"Rate"`
}

func (x *TradeOrderSubmitRequest) Reset() {
	*x = TradeOrderSubmitRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_order_dto_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TradeOrderSubmitRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TradeOrderSubmitRequest) ProtoMessage() {}

func (x *TradeOrderSubmitRequest) ProtoReflect() protoreflect.Message {
	mi := &file_message_order_dto_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TradeOrderSubmitRequest.ProtoReflect.Descriptor instead.
func (*TradeOrderSubmitRequest) Descriptor() ([]byte, []int) {
	return file_message_order_dto_proto_rawDescGZIP(), []int{9}
}

func (x *TradeOrderSubmitRequest) GetOrder() *SSingleOrder {
	if x != nil {
		return x.Order
	}
	return nil
}

func (x *TradeOrderSubmitRequest) GetRate() float64 {
	if x != nil {
		return x.Rate
	}
	return 0
}

type TradeOrderTicketRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderId int64  `protobuf:"zigzag64,1,opt,name=OrderId,proto3" json:"OrderId"`
	Img     string `protobuf:"bytes,2,opt,name=Img,proto3" json:"Img"`
}

func (x *TradeOrderTicketRequest) Reset() {
	*x = TradeOrderTicketRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_order_dto_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TradeOrderTicketRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TradeOrderTicketRequest) ProtoMessage() {}

func (x *TradeOrderTicketRequest) ProtoReflect() protoreflect.Message {
	mi := &file_message_order_dto_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TradeOrderTicketRequest.ProtoReflect.Descriptor instead.
func (*TradeOrderTicketRequest) Descriptor() ([]byte, []int) {
	return file_message_order_dto_proto_rawDescGZIP(), []int{10}
}

func (x *TradeOrderTicketRequest) GetOrderId() int64 {
	if x != nil {
		return x.OrderId
	}
	return 0
}

func (x *TradeOrderTicketRequest) GetImg() string {
	if x != nil {
		return x.Img
	}
	return ""
}

type ComplexItemsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value []*SOrderItem `protobuf:"bytes,1,rep,name=Value,proto3" json:"Value"`
}

func (x *ComplexItemsResponse) Reset() {
	*x = ComplexItemsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_order_dto_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ComplexItemsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComplexItemsResponse) ProtoMessage() {}

func (x *ComplexItemsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_message_order_dto_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ComplexItemsResponse.ProtoReflect.Descriptor instead.
func (*ComplexItemsResponse) Descriptor() ([]byte, []int) {
	return file_message_order_dto_proto_rawDescGZIP(), []int{11}
}

func (x *ComplexItemsResponse) GetValue() []*SOrderItem {
	if x != nil {
		return x.Value
	}
	return nil
}

// 订单编号
type OrderId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value int64 `protobuf:"varint,1,opt,name=Value,proto3" json:"Value"`
}

func (x *OrderId) Reset() {
	*x = OrderId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_order_dto_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderId) ProtoMessage() {}

func (x *OrderId) ProtoReflect() protoreflect.Message {
	mi := &file_message_order_dto_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderId.ProtoReflect.Descriptor instead.
func (*OrderId) Descriptor() ([]byte, []int) {
	return file_message_order_dto_proto_rawDescGZIP(), []int{12}
}

func (x *OrderId) GetValue() int64 {
	if x != nil {
		return x.Value
	}
	return 0
}

// 订单号
type OrderNo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 订单号
	OrderNo string `protobuf:"bytes,1,opt,name=OrderNo,proto3" json:"OrderNo"`
	// 是否为子订单
	Sub bool `protobuf:"varint,2,opt,name=Sub,proto3" json:"Sub"`
}

func (x *OrderNo) Reset() {
	*x = OrderNo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_order_dto_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderNo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderNo) ProtoMessage() {}

func (x *OrderNo) ProtoReflect() protoreflect.Message {
	mi := &file_message_order_dto_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderNo.ProtoReflect.Descriptor instead.
func (*OrderNo) Descriptor() ([]byte, []int) {
	return file_message_order_dto_proto_rawDescGZIP(), []int{13}
}

func (x *OrderNo) GetOrderNo() string {
	if x != nil {
		return x.OrderNo
	}
	return ""
}

func (x *OrderNo) GetSub() bool {
	if x != nil {
		return x.Sub
	}
	return false
}

// 订单号
type OrderNoV2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value string `protobuf:"bytes,1,opt,name=Value,proto3" json:"Value"`
}

func (x *OrderNoV2) Reset() {
	*x = OrderNoV2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_order_dto_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderNoV2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderNoV2) ProtoMessage() {}

func (x *OrderNoV2) ProtoReflect() protoreflect.Message {
	mi := &file_message_order_dto_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderNoV2.ProtoReflect.Descriptor instead.
func (*OrderNoV2) Descriptor() ([]byte, []int) {
	return file_message_order_dto_proto_rawDescGZIP(), []int{14}
}

func (x *OrderNoV2) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type OrderIdOrNo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 订单编号
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	// 订单号
	OrderNo string `protobuf:"bytes,2,opt,name=OrderNo,proto3" json:"OrderNo"`
}

func (x *OrderIdOrNo) Reset() {
	*x = OrderIdOrNo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_order_dto_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderIdOrNo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderIdOrNo) ProtoMessage() {}

func (x *OrderIdOrNo) ProtoReflect() protoreflect.Message {
	mi := &file_message_order_dto_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderIdOrNo.ProtoReflect.Descriptor instead.
func (*OrderIdOrNo) Descriptor() ([]byte, []int) {
	return file_message_order_dto_proto_rawDescGZIP(), []int{15}
}

func (x *OrderIdOrNo) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *OrderIdOrNo) GetOrderNo() string {
	if x != nil {
		return x.OrderNo
	}
	return ""
}

type CancelOrderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 订单号
	OrderNo string `protobuf:"bytes,1,opt,name=OrderNo,proto3" json:"OrderNo"`
	// 是否为子订单
	Sub bool `protobuf:"varint,2,opt,name=Sub,proto3" json:"Sub"`
	// 取消原因
	Reason string `protobuf:"bytes,3,opt,name=Reason,proto3" json:"Reason"`
}

func (x *CancelOrderRequest) Reset() {
	*x = CancelOrderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_order_dto_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancelOrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelOrderRequest) ProtoMessage() {}

func (x *CancelOrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_message_order_dto_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelOrderRequest.ProtoReflect.Descriptor instead.
func (*CancelOrderRequest) Descriptor() ([]byte, []int) {
	return file_message_order_dto_proto_rawDescGZIP(), []int{16}
}

func (x *CancelOrderRequest) GetOrderNo() string {
	if x != nil {
		return x.OrderNo
	}
	return ""
}

func (x *CancelOrderRequest) GetSub() bool {
	if x != nil {
		return x.Sub
	}
	return false
}

func (x *CancelOrderRequest) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

type OrderShipmentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 订单号
	OrderNo string `protobuf:"bytes,1,opt,name=OrderNo,proto3" json:"OrderNo"`
	// 是否为子订单
	Sub bool `protobuf:"varint,2,opt,name=Sub,proto3" json:"Sub"`
	// 快递编号
	ProviderId int64 `protobuf:"varint,3,opt,name=ProviderId,proto3" json:"ProviderId"`
	// 发货单号
	ShipOrderNo string `protobuf:"bytes,4,opt,name=ShipOrderNo,proto3" json:"ShipOrderNo"`
}

func (x *OrderShipmentRequest) Reset() {
	*x = OrderShipmentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_order_dto_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderShipmentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderShipmentRequest) ProtoMessage() {}

func (x *OrderShipmentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_message_order_dto_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderShipmentRequest.ProtoReflect.Descriptor instead.
func (*OrderShipmentRequest) Descriptor() ([]byte, []int) {
	return file_message_order_dto_proto_rawDescGZIP(), []int{17}
}

func (x *OrderShipmentRequest) GetOrderNo() string {
	if x != nil {
		return x.OrderNo
	}
	return ""
}

func (x *OrderShipmentRequest) GetSub() bool {
	if x != nil {
		return x.Sub
	}
	return false
}

func (x *OrderShipmentRequest) GetProviderId() int64 {
	if x != nil {
		return x.ProviderId
	}
	return 0
}

func (x *OrderShipmentRequest) GetShipOrderNo() string {
	if x != nil {
		return x.ShipOrderNo
	}
	return ""
}

// * 预生成订单请求
type PrepareOrderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// * 买家编号
	BuyerId int64 `protobuf:"varint,1,opt,name=BuyerId,proto3" json:"BuyerId"`
	// * 购物车编码
	CartCode string `protobuf:"bytes,2,opt,name=CartCode,proto3" json:"CartCode"`
	// * 收货地址
	AddressId int64 `protobuf:"varint,3,opt,name=AddressId,proto3" json:"AddressId"`
	// * 优惠券
	CouponCode string `protobuf:"bytes,5,opt,name=CouponCode,proto3" json:"CouponCode"`
	// * 支付方式
	PaymentFlag int32 `protobuf:"varint,6,opt,name=PaymentFlag,proto3" json:"PaymentFlag"`
	// * 使用余额
	Subject string `protobuf:"bytes,4,opt,name=Subject,proto3" json:"Subject"`
}

func (x *PrepareOrderRequest) Reset() {
	*x = PrepareOrderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_order_dto_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PrepareOrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrepareOrderRequest) ProtoMessage() {}

func (x *PrepareOrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_message_order_dto_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrepareOrderRequest.ProtoReflect.Descriptor instead.
func (*PrepareOrderRequest) Descriptor() ([]byte, []int) {
	return file_message_order_dto_proto_rawDescGZIP(), []int{18}
}

func (x *PrepareOrderRequest) GetBuyerId() int64 {
	if x != nil {
		return x.BuyerId
	}
	return 0
}

func (x *PrepareOrderRequest) GetCartCode() string {
	if x != nil {
		return x.CartCode
	}
	return ""
}

func (x *PrepareOrderRequest) GetAddressId() int64 {
	if x != nil {
		return x.AddressId
	}
	return 0
}

func (x *PrepareOrderRequest) GetCouponCode() string {
	if x != nil {
		return x.CouponCode
	}
	return ""
}

func (x *PrepareOrderRequest) GetPaymentFlag() int32 {
	if x != nil {
		return x.PaymentFlag
	}
	return 0
}

func (x *PrepareOrderRequest) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

// * 预生成订单响应
type PrepareOrderResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 错误信息
	Error string `protobuf:"bytes,1,opt,name=Error,proto3" json:"Error"`
	// 订单类型
	OrderType int32 `protobuf:"varint,2,opt,name=OrderType,proto3" json:"OrderType"`
	// 商品总金额
	ItemAmount int64 `protobuf:"varint,3,opt,name=ItemAmount,proto3" json:"ItemAmount"`
	// 优惠金额
	DiscountAmount int64 `protobuf:"varint,4,opt,name=DiscountAmount,proto3" json:"DiscountAmount"`
	// 抵扣金额
	DeductAmount int32 `protobuf:"varint,5,opt,name=DeductAmount,proto3" json:"DeductAmount"`
	// 调整金额
	AdjustAmount int32 `protobuf:"varint,6,opt,name=AdjustAmount,proto3" json:"AdjustAmount"`
	// 配送费
	ExpressFee int64 `protobuf:"varint,7,opt,name=ExpressFee,proto3" json:"ExpressFee"`
	// 包装费
	PackageFee int64 `protobuf:"varint,8,opt,name=PackageFee,proto3" json:"PackageFee"`
	// 手续费
	ProcedureFee int32 `protobuf:"varint,9,opt,name=ProcedureFee,proto3" json:"ProcedureFee"`
	// 订单总金额
	TotalAmount int32 `protobuf:"varint,10,opt,name=TotalAmount,proto3" json:"TotalAmount"`
	// 最终金额
	FinalFee int64 `protobuf:"varint,11,opt,name=FinalFee,proto3" json:"FinalFee"`
	// 收货人
	Consignee *SConsigneeInfo `protobuf:"bytes,12,opt,name=Consignee,proto3" json:"Consignee"`
	// 订单项目
	Groups []*SPrepareOrderGroup `protobuf:"bytes,13,rep,name=Groups,proto3" json:"Groups"`
	// 买家留言
	BuyerComment string `protobuf:"bytes,14,opt,name=BuyerComment,proto3" json:"BuyerComment"`
}

func (x *PrepareOrderResponse) Reset() {
	*x = PrepareOrderResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_order_dto_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PrepareOrderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrepareOrderResponse) ProtoMessage() {}

func (x *PrepareOrderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_message_order_dto_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrepareOrderResponse.ProtoReflect.Descriptor instead.
func (*PrepareOrderResponse) Descriptor() ([]byte, []int) {
	return file_message_order_dto_proto_rawDescGZIP(), []int{19}
}

func (x *PrepareOrderResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *PrepareOrderResponse) GetOrderType() int32 {
	if x != nil {
		return x.OrderType
	}
	return 0
}

func (x *PrepareOrderResponse) GetItemAmount() int64 {
	if x != nil {
		return x.ItemAmount
	}
	return 0
}

func (x *PrepareOrderResponse) GetDiscountAmount() int64 {
	if x != nil {
		return x.DiscountAmount
	}
	return 0
}

func (x *PrepareOrderResponse) GetDeductAmount() int32 {
	if x != nil {
		return x.DeductAmount
	}
	return 0
}

func (x *PrepareOrderResponse) GetAdjustAmount() int32 {
	if x != nil {
		return x.AdjustAmount
	}
	return 0
}

func (x *PrepareOrderResponse) GetExpressFee() int64 {
	if x != nil {
		return x.ExpressFee
	}
	return 0
}

func (x *PrepareOrderResponse) GetPackageFee() int64 {
	if x != nil {
		return x.PackageFee
	}
	return 0
}

func (x *PrepareOrderResponse) GetProcedureFee() int32 {
	if x != nil {
		return x.ProcedureFee
	}
	return 0
}

func (x *PrepareOrderResponse) GetTotalAmount() int32 {
	if x != nil {
		return x.TotalAmount
	}
	return 0
}

func (x *PrepareOrderResponse) GetFinalFee() int64 {
	if x != nil {
		return x.FinalFee
	}
	return 0
}

func (x *PrepareOrderResponse) GetConsignee() *SConsigneeInfo {
	if x != nil {
		return x.Consignee
	}
	return nil
}

func (x *PrepareOrderResponse) GetGroups() []*SPrepareOrderGroup {
	if x != nil {
		return x.Groups
	}
	return nil
}

func (x *PrepareOrderResponse) GetBuyerComment() string {
	if x != nil {
		return x.BuyerComment
	}
	return ""
}

// 预生成订单店铺分组
type SPrepareOrderGroup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 店铺编号
	ShopId int64 `protobuf:"zigzag64,1,opt,name=ShopId,proto3" json:"ShopId"`
	// 供货商编号
	VendorId int64 `protobuf:"zigzag64,2,opt,name=VendorId,proto3" json:"VendorId"`
	// 店铺名称
	ShopName string `protobuf:"bytes,3,opt,name=ShopName,proto3" json:"ShopName"`
	// 商品
	Items []*SPrepareOrderItem `protobuf:"bytes,5,rep,name=Items,proto3" json:"Items"`
}

func (x *SPrepareOrderGroup) Reset() {
	*x = SPrepareOrderGroup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_order_dto_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SPrepareOrderGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SPrepareOrderGroup) ProtoMessage() {}

func (x *SPrepareOrderGroup) ProtoReflect() protoreflect.Message {
	mi := &file_message_order_dto_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SPrepareOrderGroup.ProtoReflect.Descriptor instead.
func (*SPrepareOrderGroup) Descriptor() ([]byte, []int) {
	return file_message_order_dto_proto_rawDescGZIP(), []int{20}
}

func (x *SPrepareOrderGroup) GetShopId() int64 {
	if x != nil {
		return x.ShopId
	}
	return 0
}

func (x *SPrepareOrderGroup) GetVendorId() int64 {
	if x != nil {
		return x.VendorId
	}
	return 0
}

func (x *SPrepareOrderGroup) GetShopName() string {
	if x != nil {
		return x.ShopName
	}
	return ""
}

func (x *SPrepareOrderGroup) GetItems() []*SPrepareOrderItem {
	if x != nil {
		return x.Items
	}
	return nil
}

// 预生成订单店铺商品
type SPrepareOrderItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 商品编号
	ItemId int64 `protobuf:"zigzag64,1,opt,name=ItemId,proto3" json:"ItemId"`
	// SKU编号
	SkuId int64 `protobuf:"zigzag64,2,opt,name=SkuId,proto3" json:"SkuId"`
	// 商品标题
	Title string `protobuf:"bytes,3,opt,name=Title,proto3" json:"Title"`
	// 商品图片
	Image string `protobuf:"bytes,4,opt,name=image,proto3" json:"image"`
	// 规格文本
	SpecWord string `protobuf:"bytes,5,opt,name=SpecWord,proto3" json:"SpecWord"`
	// 销售价
	Price float64 `protobuf:"fixed64,8,opt,name=Price,proto3" json:"Price"`
	// 数量
	Quantity int32 `protobuf:"zigzag32,9,opt,name=Quantity,proto3" json:"Quantity"`
}

func (x *SPrepareOrderItem) Reset() {
	*x = SPrepareOrderItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_order_dto_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SPrepareOrderItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SPrepareOrderItem) ProtoMessage() {}

func (x *SPrepareOrderItem) ProtoReflect() protoreflect.Message {
	mi := &file_message_order_dto_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SPrepareOrderItem.ProtoReflect.Descriptor instead.
func (*SPrepareOrderItem) Descriptor() ([]byte, []int) {
	return file_message_order_dto_proto_rawDescGZIP(), []int{21}
}

func (x *SPrepareOrderItem) GetItemId() int64 {
	if x != nil {
		return x.ItemId
	}
	return 0
}

func (x *SPrepareOrderItem) GetSkuId() int64 {
	if x != nil {
		return x.SkuId
	}
	return 0
}

func (x *SPrepareOrderItem) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *SPrepareOrderItem) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *SPrepareOrderItem) GetSpecWord() string {
	if x != nil {
		return x.SpecWord
	}
	return ""
}

func (x *SPrepareOrderItem) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *SPrepareOrderItem) GetQuantity() int32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

var File_message_order_dto_proto protoreflect.FileDescriptor

var file_message_order_dto_proto_rawDesc = []byte{
	0x0a, 0x17, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f,
	0x64, 0x74, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xdc, 0x03, 0x0a, 0x0a, 0x53, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x6e, 0x61, 0x70,
	0x73, 0x68, 0x6f, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x53, 0x6e,
	0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x53, 0x6b, 0x75, 0x49,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x53, 0x6b, 0x75, 0x49, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x49, 0x74, 0x65, 0x6d, 0x54, 0x69,
	0x74, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x49, 0x74, 0x65, 0x6d, 0x54,
	0x69, 0x74, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x50, 0x72,
	0x69, 0x63, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x50, 0x72, 0x69, 0x63, 0x65,
	0x12, 0x1e, 0x0a, 0x0a, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x26, 0x0a, 0x0e,
	0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x51, 0x75, 0x61, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x49, 0x74, 0x65, 0x6d, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x49, 0x74, 0x65, 0x6d, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x41, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x46, 0x69, 0x6e, 0x61, 0x6c,
	0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x49, 0x73, 0x53, 0x68, 0x69, 0x70,
	0x70, 0x65, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x49, 0x73, 0x53, 0x68, 0x69,
	0x70, 0x70, 0x65, 0x64, 0x12, 0x29, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x0e, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x53, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x2e,
	0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x1a,
	0x37, 0x0a, 0x09, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x95, 0x04, 0x0a, 0x0c, 0x53, 0x50, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x42, 0x75, 0x79,
	0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x42, 0x75, 0x79, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x42, 0x75, 0x79, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x42, 0x75, 0x79, 0x65, 0x72, 0x55, 0x73, 0x65,
	0x72, 0x12, 0x18, 0x0a, 0x07, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x6f, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x49,
	0x74, 0x65, 0x6d, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x49, 0x74, 0x65, 0x6d, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x49, 0x74, 0x65,
	0x6d, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x49,
	0x74, 0x65, 0x6d, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x44, 0x69, 0x73,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0e, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x22, 0x0a, 0x0c, 0x44, 0x65, 0x64, 0x75, 0x63, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x44, 0x65, 0x64, 0x75, 0x63, 0x74, 0x41,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73,
	0x46, 0x65, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x45, 0x78, 0x70, 0x72, 0x65,
	0x73, 0x73, 0x46, 0x65, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65,
	0x46, 0x65, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x61,
	0x67, 0x65, 0x46, 0x65, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x46, 0x69, 0x6e, 0x61,
	0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2d, 0x0a, 0x09, 0x43, 0x6f, 0x6e, 0x73, 0x69,
	0x67, 0x6e, 0x65, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x53, 0x43, 0x6f,
	0x6e, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x43, 0x6f, 0x6e,
	0x73, 0x69, 0x67, 0x6e, 0x65, 0x65, 0x12, 0x28, 0x0a, 0x09, 0x53, 0x75, 0x62, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x53, 0x53, 0x75, 0x62,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x09, 0x53, 0x75, 0x62, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73,
	0x12, 0x16, 0x0a, 0x06, 0x49, 0x73, 0x50, 0x61, 0x69, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x06, 0x49, 0x73, 0x50, 0x61, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x54, 0x65, 0x78, 0x74, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x54, 0x65, 0x78, 0x74,
	0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0f,
	0x20, 0x01, 0x28, 0x12, 0x52, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x22, 0x90, 0x04, 0x0a, 0x09, 0x53, 0x53, 0x75, 0x62, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x18,
	0x0a, 0x07, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x68, 0x6f, 0x70,
	0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x53, 0x68, 0x6f, 0x70, 0x49, 0x64,
	0x12, 0x1a, 0x0a, 0x08, 0x53, 0x68, 0x6f, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x53, 0x68, 0x6f, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a,
	0x49, 0x74, 0x65, 0x6d, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0a, 0x49, 0x74, 0x65, 0x6d, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x26, 0x0a, 0x0e,
	0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x44, 0x65, 0x64, 0x75, 0x63, 0x74, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x44, 0x65, 0x64, 0x75,
	0x63, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x41, 0x64, 0x6a, 0x75,
	0x73, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c,
	0x41, 0x64, 0x6a, 0x75, 0x73, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a,
	0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x46, 0x65, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0a, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x46, 0x65, 0x65, 0x12, 0x1e, 0x0a, 0x0a,
	0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x46, 0x65, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x46, 0x65, 0x65, 0x12, 0x22, 0x0a, 0x0c,
	0x50, 0x72, 0x6f, 0x63, 0x65, 0x64, 0x75, 0x72, 0x65, 0x46, 0x65, 0x65, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0c, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x64, 0x75, 0x72, 0x65, 0x46, 0x65, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x42, 0x75, 0x79, 0x65, 0x72, 0x43, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x42, 0x75, 0x79, 0x65,
	0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x21, 0x0a, 0x05, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0b, 0x2e, 0x53, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x49, 0x74,
	0x65, 0x6d, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x54, 0x65, 0x78,
	0x74, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x54,
	0x65, 0x78, 0x74, 0x22, 0xf2, 0x06, 0x0a, 0x0c, 0x53, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x24,
	0x0a, 0x0d, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x6f, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x6f, 0x12, 0x1c,
	0x0a, 0x09, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x09, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x42, 0x75, 0x79, 0x65, 0x72, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x42,
	0x75, 0x79, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x65, 0x6c, 0x6c, 0x65, 0x72,
	0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x53, 0x65, 0x6c, 0x6c, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x68, 0x6f, 0x70, 0x49, 0x64, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x53, 0x68, 0x6f, 0x70, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x75,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x53, 0x75, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x49, 0x74, 0x65, 0x6d, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x49, 0x74, 0x65, 0x6d, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x44, 0x69,
	0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0c,
	0x44, 0x65, 0x64, 0x75, 0x63, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0c, 0x44, 0x65, 0x64, 0x75, 0x63, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x22, 0x0a, 0x0c, 0x41, 0x64, 0x6a, 0x75, 0x73, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x41, 0x64, 0x6a, 0x75, 0x73, 0x74, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x46,
	0x65, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73,
	0x73, 0x46, 0x65, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x46,
	0x65, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67,
	0x65, 0x46, 0x65, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x64, 0x75, 0x72,
	0x65, 0x46, 0x65, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x50, 0x72, 0x6f, 0x63,
	0x65, 0x64, 0x75, 0x72, 0x65, 0x46, 0x65, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x54, 0x6f, 0x74, 0x61,
	0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x10, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x54,
	0x6f, 0x74, 0x61, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x46, 0x69,
	0x6e, 0x61, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x11, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0b, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2d, 0x0a, 0x09,
	0x43, 0x6f, 0x6e, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x53, 0x43, 0x6f, 0x6e, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x09, 0x43, 0x6f, 0x6e, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x42,
	0x75, 0x79, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x13, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x42, 0x75, 0x79, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x49, 0x73, 0x50, 0x61, 0x69, 0x64, 0x18, 0x14, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x06, 0x49, 0x73, 0x50, 0x61, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x15, 0x20, 0x01, 0x28, 0x11, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x1e, 0x0a, 0x0a, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x16, 0x20,
	0x01, 0x28, 0x12, 0x52, 0x0a, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x21, 0x0a, 0x05, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x17, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b,
	0x2e, 0x53, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x49, 0x74, 0x65,
	0x6d, 0x73, 0x12, 0x2b, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x19, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x53, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x2e,
	0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x1e, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x18, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x1a,
	0x37, 0x0a, 0x09, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x88, 0x01, 0x0a, 0x0e, 0x53, 0x43, 0x6f,
	0x6e, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x24, 0x0a, 0x0d, 0x43,
	0x6f, 0x6e, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x43, 0x6f, 0x6e, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x26, 0x0a, 0x0e, 0x43, 0x6f, 0x6e, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x65, 0x50, 0x68,
	0x6f, 0x6e, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x43, 0x6f, 0x6e, 0x73, 0x69,
	0x67, 0x6e, 0x65, 0x65, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x53, 0x68, 0x69,
	0x70, 0x70, 0x69, 0x6e, 0x67, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0f, 0x53, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x22, 0xb6, 0x01, 0x0a, 0x12, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x42, 0x75,
	0x79, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x12, 0x52, 0x07, 0x42, 0x75, 0x79,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x43, 0x61, 0x72, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x11, 0x52, 0x08, 0x43, 0x61, 0x72, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x31, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d,
	0x2e, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x44,
	0x61, 0x74, 0x61, 0x1a, 0x37, 0x0a, 0x09, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xd4, 0x01, 0x0a,
	0x1a, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x56, 0x32, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x42,
	0x75, 0x79, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x42, 0x75,
	0x79, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x43, 0x61, 0x72, 0x74, 0x43, 0x6f, 0x64,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x43, 0x61, 0x72, 0x74, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x49, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x49, 0x64, 0x12,
	0x18, 0x0a, 0x07, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x6f, 0x75,
	0x70, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x43,
	0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x42, 0x61, 0x6c,
	0x61, 0x6e, 0x63, 0x65, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0f, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x44, 0x69, 0x73, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x22, 0xbf, 0x01, 0x0a, 0x19, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x45, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x07, 0x45, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x45,
	0x72, 0x72, 0x4d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x45, 0x72, 0x72,
	0x4d, 0x73, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x6f, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x6f, 0x12, 0x1a, 0x0a,
	0x08, 0x4d, 0x65, 0x72, 0x67, 0x65, 0x50, 0x61, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x08, 0x4d, 0x65, 0x72, 0x67, 0x65, 0x50, 0x61, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x54, 0x72, 0x61,
	0x64, 0x65, 0x4e, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x54, 0x72, 0x61, 0x64,
	0x65, 0x4e, 0x6f, 0x12, 0x20, 0x0a, 0x0b, 0x54, 0x72, 0x61, 0x64, 0x65, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x54, 0x72, 0x61, 0x64, 0x65, 0x41,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x47, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x4e, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x4e, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x75, 0x62, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x53, 0x75, 0x62, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x22, 0x52,
	0x0a, 0x17, 0x54, 0x72, 0x61, 0x64, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x75, 0x62, 0x6d,
	0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x05, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x53, 0x53, 0x69, 0x6e, 0x67,
	0x6c, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x05, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x12,
	0x0a, 0x04, 0x52, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x52, 0x61,
	0x74, 0x65, 0x22, 0x45, 0x0a, 0x17, 0x54, 0x72, 0x61, 0x64, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a,
	0x07, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x12, 0x52, 0x07,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x49, 0x6d, 0x67, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x49, 0x6d, 0x67, 0x22, 0x39, 0x0a, 0x14, 0x43, 0x6f, 0x6d,
	0x70, 0x6c, 0x65, 0x78, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x21, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0b, 0x2e, 0x53, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x22, 0x1f, 0x0a, 0x07, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x35, 0x0a, 0x07, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x6f,
	0x12, 0x18, 0x0a, 0x07, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x53, 0x75,
	0x62, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x03, 0x53, 0x75, 0x62, 0x22, 0x21, 0x0a, 0x09,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x6f, 0x56, 0x32, 0x12, 0x14, 0x0a, 0x05, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22,
	0x37, 0x0a, 0x0b, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x4f, 0x72, 0x4e, 0x6f, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18,
	0x0a, 0x07, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x6f, 0x22, 0x58, 0x0a, 0x12, 0x43, 0x61, 0x6e, 0x63,
	0x65, 0x6c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18,
	0x0a, 0x07, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x53, 0x75, 0x62, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x03, 0x53, 0x75, 0x62, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x52, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x22, 0x84, 0x01, 0x0a, 0x14, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x68, 0x69, 0x70,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x4e, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x4e, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x53, 0x75, 0x62, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x03, 0x53, 0x75, 0x62, 0x12, 0x1e, 0x0a, 0x0a, 0x50, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x50, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x53, 0x68, 0x69, 0x70, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x4e, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x53, 0x68,
	0x69, 0x70, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x6f, 0x22, 0xc5, 0x01, 0x0a, 0x13, 0x50, 0x72,
	0x65, 0x70, 0x61, 0x72, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x18, 0x0a, 0x07, 0x42, 0x75, 0x79, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x07, 0x42, 0x75, 0x79, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x43,
	0x61, 0x72, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x43,
	0x61, 0x72, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x43,
	0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x43, 0x6f, 0x75, 0x70, 0x6f,
	0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x46, 0x6c, 0x61, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x50, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x75, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x22, 0xfc, 0x03, 0x0a, 0x14, 0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x12, 0x1c, 0x0a, 0x09, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x09, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e,
	0x0a, 0x0a, 0x49, 0x74, 0x65, 0x6d, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0a, 0x49, 0x74, 0x65, 0x6d, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x26,
	0x0a, 0x0e, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x44, 0x65, 0x64, 0x75, 0x63, 0x74,
	0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x44, 0x65,
	0x64, 0x75, 0x63, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x41, 0x64,
	0x6a, 0x75, 0x73, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0c, 0x41, 0x64, 0x6a, 0x75, 0x73, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1e,
	0x0a, 0x0a, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x46, 0x65, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0a, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x46, 0x65, 0x65, 0x12, 0x1e,
	0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x46, 0x65, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x46, 0x65, 0x65, 0x12, 0x22,
	0x0a, 0x0c, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x64, 0x75, 0x72, 0x65, 0x46, 0x65, 0x65, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x64, 0x75, 0x72, 0x65, 0x46,
	0x65, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x46, 0x65, 0x65,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x46, 0x65, 0x65,
	0x12, 0x2d, 0x0a, 0x09, 0x43, 0x6f, 0x6e, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x65, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x53, 0x43, 0x6f, 0x6e, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x43, 0x6f, 0x6e, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x65, 0x12,
	0x2b, 0x0a, 0x06, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x53, 0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x52, 0x06, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x12, 0x22, 0x0a, 0x0c,
	0x42, 0x75, 0x79, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x42, 0x75, 0x79, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x22, 0x8e, 0x01, 0x0a, 0x12, 0x53, 0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x68, 0x6f, 0x70, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x12, 0x52, 0x06, 0x53, 0x68, 0x6f, 0x70, 0x49, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x12, 0x52, 0x08, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x53,
	0x68, 0x6f, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x53,
	0x68, 0x6f, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x05, 0x49, 0x74, 0x65, 0x6d, 0x73,
	0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x53, 0x50, 0x72, 0x65, 0x70, 0x61, 0x72,
	0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x49, 0x74, 0x65, 0x6d,
	0x73, 0x22, 0xbb, 0x01, 0x0a, 0x11, 0x53, 0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x49, 0x74, 0x65, 0x6d, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x12, 0x52, 0x06, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x53, 0x6b, 0x75, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x12, 0x52, 0x05,
	0x53, 0x6b, 0x75, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x69,
	0x6d, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x70, 0x65, 0x63, 0x57, 0x6f, 0x72, 0x64, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x53, 0x70, 0x65, 0x63, 0x57, 0x6f, 0x72, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x50, 0x72,
	0x69, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x11, 0x52, 0x08, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2a,
	0xa9, 0x02, 0x0a, 0x0c, 0x45, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x06, 0x0a, 0x02, 0x5f, 0x33, 0x10, 0x00, 0x12, 0x17, 0x0a, 0x13, 0x53, 0x74, 0x61, 0x74,
	0x41, 0x77, 0x61, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x10,
	0x01, 0x12, 0x17, 0x0a, 0x13, 0x53, 0x74, 0x61, 0x74, 0x41, 0x77, 0x61, 0x69, 0x74, 0x69, 0x6e,
	0x67, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x10, 0x02, 0x12, 0x16, 0x0a, 0x12, 0x53, 0x74,
	0x61, 0x74, 0x41, 0x77, 0x61, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x69, 0x63, 0x6b, 0x75, 0x70,
	0x10, 0x03, 0x12, 0x18, 0x0a, 0x14, 0x53, 0x74, 0x61, 0x74, 0x41, 0x77, 0x61, 0x69, 0x74, 0x69,
	0x6e, 0x67, 0x53, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x10, 0x04, 0x12, 0x11, 0x0a, 0x0d,
	0x53, 0x74, 0x61, 0x74, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x6c, 0x65, 0x64, 0x10, 0x0b, 0x12,
	0x16, 0x0a, 0x12, 0x53, 0x74, 0x61, 0x74, 0x41, 0x77, 0x61, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x43,
	0x61, 0x6e, 0x63, 0x65, 0x6c, 0x10, 0x0c, 0x12, 0x10, 0x0a, 0x0c, 0x53, 0x74, 0x61, 0x74, 0x44,
	0x65, 0x63, 0x6c, 0x69, 0x6e, 0x65, 0x64, 0x10, 0x0d, 0x12, 0x10, 0x0a, 0x0c, 0x53, 0x74, 0x61,
	0x74, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x65, 0x64, 0x10, 0x0e, 0x12, 0x14, 0x0a, 0x10, 0x50,
	0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x6c, 0x79, 0x53, 0x68, 0x69, 0x70, 0x70, 0x65, 0x64, 0x10,
	0x05, 0x12, 0x0f, 0x0a, 0x0b, 0x53, 0x74, 0x61, 0x74, 0x53, 0x68, 0x69, 0x70, 0x70, 0x65, 0x64,
	0x10, 0x06, 0x12, 0x0d, 0x0a, 0x09, 0x53, 0x74, 0x61, 0x74, 0x42, 0x72, 0x65, 0x61, 0x6b, 0x10,
	0x07, 0x12, 0x11, 0x0a, 0x0d, 0x53, 0x74, 0x61, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74,
	0x65, 0x64, 0x10, 0x08, 0x12, 0x15, 0x0a, 0x11, 0x53, 0x74, 0x61, 0x74, 0x47, 0x6f, 0x6f, 0x64,
	0x73, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x65, 0x64, 0x10, 0x0f, 0x42, 0x1f, 0x0a, 0x13, 0x63,
	0x6f, 0x6d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x67, 0x6f, 0x32, 0x6f, 0x2e, 0x72,
	0x70, 0x63, 0x5a, 0x08, 0x2e, 0x2f, 0x3b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_message_order_dto_proto_rawDescOnce sync.Once
	file_message_order_dto_proto_rawDescData = file_message_order_dto_proto_rawDesc
)

func file_message_order_dto_proto_rawDescGZIP() []byte {
	file_message_order_dto_proto_rawDescOnce.Do(func() {
		file_message_order_dto_proto_rawDescData = protoimpl.X.CompressGZIP(file_message_order_dto_proto_rawDescData)
	})
	return file_message_order_dto_proto_rawDescData
}

var file_message_order_dto_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_message_order_dto_proto_msgTypes = make([]protoimpl.MessageInfo, 25)
var file_message_order_dto_proto_goTypes = []interface{}{
	(EOrderStatus)(0),                  // 0: EOrderStatus
	(*SOrderItem)(nil),                 // 1: SOrderItem
	(*SParentOrder)(nil),               // 2: SParentOrder
	(*SSubOrder)(nil),                  // 3: SSubOrder
	(*SSingleOrder)(nil),               // 4: SSingleOrder
	(*SConsigneeInfo)(nil),             // 5: SConsigneeInfo
	(*SubmitOrderRequest)(nil),         // 6: SubmitOrderRequest
	(*SubmitNormalOrderV2Request)(nil), // 7: SubmitNormalOrderV2Request
	(*NormalOrderSubmitResponse)(nil),  // 8: NormalOrderSubmitResponse
	(*GetOrderRequest)(nil),            // 9: GetOrderRequest
	(*TradeOrderSubmitRequest)(nil),    // 10: TradeOrderSubmitRequest
	(*TradeOrderTicketRequest)(nil),    // 11: TradeOrderTicketRequest
	(*ComplexItemsResponse)(nil),       // 12: ComplexItemsResponse
	(*OrderId)(nil),                    // 13: OrderId
	(*OrderNo)(nil),                    // 14: OrderNo
	(*OrderNoV2)(nil),                  // 15: OrderNoV2
	(*OrderIdOrNo)(nil),                // 16: OrderIdOrNo
	(*CancelOrderRequest)(nil),         // 17: CancelOrderRequest
	(*OrderShipmentRequest)(nil),       // 18: OrderShipmentRequest
	(*PrepareOrderRequest)(nil),        // 19: PrepareOrderRequest
	(*PrepareOrderResponse)(nil),       // 20: PrepareOrderResponse
	(*SPrepareOrderGroup)(nil),         // 21: SPrepareOrderGroup
	(*SPrepareOrderItem)(nil),          // 22: SPrepareOrderItem
	nil,                                // 23: SOrderItem.DataEntry
	nil,                                // 24: SSingleOrder.DataEntry
	nil,                                // 25: SubmitOrderRequest.DataEntry
}
var file_message_order_dto_proto_depIdxs = []int32{
	23, // 0: SOrderItem.Data:type_name -> SOrderItem.DataEntry
	5,  // 1: SParentOrder.Consignee:type_name -> SConsigneeInfo
	3,  // 2: SParentOrder.SubOrders:type_name -> SSubOrder
	1,  // 3: SSubOrder.Items:type_name -> SOrderItem
	5,  // 4: SSingleOrder.Consignee:type_name -> SConsigneeInfo
	1,  // 5: SSingleOrder.Items:type_name -> SOrderItem
	24, // 6: SSingleOrder.Data:type_name -> SSingleOrder.DataEntry
	25, // 7: SubmitOrderRequest.Data:type_name -> SubmitOrderRequest.DataEntry
	4,  // 8: TradeOrderSubmitRequest.Order:type_name -> SSingleOrder
	1,  // 9: ComplexItemsResponse.Value:type_name -> SOrderItem
	5,  // 10: PrepareOrderResponse.Consignee:type_name -> SConsigneeInfo
	21, // 11: PrepareOrderResponse.Groups:type_name -> SPrepareOrderGroup
	22, // 12: SPrepareOrderGroup.Items:type_name -> SPrepareOrderItem
	13, // [13:13] is the sub-list for method output_type
	13, // [13:13] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_message_order_dto_proto_init() }
func file_message_order_dto_proto_init() {
	if File_message_order_dto_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_message_order_dto_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SOrderItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_order_dto_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SParentOrder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_order_dto_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SSubOrder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_order_dto_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SSingleOrder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_order_dto_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SConsigneeInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_order_dto_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubmitOrderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_order_dto_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubmitNormalOrderV2Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_order_dto_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NormalOrderSubmitResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_order_dto_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOrderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_order_dto_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TradeOrderSubmitRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_order_dto_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TradeOrderTicketRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_order_dto_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ComplexItemsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_order_dto_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_order_dto_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderNo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_order_dto_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderNoV2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_order_dto_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderIdOrNo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_order_dto_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CancelOrderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_order_dto_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderShipmentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_order_dto_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PrepareOrderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_order_dto_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PrepareOrderResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_order_dto_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SPrepareOrderGroup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_order_dto_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SPrepareOrderItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_message_order_dto_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   25,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_message_order_dto_proto_goTypes,
		DependencyIndexes: file_message_order_dto_proto_depIdxs,
		EnumInfos:         file_message_order_dto_proto_enumTypes,
		MessageInfos:      file_message_order_dto_proto_msgTypes,
	}.Build()
	File_message_order_dto_proto = out.File
	file_message_order_dto_proto_rawDesc = nil
	file_message_order_dto_proto_goTypes = nil
	file_message_order_dto_proto_depIdxs = nil
}
